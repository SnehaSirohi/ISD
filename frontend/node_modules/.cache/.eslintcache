[{"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\index.js":"1","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\App.js":"2","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_2.js":"3","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_4.js":"4","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_3.js":"5","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\homepage\\homepage.js":"6","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Teacher_dashboard.js":"7","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\login2\\Login2.js":"8","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\login\\login.js":"9","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem3.js":"10","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Teacher_profile.js":"11","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem1.js":"12","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem2.js":"13","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_1.js":"14","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem1filters.js":"15","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\scheduletestreport.js":"16","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\Notifications.js":"17","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem4filters.js":"18","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\sem1.js":"19","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\change_student_password.js":"20","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem4.js":"21","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\semesterwise\\Testreport_semester.js":"22","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\teacher_studymaterial.js":"23","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\classreport_student.js":"24","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem2filters.js":"25","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem3filters.js":"26","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem3.js":"27","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem1.js":"28","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance Report\\attendancestudent.js":"29","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\assignmentreport_student.js":"30","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem2.js":"31","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem3.js":"32","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem4.js":"33","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem2.js":"34","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\Student_profile.js":"35","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Profile\\Profile.js":"36","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem1.js":"37","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem4.js":"38","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_4.js":"39","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_2.js":"40","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_1.js":"41","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_2.js":"42","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\loginteacher\\loginteacher.js":"43","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_1..js":"44","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\testreport_student.js":"45","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_4.js":"46","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\semesterwise\\studymaterial_semester.js":"47","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_3.js":"48","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_3.js":"49","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\teacher_assignment_report.js":"50","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\student_dashboard.js":"51","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\change_teacher_password.js":"52","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Teacherprofile2.js":"53","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Notifications.js":"54","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\scheduleclassreport.js":"55","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\semesterwise\\Classreport_semester.js":"56","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\semesterwise\\Assignmentreport_semester.js":"57","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Navbar.js":"58","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\Navbar.js":"59","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\List.js":"60","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\list.js":"61","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\list.js":"62","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\semesterwise\\list.js":"63","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\List.js":"64","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\list.js":"65","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\semesterwise\\list.js":"66","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\List.js":"67","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance Report\\list2.js":"68","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\list.js":"69","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Navbar.js":"70","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Attendance_report.js":"71","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem1Attendance.js":"72","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem3Attendance.js":"73","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem2Attendance.js":"74","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem4Attendance.js":"75","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin\\Admin Dashboard\\login.js":"76","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Classes_taken.js":"77","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\List.js":"78"},{"size":267,"mtime":1669050820530,"results":"79","hashOfConfig":"80"},{"size":10598,"mtime":1670670318483,"results":"81","hashOfConfig":"80"},{"size":5826,"mtime":1670478696336,"results":"82","hashOfConfig":"80"},{"size":5806,"mtime":1670478696338,"results":"83","hashOfConfig":"80"},{"size":5737,"mtime":1670478696337,"results":"84","hashOfConfig":"80"},{"size":947,"mtime":1670305914607,"results":"85","hashOfConfig":"80"},{"size":4429,"mtime":1670305914575,"results":"86","hashOfConfig":"80"},{"size":1367,"mtime":1669893182241,"results":"87","hashOfConfig":"80"},{"size":3087,"mtime":1670305914616,"results":"88","hashOfConfig":"80"},{"size":3169,"mtime":1670305914579,"results":"89","hashOfConfig":"80"},{"size":4582,"mtime":1670658220617,"results":"90","hashOfConfig":"80"},{"size":2499,"mtime":1670665759305,"results":"91","hashOfConfig":"80"},{"size":3115,"mtime":1670305914578,"results":"92","hashOfConfig":"80"},{"size":5793,"mtime":1670479538515,"results":"93","hashOfConfig":"80"},{"size":10772,"mtime":1670324469926,"results":"94","hashOfConfig":"80"},{"size":2797,"mtime":1670305914493,"results":"95","hashOfConfig":"80"},{"size":3003,"mtime":1670325150572,"results":"96","hashOfConfig":"80"},{"size":10349,"mtime":1670324469942,"results":"97","hashOfConfig":"80"},{"size":2349,"mtime":1669577843818,"results":"98","hashOfConfig":"80"},{"size":4390,"mtime":1669050820519,"results":"99","hashOfConfig":"80"},{"size":3169,"mtime":1670305914579,"results":"100","hashOfConfig":"80"},{"size":8704,"mtime":1670324469944,"results":"101","hashOfConfig":"80"},{"size":2998,"mtime":1670305914538,"results":"102","hashOfConfig":"80"},{"size":3032,"mtime":1670305914491,"results":"103","hashOfConfig":"80"},{"size":10521,"mtime":1670324469939,"results":"104","hashOfConfig":"80"},{"size":10354,"mtime":1670324469940,"results":"105","hashOfConfig":"80"},{"size":6691,"mtime":1670657241015,"results":"106","hashOfConfig":"80"},{"size":6911,"mtime":1670657219103,"results":"107","hashOfConfig":"80"},{"size":8670,"mtime":1670373913052,"results":"108","hashOfConfig":"80"},{"size":2660,"mtime":1670305914445,"results":"109","hashOfConfig":"80"},{"size":7208,"mtime":1670657156172,"results":"110","hashOfConfig":"80"},{"size":7175,"mtime":1670657151306,"results":"111","hashOfConfig":"80"},{"size":6778,"mtime":1670657254716,"results":"112","hashOfConfig":"80"},{"size":6776,"mtime":1670657232755,"results":"113","hashOfConfig":"80"},{"size":4532,"mtime":1670478696341,"results":"114","hashOfConfig":"80"},{"size":1189,"mtime":1670305914541,"results":"115","hashOfConfig":"80"},{"size":7045,"mtime":1670657095423,"results":"116","hashOfConfig":"80"},{"size":7232,"mtime":1670657146360,"results":"117","hashOfConfig":"80"},{"size":9899,"mtime":1670655379503,"results":"118","hashOfConfig":"80"},{"size":9573,"mtime":1670655379497,"results":"119","hashOfConfig":"80"},{"size":9958,"mtime":1670655379916,"results":"120","hashOfConfig":"80"},{"size":9838,"mtime":1670655379917,"results":"121","hashOfConfig":"80"},{"size":3295,"mtime":1670655379920,"results":"122","hashOfConfig":"80"},{"size":11430,"mtime":1670655379489,"results":"123","hashOfConfig":"80"},{"size":3004,"mtime":1670305914500,"results":"124","hashOfConfig":"80"},{"size":9804,"mtime":1670655379919,"results":"125","hashOfConfig":"80"},{"size":8462,"mtime":1670324469949,"results":"126","hashOfConfig":"80"},{"size":9722,"mtime":1670655379498,"results":"127","hashOfConfig":"80"},{"size":9690,"mtime":1670655379918,"results":"128","hashOfConfig":"80"},{"size":3048,"mtime":1670478696333,"results":"129","hashOfConfig":"80"},{"size":4676,"mtime":1670655379507,"results":"130","hashOfConfig":"80"},{"size":4929,"mtime":1670655379796,"results":"131","hashOfConfig":"80"},{"size":2661,"mtime":1670655379793,"results":"132","hashOfConfig":"80"},{"size":1560,"mtime":1670655379510,"results":"133","hashOfConfig":"80"},{"size":2956,"mtime":1670655379506,"results":"134","hashOfConfig":"80"},{"size":8809,"mtime":1670655379507,"results":"135","hashOfConfig":"80"},{"size":9382,"mtime":1670655379476,"results":"136","hashOfConfig":"80"},{"size":4001,"mtime":1670305914540,"results":"137","hashOfConfig":"80"},{"size":5130,"mtime":1670305914501,"results":"138","hashOfConfig":"80"},{"size":1072,"mtime":1670305914454,"results":"139","hashOfConfig":"80"},{"size":733,"mtime":1670305914449,"results":"140","hashOfConfig":"80"},{"size":605,"mtime":1669875165418,"results":"141","hashOfConfig":"80"},{"size":1188,"mtime":1670655379486,"results":"142","hashOfConfig":"80"},{"size":2078,"mtime":1670655379510,"results":"143","hashOfConfig":"80"},{"size":599,"mtime":1669875165418,"results":"144","hashOfConfig":"80"},{"size":613,"mtime":1669875165418,"results":"145","hashOfConfig":"80"},{"size":641,"mtime":1670305914460,"results":"146","hashOfConfig":"80"},{"size":592,"mtime":1670305914453,"results":"147","hashOfConfig":"80"},{"size":657,"mtime":1669875165418,"results":"148","hashOfConfig":"80"},{"size":3124,"mtime":1670670336998,"results":"149","hashOfConfig":"80"},{"size":1745,"mtime":1670668394302,"results":"150","hashOfConfig":"80"},{"size":8780,"mtime":1670669818695,"results":"151","hashOfConfig":"80"},{"size":8461,"mtime":1670668894132,"results":"152","hashOfConfig":"80"},{"size":8580,"mtime":1670668906576,"results":"153","hashOfConfig":"80"},{"size":8441,"mtime":1670668873562,"results":"154","hashOfConfig":"80"},{"size":3237,"mtime":1670668375646,"results":"155","hashOfConfig":"80"},{"size":2813,"mtime":1670672237301,"results":"156","hashOfConfig":"80"},{"size":625,"mtime":1670671992644,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1jbdzvn",{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"160"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"160"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"160"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"160"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"160"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"160"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"160"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"160"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"160"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"160"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"160"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"160"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"160"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"160"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"160"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"160"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"160"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"160"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"160"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"160"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"160"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"160"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"160"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"160"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"160"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"160"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"160"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"160"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"160"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"160"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"160"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"160"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"160"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"160"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"160"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"160"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"160"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"160"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"160"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"160"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"160"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"160"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"160"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"160"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"160"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\index.js",[],["379","380"],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\App.js",["381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\r\nimport Admin from './components/Admin/Admin Dashboard/login'\r\nimport Login from './components/login/login';\r\nimport Login2 from './components/login2/Login2';\r\nimport LoginTeacher from './components/loginteacher/loginteacher';\r\nimport Homepage from './components/homepage/homepage'\r\nimport AttendanceSem1 from './components/Attendance list/Sem_1';\r\nimport AttendanceSem2 from './components/Attendance list/Sem_2';\r\nimport AttendanceSem3 from './components/Attendance list/Sem_3';\r\nimport AttendanceSem4 from './components/Attendance list/Sem_4';\r\nimport ClassScheduleSem1 from './components/Class Schedule/Sem_1.'\r\nimport ClassScheduleSem2 from './components/Class Schedule/Sem_2'\r\nimport ClassScheduleSem3 from './components/Class Schedule/Sem_3'\r\nimport ClassScheduleSem4 from './components/Class Schedule/Sem_4'\r\nimport TestscheduleSem1 from './components/Test Schedule/Sem_1';\r\nimport TestscheduleSem2 from './components/Test Schedule/Sem_2';\r\nimport TestscheduleSem3 from './components/Test Schedule/Sem_3';\r\nimport TestscheduleSem4 from './components/Test Schedule/Sem_4';\r\nimport Student_Dashboard from './components/Student_dashboard/student_dashboard';\r\nimport Student_Profile from './components/Student_dashboard/Student_profile'\r\nimport ChangeStudentPassword from './components/Student_dashboard/change_student_password';\r\nimport Teacher_Dashboard from './components/Teacher_dashboard/Teacher_dashboard';\r\nimport Teacher_Profile from './components/Teacher_dashboard/Teacher_profile'\r\nimport ChangeTeacherPassword from './components/Teacher_dashboard/change_teacher_password';\r\nimport Sem1 from './components/Teacher_dashboard/sem1';\r\nimport Sem2 from './components/Teacher_dashboard/sem2';\r\nimport Sem3 from './components/Teacher_dashboard/sem3';\r\nimport Sem4 from './components/Teacher_dashboard/sem4';\r\nimport Sem1_Student from './components/Student_dashboard/sem1';\r\nimport Sem1filters from './components/Filters/Sem1filters';\r\nimport Sem2filters from './components/Filters/Sem2filters';\r\nimport Sem3filters from './components/Filters/Sem3filters';\r\nimport Sem4filters from './components/Filters/Sem4filters';\r\nimport Classreport from './components/Scheduled_Class_List/scheduleclassreport';\r\nimport Testreport from './components/Scheduled_test_List/scheduletestreport';\r\nimport Testreport_student from './components/Scheduled_test_List/testreport_student';\r\nimport Classreport_student from './components/Scheduled_Class_List/classreport_student';\r\nimport Classreport_semester from './components/Scheduled_Class_List/semesterwise/Classreport_semester';\r\nimport Testreport_semester from './components/Scheduled_test_List/semesterwise/Testreport_semester';\r\nimport Assignmentreport_semester from './components/Assignment_report/semesterwise/Assignmentreport_semester';\r\nimport Attendancereport_student from './components/Attendance Report/attendancestudent';\r\nimport Assignmentreport_student from './components/Assignment_report/assignmentreport_student';\r\nimport Assignmentreport_teacher from './components/Assignment_report/teacher_assignment_report';\r\nimport Studymaterial_teacher from './components/Study Material/teacher_studymaterial';\r\nimport Studymaterial_student from './components/Study Material/semesterwise/studymaterial_semester';\r\nimport UploadAssignmentsem1 from './components/Assignment_Upload/Upload_assignment_sem1';\r\nimport UploadAssignmentsem2 from './components/Assignment_Upload/Upload_assignment_sem2';\r\nimport UploadAssignmentsem3 from './components/Assignment_Upload/Upload_assignment_sem3';\r\nimport UploadAssignmentsem4 from './components/Assignment_Upload/Upload_assignment_sem4';\r\nimport Notifications from './components/Student_dashboard/Notifications';\r\nimport UploadStudyMaterialSem1 from './components/Study Material/UploadStudyMaterialSem1';\r\nimport UploadStudyMaterialSem2 from './components/Study Material/UploadStudyMaterialSem2';\r\nimport UploadStudyMaterialSem3 from './components/Study Material/UploadStudyMaterialSem3';\r\nimport UploadStudyMaterialSem4 from './components/Study Material/UploadStudyMaterialSem4';\r\nimport Teacherprofile2 from './components/Teacher_dashboard/Teacherprofile2';\r\nimport TeacherNotifications from './components/Teacher_dashboard/Notifications'\r\nimport Profile from './components/Teacher_dashboard/Profile/Profile';\r\nimport Attendance_report from './components/Admin Dashboard/Attendance_report';\r\nimport Navbar from './components/Admin Dashboard/Navbar';\r\nimport AdminSem1Attendance from './components/Admin Dashboard/Sem1Attendance';\r\nimport AdminSem2Attendance from './components/Admin Dashboard/Sem2Attendance';\r\nimport AdminSem3Attendance from './components/Admin Dashboard/Sem3Attendance';\r\nimport AdminSem4Attendance from './components/Admin Dashboard/Sem4Attendance';\r\nimport AdClasses_taken from './components/Admin Dashboard/Classes_taken';\r\nfunction App() {\r\n  useEffect(() => {\r\n    window.process = {\r\n      ...window.process,\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path='/' exact element={<Homepage />} />\r\n          <Route path = '/admin' element = {<Admin />} />\r\n          <Route path='/login' element={<Login />} />\r\n          <Route path='/login2' element={<Login2 />} />\r\n          <Route path='/loginteacher' element={<LoginTeacher />} />\r\n          <Route path='/dashboard' element={<Student_Dashboard />} />\r\n          <Route path='/dashboard/profile' element={<Student_Profile />} />\r\n          <Route path=\"/dashboard/changepassword\" element={<ChangeStudentPassword />} />\r\n          <Route path='/Studentdashboard/sem1' element={<Sem1_Student />} />\r\n          <Route path='/testschedule' element={<Testreport_student />} />\r\n          <Route path='/classschedule' element={<Classreport_student />} />\r\n          <Route path='/assignmentreportstudent' element={<Assignmentreport_student />} />\r\n          <Route path='/Teacherdashboard/assignmentreportteacher' element={<Assignmentreport_teacher />} />\r\n          <Route path='/Teacherdashboard' element={<Teacher_Dashboard />} />\r\n          <Route path='/Teacherdashboard/profile' element={<Teacher_Profile />} />\r\n          <Route path=\"/Teacherdashboard/changepassword\" element={<ChangeTeacherPassword />} />\r\n          <Route path='/Teacherdashboard/sem1/attendance' element={<AttendanceSem1 />} />\r\n          <Route path='/Teacherdashboard/sem2/attendance' element={<AttendanceSem2 />} />\r\n          <Route path='/Teacherdashboard/sem3/attendance' element={<AttendanceSem3 />} />\r\n          <Route path='/Teacherdashboard/sem4/attendance' element={<AttendanceSem4 />} />\r\n          <Route path='/Teacherdashboard/sem1' element={<Sem1 />} />\r\n          <Route path='/Teacherdashboard/sem2' element={<Sem2 />} />\r\n          <Route path='/Teacherdashboard/sem3' element={<Sem3 />} />\r\n          <Route path='/Teacherdashboard/sem4' element={<Sem4 />} />\r\n          <Route path='/Teacherdashboard/sem1/classschedule' element={<ClassScheduleSem1 />} />\r\n          <Route path='/Teacherdashboard/sem2/classschedule' element={<ClassScheduleSem2 />} />\r\n          <Route path='/Teacherdashboard/sem3/classschedule' element={<ClassScheduleSem3 />} />\r\n          <Route path='/Teacherdashboard/sem4/classschedule' element={<ClassScheduleSem4 />} />\r\n          <Route path=\"/Teacherdashboard/sem1/testschedule\" element={<TestscheduleSem1 />} />\r\n          <Route path=\"/Teacherdashboard/sem2/testschedule\" element={<TestscheduleSem2 />} />\r\n          <Route path=\"/Teacherdashboard/sem3/testschedule\" element={<TestscheduleSem3 />} />\r\n          <Route path=\"/Teacherdashboard/sem4/testschedule\" element={<TestscheduleSem4 />} />\r\n          <Route path='/scheduledclassreport' element={<Classreport />} />\r\n          <Route path='/scheduledtestreport' element={<Testreport />} />\r\n          <Route path='/scheduledclass' element={<Classreport_semester />} />\r\n          <Route path='/scheduledtests' element={<Testreport_semester />} />\r\n          <Route path='/assignments' element={<Assignmentreport_semester />} />\r\n          <Route path='/studymaterial' element={<Studymaterial_student />} />\r\n          <Route path='/attendancereport' element={<Attendancereport_student />} />\r\n          <Route path='/Teacherdashboard/studymaterial' element={<Studymaterial_teacher />} />\r\n          <Route path='/Teacherdashboard/sem1/assignment' element={<UploadAssignmentsem1 />} />\r\n          <Route path='/Teacherdashboard/sem2/assignment' element={<UploadAssignmentsem2 />} />\r\n          <Route path='/Teacherdashboard/sem3/assignment' element={<UploadAssignmentsem3 />} />\r\n          <Route path='/Teacherdashboard/sem4/assignment' element={<UploadAssignmentsem4 />} />\r\n          <Route path='/Teacherdashboard/sem1/studymaterial' element={<UploadStudyMaterialSem1 />} />\r\n          <Route path='/Teacherdashboard/sem2/studymaterial' element={<UploadStudyMaterialSem2 />} />\r\n          <Route path='/Teacherdashboard/sem3/studymaterial' element={<UploadStudyMaterialSem3 />} />\r\n          <Route path='/Teacherdashboard/sem4/studymaterial' element={<UploadStudyMaterialSem4 />} />\r\n          <Route path='/Notifications' element={<Notifications />} />\r\n          <Route path=\"/Teacherdashboard/filters/sem1\" element={<Sem1filters />} />\r\n          <Route path=\"/Teacherdashboard/filters/sem2\" element={<Sem2filters />} />\r\n          <Route path=\"/Teacherdashboard/filters/sem3\" element={<Sem3filters />} />\r\n          <Route path=\"/Teacherdashboard/filters/sem4\" element={<Sem4filters />} />\r\n          <Route path=\"/Teacherdashboard/profile2\" element={<Teacherprofile2 />} />\r\n          <Route path=\"/teacherNotifications\" element={<TeacherNotifications />} />\r\n          <Route path=\"/admindashboard/attendancereport\" element={<Attendance_report />} />\r\n          <Route path=\"/admindashboard/Sem1/attendance\" element={<AdminSem1Attendance />} />\r\n          <Route path=\"/admindashboard/Sem2/attendance\" element={<AdminSem2Attendance />} />\r\n          <Route path=\"/admindashboard/Sem3/attendance\" element={<AdminSem3Attendance />} />\r\n          <Route path=\"/admindashboard/Sem4/attendance\" element={<AdminSem4Attendance />} />\r\n          <Route path=\"/admindashboard/classestaken\" element={<AdClasses_taken />} />\r\n          <Route path=\"/admindashboard\" element={<Navbar />} />\r\n          <Route path=\"/profile3\" element={<Profile />} />\r\n\r\n\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_2.js",["399","400","401","402","403","404","405"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./attendance.css\";\r\nimport jwt from 'jsonwebtoken' //\r\nimport List from \"./List\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar.js\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nconst Sem_2 = () => {\r\n\r\n  //\r\n  const navigate = useNavigate();\r\n  const [students, setstudents] = useState([]);\r\n  const [status, setstatus] = useState({});\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\r\n  const [NitishaAgg,setNitishaAgg]=useState(false)\r\n  const [MKDas,setMKDas]=useState(false)\r\n  const [Sanjeev,setSanjeev]=useState(false)\r\n  const[success,setsuccess]= useState(false)\r\n\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendance\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n    console.log(json.name)\r\n    if(json.name==\"Unmesh Shukla\")\r\n    {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if(json.name==\"Nitisha Aggarwal\")\r\n    {\r\n      setNitishaAgg(true)\r\n    }\r\n    if(json.name==\"M.K Das\")\r\n    {\r\n      setMKDas(true)\r\n    }\r\n    if(json.name==\"Sanjeev\")\r\n    {\r\n      setSanjeev(false)\r\n    }\r\n\r\n    let data1 = json.data.filter((data) => data.semester == \"Sem-2\");\r\n    setstudents(data1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        fetchdata();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  async function Submit(e) {\r\n    if (!subject) {\r\n      alert(\"Please select the subject \")\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      const response = await fetch(\"http://localhost:4000/attendance/sem2\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'), //\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          status,\r\n        }),\r\n      }).then(async (response) => {\r\n        let dataa = await response.json();\r\n        setsuccess(dataa.success)\r\n      });\r\n      setTimeout(() => {\r\n         setsuccess(false)\r\n      }, 2500);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n      <div className=\"attendencebody\">\r\n        <h1 className=\"atte1\">Sem 2 attendance</h1>\r\n        {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer \">\r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Computer Communication and Networks\">\r\n              Computer Communication and Networks\r\n            </option>\r\n            <option value=\"Operating Systems\">Operating Systems</option>\r\n          </select></div>}\r\n          \r\n        {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\r\n          \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Database Systems\">Database Systems</option>\r\n          </select></div>}\r\n          \r\n        {MKDas && <div className=\"mb-3 selectsubjectcontainer \">\r\n          \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option> \r\n            <option value=\"Applied Machine Learning\">\r\n              Applied Machine Learning\r\n            </option>\r\n          </select></div>}\r\n          \r\n        {Sanjeev && <div className=\"mb-3 selectsubjectcontainer \">\r\n          \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Open Elective-1\">Open Elective-1</option>\r\n          </select></div>}\r\n\r\n      <div className=\"table-1\">\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"heading-1\">\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Present</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List students={students} status={status} setstatus={setstatus} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"button-1\">\r\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\r\n      </div> \r\n    </div>\r\n    {success && <div className=\"container-fluid attendanceblacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Attendance Saved</h4>\r\n</div>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_2;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_4.js",["406","407","408","409","410","411","412"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./attendance.css\";\r\nimport List from \"./List\";\r\nimport jwt from 'jsonwebtoken' //\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\n\r\nconst Sem_4 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [students, setstudents] = useState([]);\r\n  const [status, setstatus] = useState({});\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\r\n  const [NitishaAgg,setNitishaAgg]=useState(false)\r\n  const [MKDas,setMKDas]=useState(false)\r\n  const [Sanjeev,setSanjeev]=useState(false)\r\n  const[success,setsuccess]= useState(false)\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendance\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n    console.log(json.name)\r\n\r\n    if(json.name == \"Unmesh Shukla\")\r\n    {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if(json.name==\"Nitisha Aggarwal\")\r\n    {\r\n      setNitishaAgg(true)\r\n    }\r\n    if(json.name==\"M.K Das\")\r\n    {\r\n      setMKDas(true)\r\n    }\r\n    if(json.name==\"Sanjeev\")\r\n    {\r\n      setSanjeev(true)\r\n    }\r\n\r\n    let data1 = json.data.filter((data) => data.semester == \"Sem-4\");\r\n    setstudents(data1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        fetchdata();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  async function Submit(e) {\r\n    if (!subject) {\r\n      alert(\"Please select the subject \")\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      const response = await fetch(\"http://localhost:4000/attendance/sem4\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'), //\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          status,\r\n        }),\r\n      }).then(async (response) => {\r\n        let dataa = await response.json();\r\n        setsuccess(dataa.success)\r\n      });\r\n      setTimeout(() => {\r\n         setsuccess(false)\r\n      }, 2500);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"attendencebody\">\r\n        <Navbar/>\r\n        <h1 className=\"atte1\">Sem 4 attendance</h1>\r\n        {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer \">\r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Internet of Things Systems, Security and Cloud\">\r\n              Internet of Things Systems, Security and Cloud\r\n            </option>\r\n          </select>\r\n        </div>}\r\n        {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\r\n            \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Health Informatics\">Health Informatics</option>\r\n          </select>\r\n        </div>}\r\n        {Sanjeev && <div className=\"mb-3 selectsubjectcontainer \">\r\n            \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Dissertation Project\">Dissertation Project</option>\r\n          </select>\r\n        </div>}\r\n        {MKDas && <div className=\"mb-3 selectsubjectcontainer\">\r\n            \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Research Methods in Informatics\">\r\n              Research Methods in Informatics\r\n            </option>\r\n          </select>\r\n        </div>}\r\n\r\n      <div className=\"table-1\">\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"heading-1\">\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Present</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List students={students} status={status} setstatus={setstatus} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"button-1\">\r\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\r\n      </div> \r\n    </div>\r\n    {success && <div className=\"container-fluid attendanceblacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Attendance Saved</h4>\r\n</div>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_4;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_3.js",["413","414","415","416","417","418","419"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./attendance.css\";\r\nimport List from \"./List\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar.js\";\r\nimport jwt from 'jsonwebtoken' //\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Sem_3 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [students, setstudents] = useState([]);\r\n  const [status, setstatus] = useState({});\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\r\n  const [NitishaAgg,setNitishaAgg]=useState(false)\r\n  const [MKDas,setMKDas]=useState(false)\r\n  const [Manish,setManish]=useState(false)\r\n  const[success,setsuccess]= useState(false)\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendance\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    console.log(json)\r\n    console.log(json.name)\r\n    if(json.name==\"Unmesh Shukla\")\r\n    {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if(json.name==\"Nitisha Aggarwal\")\r\n    {\r\n      setNitishaAgg(true)\r\n    }\r\n    if(json.name==\"M.K Das\")\r\n    {\r\n      setMKDas(true)\r\n    }\r\n    if(json.name==\"Manish\")\r\n    {\r\n      setManish(true)\r\n    }\r\n\r\n    let data1 = json.data.filter((data) => data.semester == \"Sem-3\");\r\n    setstudents(data1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        fetchdata();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  async function Submit(e) {\r\n    if (!subject) {\r\n      alert(\"Please select the subject \")\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      const response = await fetch(\"http://localhost:4000/attendance/sem3\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'), //\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          status,\r\n        }),\r\n      }).then(async (response) => {\r\n        let dataa = await response.json();\r\n        setsuccess(dataa.success)\r\n      });\r\n      setTimeout(() => {\r\n         setsuccess(false)\r\n      }, 2500);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"attendencebody\">\r\n        <Navbar/>\r\n        <h1 className=\"atte1\">Sem-3 attendance</h1>\r\n        {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer \">\r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Information System Design\">\r\n              Information System Design\r\n            </option>\r\n          </select>\r\n        </div>}\r\n        {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\r\n          \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Cloud Computing\">Cloud Computing</option>\r\n          </select>\r\n        </div>}\r\n        {MKDas && <div className=\"mb-3 selectsubjectcontainer \">\r\n          \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"Software Engineering\">Software Engineering</option>\r\n          </select>\r\n        </div>}\r\n        {Manish && <div className=\"mb-3 selectsubjectcontainer \">\r\n          \r\n          <select\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            value={subject}\r\n            onChange={(e) => setsubject(e.target.value)}>\r\n            <option>Select Subject</option>\r\n            <option value=\"IT Planning and Management\">\r\n              IT Planning and Management\r\n            </option>\r\n          </select>\r\n        </div>}\r\n\r\n      <div className=\"table-1\">\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"heading-1\">\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Present</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List students={students} status={status} setstatus={setstatus} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"button-1\">\r\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\r\n      </div> \r\n    </div>\r\n    {success && <div className=\"container-fluid attendanceblacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Attendance Saved</h4>\r\n</div>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_3;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\homepage\\homepage.js",["420","421","422"],"import React from \"react\";\r\nimport \"./homepage.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classopedia from './classopedia.png'\r\nimport image1 from './image1.png'\r\nimport image2 from './image2.png'\r\nconst Homepage = () => {\r\n    return (\r\n        <div className=\"homepage\">\r\n            <div className=\"Clogo\">\r\n                <img src={classopedia} className=\"classopedialogo\" ></img>\r\n            </div>\r\n\r\n            <img src={image1} className=\"image1\" ></img>\r\n            <img src={image2} className=\"image2\" ></img>\r\n            <div className=\"mt-4\">\r\n                <h3>Choose Your Role</h3>\r\n                <div className=\"bttnmargin\">\r\n                    <Link to=\"/login\"><div className=\"button bttn-1\">Student</div></Link>\r\n                    <Link to=\"/loginteacher\"><div className=\"button bttn-2\">Teacher</div></Link>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Homepage","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Teacher_dashboard.js",["423","424"],"import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport logo from \"./image.png\"\r\nimport \"./Teacher_dashboard.css\";\r\n\r\n\r\nconst Teacher_Dashboard = (props) => {\r\n    const [totalClasstaken, setTotalClasstaken] = useState([])\r\n    const [totalClassScheduled, setTotalClassScheduled] = useState([])\r\n    const [totalTestScheduled, setTotalTestScheduled] = useState([])\r\n    const [totalAssignments, setTotalAssignments] = useState([])\r\n    const [totalStudymaterial, setTotalStudymaterial] = useState([])\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState([])\r\n    const [email, setEmail] = useState([])\r\n\r\n    async function populatedashboard() {\r\n        const req = await fetch('http://localhost:4000/Teacherdashboard', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('token'),\r\n\r\n            },\r\n        })\r\n\r\n        const json = await req.json()\r\n\r\n        console.log(json)\r\n        if (json.status === 'ok') {\r\n            setName(json.name)\r\n            setEmail(json.email)\r\n            setTotalClassScheduled(json.Classes_Scheduled)\r\n            setTotalClasstaken(json.Classes_taken_count)\r\n            setTotalTestScheduled(json.Test_Scheduled)\r\n            setTotalAssignments(json.Assignments_posted)\r\n            setTotalStudymaterial(json.Study_Material_posted)\r\n        }\r\n        else {\r\n            // alert(data.error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n            const user = jwt.decode(token)\r\n            if (!user) {\r\n                localStorage.removeItem('token')\r\n                navigate(\"/\");\r\n            } else {\r\n                populatedashboard()\r\n            }\r\n        }\r\n    }, [name], [email])\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div>\r\n                <div className=\"flex dashboardcontent\">\r\n                    <div class=\"col main pt-5  dashboardbackground\">\r\n                        <div class=\"row mb-3 dashblocks\">\r\n                            <Link to='/scheduledclassreport'><div class=\"col-xl-3 col-sm-6 blockcolour\">\r\n                                <h5 class=\"text-uppercase pt-3\">CLASS SCHEDULED</h5>\r\n                                <h1 class=\"display-4\">{totalClassScheduled}</h1>\r\n                            </div></Link>\r\n                            <Link to='/scheduledtestreport'><div class=\"col-xl-3 col-sm-6 blockcolour\">\r\n                            <h5 class=\"text-uppercase pt-3\">TEST SCHEDULED</h5>\r\n                                <h1 class=\"display-4\">{totalTestScheduled}</h1>\r\n                            </div></Link>\r\n                            <Link to='/Teacherdashboard/assignmentreportteacher'><div class=\"col-xl-3 col-sm-6 blockcolour\">\r\n                               <h5 class=\"text-uppercase pt-3\">ASSIGNMENTS POSTED</h5>\r\n                                <h1 class=\"display-4\">{totalAssignments}</h1>\r\n                            </div></Link>\r\n                        </div>\r\n\r\n                        <div class=\"row overviewdatacontent\">\r\n                            <div class=\"col-lg-7 col-md-6 col-sm-12 datacontent flex\">\r\n                                \r\n                                <div class=\"classinfo\">\r\n                                    <h5>Total classes Held</h5>\r\n                                    <h5>Total Tests</h5>\r\n                                    <h5>Total Study Material Uploaded</h5>\r\n                                </div>\r\n                                <div class=\"classinfoval\">\r\n                                    <h5>{totalClasstaken}</h5>\r\n                                    <h5>{totalTestScheduled}</h5>\r\n                                    <h5>{totalStudymaterial}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profilecontent\"\r\n                        style={{\r\n                            display: props.show ? \"block\" : \"none\"\r\n                        }}>\r\n                        <br /><br />\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Teacher_Dashboard\r\n\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\login2\\Login2.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\login\\login.js",["425"],"import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Login = () => {\r\n\r\n  const navigate = useNavigate();\r\n  \r\n  const [ user, setUser] = useState({\r\n    enrollNum: \"\",\r\n    password: \"\"\r\n  })\r\n\r\n  const [loginstatus, setLoginstatus] = useState(\"\")\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value} = e.target\r\n    setUser({\r\n      ...user,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const login = async(e) => {\r\n    e.preventDefault();\r\n    await fetch(\"http://localhost:4000/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then(async(response) => {\r\n      let data = await response.json();\r\n      console.log(data);\r\n      if (data.student) {\r\n        localStorage.setItem('token', data.student)\r\n        alert(\"login successful\")\r\n        navigate(\"/dashboard\");\r\n        setLoginstatus(data.message);\r\n      } else {\r\n        alert(\"please check your username and password\")\r\n        setLoginstatus(data.message);\r\n      }\r\n  });\r\n\r\n  }\r\n\r\n return (\r\n      <>\r\n      <section className=\"login2body\">\r\n        <div className=\"screen\">\r\n          <div className=\"screen__content\">\r\n            <form className=\"login\">\r\n              {/* <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Login</h3> */}\r\n\r\n              <div className=\"login__field\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login__input\"\r\n                  id=\"floatingInput\"\r\n                  name=\"enrollNum\"\r\n                  placeholder=\"Enrollment Number\"\r\n                  value={user.enrollNum}\r\n                  onChange={ handleChange }\r\n                />\r\n              </div>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"login__input\"\r\n                  id=\"floatingPassword\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={user.password}\r\n                  onChange={ handleChange }\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button login__submit\"\r\n                onClick={login}\r\n              >\r\n                <span className=\"button__text\">Log In Now</span>\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div class=\"screen__background\">\r\n                    <span class=\"screen__background__shape screen__background__shape4\"></span>\r\n                    <span class=\"screen__background__shape screen__background__shape3\"></span>\r\n                    <span class=\"screen__background__shape screen__background__shape2\"></span>\r\n                    <span class=\"screen__background__shape screen__background__shape1\"></span>\r\n                </div>\r\n          </div>\r\n      </section>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem3.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Teacher_profile.js",["426","427","428"],"import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport \"./Teacher_profile.css\"\r\nimport Navbar from './Navbar'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from './image.png'\r\n\r\nconst Teacher_Profile = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState([])\r\n    const [email, setEmail] = useState([])\r\n    const [teacher_id, setTeacher_id] = useState([])\r\n    const [contactNum, setContactNum] = useState([])\r\n\r\n    async function populatedashboard() {\r\n        const req = await fetch('http://localhost:4000/Teacherdashboard/profile', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('token'),\r\n\r\n            },\r\n        })\r\n\r\n        const json = await req.json()\r\n\r\n        console.log(json)\r\n        if (json.status === 'ok') {\r\n            setName(json.name)\r\n            setEmail(json.email)\r\n            setTeacher_id(json.Teacher_id)\r\n            setContactNum(json.contactNum)\r\n        }\r\n        else {\r\n            // alert(data.error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n            const user = jwt.decode(token)\r\n            if (!user) {\r\n                localStorage.removeItem('token')\r\n                navigate(\"/\");\r\n            } else {\r\n                populatedashboard()\r\n            }\r\n        }\r\n    }, [name], [email])\r\n\r\n     return (\r\n        <>\r\n            <Navbar />\r\n            <h1 className='Teacherheading'>Teacher Profile</h1>\r\n            <div class=\"emp-profile\">\r\n                <div className='pblock'>\r\n                    <form method=\"post\">\r\n                        <div className='photo_block'>\r\n                            <div class=\"profile-img\">\r\n                                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog\" alt=\"\" />\r\n                            </div>\r\n                            <div class=\"profile-head\">\r\n                                <h2>\r\n                                   {name}\r\n                                </h2>\r\n                                <h4>\r\n                                    {teacher_id}\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"teacherInfo\">\r\n                            <div className='keys'>\r\n                                <p>User Id: </p>\r\n                                <p>DOB </p>\r\n                                <p>Email: </p>\r\n                                <p>Phone: </p>\r\n                            </div>\r\n                            <div className='values'>\r\n                                <p> {teacher_id}</p>\r\n                                <p>28/11/2000</p>\r\n                                <p>{email}</p>\r\n                                <p>123 456 7890</p>\r\n                            </div>\r\n                            <div className='teacherinfo2'>\r\n                                <p>User Id: </p>\r\n                                <h6>{teacher_id}</h6>\r\n                                <p>DOB </p>\r\n                                <h6>28/11/2000</h6>\r\n                                <p>Email: </p>\r\n                                <h6>{email}</h6>\r\n                                <p>Phone: </p>\r\n                                <h6>{contactNum}</h6>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                 <div className='text-center' id='prof_block'>\r\n                    <button id='butn' class=\"btn btn-primary\"  onClick={() => {\r\n                                localStorage.removeItem('token')\r\n                                navigate(\"/\")\r\n                            }}>Logout</button>\r\n                    <button id='butn' class=\"btn btn-primary-1\" >Reset Password</button>\r\n                </div>\r\n    </div>\r\n                        {/* <div className='buttons'>\r\n                            <button onClick={() => {\r\n                                localStorage.removeItem('token')\r\n                                navigate(\"/\")\r\n                            }}>Logout</button>\r\n                            <button className=\"resetpass\"><Link to=\"/Teacherdashboard/changepassword\"><div>Reset Password</div></Link></button>\r\n                        </div> */}\r\n\r\n                 \r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Teacher_Profile","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem1.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem2.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\Sem_1.js",["429","430","431","432","433","434","435"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./attendance.css\";\r\nimport jwt from 'jsonwebtoken' //\r\nimport List from \"./List\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar.js\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Sem_1 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [students, setstudents] = useState([]);\r\n  const [status, setstatus] = useState({});\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [SunilKumar, setSunilKumar] = useState(false)\r\n  const[success,setsuccess]= useState(false)\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendance\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n\r\n      },\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (json.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (json.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (json.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (json.name == \"Sunil Kumar\") {\r\n      setSunilKumar(true)\r\n    }\r\n\r\n    let data1 = json.data.filter((data) => data.semester == \"Sem-1\");\r\n    setstudents(data1);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        fetchdata()\r\n      }\r\n    }\r\n\r\n  }, []);\r\n\r\n  async function Submit(e) {\r\n    if (!subject) {\r\n      alert(\"Please select the subject \")\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      const response = await fetch(\"http://localhost:4000/attendance/sem1\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'), //\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          status,\r\n        }),\r\n      }).then(async (response) => {\r\n        let dataa = await response.json();\r\n        setsuccess(dataa.success)\r\n      });\r\n      setTimeout(() => {\r\n         setsuccess(false)\r\n      }, 2500);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className=\"attendencebody\">\r\n      <Navbar />\r\n      <h1 className=\"atte1\">Sem-1 Attendance</h1>\r\n      {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subject}\r\n          required\r\n          onChange={(e) => setsubject(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n          <option value=\"Algorithms And Data Structure\">\r\n            Algorithms and Data Structure\r\n          </option>\r\n        </select></div>}\r\n      {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer\">\r\n        \r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subject}\r\n          required\r\n          onChange={(e) => setsubject(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n          <option value=\"Software Design & Programming\">\r\n            Software Design & Programming\r\n          </option>\r\n        </select></div>}\r\n      {MKDas && <div className=\"mb-3 selectsubjectcontainer\">\r\n        \r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subject}\r\n          required\r\n          onChange={(e) => setsubject(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n          <option value=\"Mathematical Foundation Of Computing\">\r\n            Mathematical Foundation of Computing\r\n          </option>\r\n        </select></div>}\r\n      {SunilKumar && <div className=\"mb-3 selectsubjectcontainer\">\r\n        \r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subject}\r\n          required\r\n          onChange={(e) => setsubject(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n          <option value=\"Computer System Architecture\">\r\n            Computer System Architecture\r\n          </option>\r\n        </select></div>}\r\n\r\n      <div className=\"table-1\">\r\n        <table className=\"table table-striped\">\r\n          <thead className=\"heading-1\">\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Present</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List students={students} status={status} setstatus={setstatus} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"button-1\">\r\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\r\n      </div>\r\n    </div>\r\n  {success && <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Attendance Saved</h4>\r\n</div>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_1;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem1filters.js",["436","437","438","439","440","441","442","443","444","445","446","447","448","449","450"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './List'\r\nimport jsPDF from \"jspdf\";\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nimport autoTable from 'jspdf-autotable';\r\nimport './filters.css'\r\n\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem1filters = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const[report,setreport]=useState(false)\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [SunilKumar, setSunilKumar] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n\r\n  console.log(\"subject status :\",subject);\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem1\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    console.log(json.name);\r\n    if (json.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (json.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (json.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (json.name == \"Sunil Kumar\") {\r\n      setSunilKumar(true)\r\n    }\r\n    setstudent(json.data)\r\n\r\n    if(json.data.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n    }\r\n\r\n    if (monthval) {\r\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n       var val= e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setreport(false)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setreport(false)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setreport(false)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  \r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n        var wb = XLSX.utils.book_new(),\r\n          ws = XLSX.utils.json_to_sheet(student);\r\n        XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n        XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n      };\r\n    \r\n      const exporttopdfhandler = () => {\r\n        const doc = new jsPDF()\r\n        let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n        doc.text(heading, 20, 10)\r\n        autoTable(doc, { html: '#mytable' })\r\n        doc.save('table.pdf')\r\n      };\r\n\r\nreturn (\r\n  <>\r\n   <div className=\" mb-3\" >\r\n    <Navbar/>\r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\" id='date_block1' >\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\" id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n          <option value=\"07\">\r\n            July\r\n          </option>\r\n          <option value=\"08\">\r\n           August\r\n          </option>\r\n          <option value=\"09\">\r\n            September\r\n          </option>\r\n          <option value=\"10\">\r\n          October\r\n          </option>\r\n          <option value=\"11\">\r\n           November\r\n          </option>\r\n          <option value=\"12\">\r\n           December\r\n          </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && NitishaAgg &&  <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n        <option required>Select Subject</option>\r\n              <option value=\"Software Design & Programming\">\r\n                Software Design & Programming\r\n              </option>\r\n        </select>\r\n      </div>\r\n</form>} \r\n{subject && UnmeshShukla && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n          <option value=\"Algorithms And Data Structure\">\r\n                Algorithms and Data Structure\r\n              </option>\r\n        </select> \r\n      </div>\r\n</form>}\r\n{subject && MKDas && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n          \r\n              <option value=\"Mathematical Foundation Of Computing\">\r\n                Mathematical Foundation of Computing\r\n              </option>\r\n            \r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && SunilKumar&& <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n              <option value=\"Computer System Architecture\">\r\n                Computer System Architecture\r\n              </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n \r\n<div className='text-center'>\r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n{visible && <div>\r\n  <h3 className='overall-1'>{heading}</h3>\r\n\r\n  </div>}\r\n  <div>{string}</div>\r\n{visible && <>\r\n  <div className='table-24'>\r\n        <table className='table table-striped' >\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>\r\n</>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem1filters","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\scheduletestreport.js",["451","452","453","454"],"import React from 'react'\r\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport './scheduletest.css';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './list';\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\n\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Testreport = () => {\r\n  const navigate = useNavigate();\r\n  const [tests, setTests] = useState([]);\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  console.log(tests);\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/scheduledtestreport\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    setTests(json.data)\r\n    if (json.data.length != 0) {\r\n      setVisible(true)\r\n      setString(\"Overall Scheduled Tests \")\r\n    }else{\r\n      setString(\"No Tests Scheduled ! \")\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(tests);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Tests Scheduled\", 70, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {<h1 className='text-center'>{string}</h1>}\r\n\r\n     {visible && <div className='tableblock'>\r\n        <table className='table table-striped' id='mytable'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Professor</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List tests={tests} />\r\n          </tbody>\r\n        </table>\r\n        <div className='text-center'>\r\n          <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Testreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\Notifications.js",["455","456"],"import React, { useEffect, useState } from 'react'\r\nimport './notifications.css'\r\nimport Navbar from './Navbar'\r\nconst Notifications = () => {\r\n    const [assignmentnotifications,setassignmentnotifications]=useState([])\r\n    const [classnotifications,setclassnotifications]=useState([])\r\n    const [testnotifications,settestnotifications]=useState([])\r\n    const [studymaterial,setstudymaterial]=useState([])\r\n\r\n    // const [testnotifications,settestnotifications]=useState([])\r\n    const fetchdata=async()=>{\r\n        const response1=await fetch(\"http://localhost:4000/notifications/assignment\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            }})\r\n            const json1 = await response1.json()\r\n            const array1= json1.data.reverse();\r\n            setassignmentnotifications(array1)\r\n        const response2=await fetch(\"http://localhost:4000/notifications/classes\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            }})\r\n            const json2 = await response2.json()\r\n            console.log(json2);\r\n              const array2= json2.data.reverse();\r\n            setclassnotifications(array2)\r\n        const response3=await fetch(\"http://localhost:4000/notifications/tests\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            }})\r\n            const json3 = await response3.json()\r\n            const array3= json3.data.reverse();\r\n            settestnotifications(array3)\r\n        }\r\n        useEffect(()=>{\r\n            fetchdata()\r\n        },[])\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <div className='\"container notification\"'>\r\n     {assignmentnotifications.map((notification)=>{\r\n        const {teacher,subject,date} = notification\r\n         return(\r\n            <>\r\n            <div className='container noti'>\r\n                <h4>{teacher} has posted an assignment of {subject}</h4>\r\n                <p>{date}</p>\r\n            </div>\r\n            </>\r\n         )\r\n     })}\r\n     {classnotifications.map((notification)=>{\r\n        const {name,subject,date} = notification\r\n         return(\r\n            <>\r\n            <div className='container noti'>\r\n                <h4>{name} has scheduled a class of {subject} on {date}</h4>\r\n                <p>{date}</p>\r\n            </div>\r\n            </>\r\n         )\r\n     })}\r\n     {testnotifications.map((notification)=>{\r\n        const {name,subject,date} = notification\r\n         return(\r\n            <>\r\n            <div className='container noti'>\r\n                <h4>{name} has scheduled a test of {subject} on {date}</h4>\r\n                <p>{date}</p>\r\n            </div>\r\n            </>\r\n         )\r\n     })}\r\n    </div>\r\n    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem4filters.js",["457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './List'\r\nimport jsPDF from \"jspdf\";\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nimport autoTable from 'jspdf-autotable';\r\n\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem4filters = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const[report,setreport]=useState(false)\r\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\r\n  const [NitishaAgg,setNitishaAgg]=useState(false)\r\n  const [MKDas,setMKDas]=useState(false)\r\n  const [Sanjeev,setSanjeev]=useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem4\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    if(json.name==\"Unmesh Shukla\")\r\n    {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if(json.name==\"Nitisha Aggarwal\")\r\n    {\r\n      setNitishaAgg(true)\r\n    }\r\n    if(json.name==\"M.K Das\")\r\n    {\r\n      setMKDas(true)\r\n    }\r\n    if(json.name==\"Sanjeev\")\r\n    {\r\n      setSanjeev(true)\r\n    }\r\n    setstudent(json.data)\r\n    if(json.data.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n    }\r\n\r\n    if (monthval) {\r\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n      var val=e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n    setreport(true)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(student);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n    doc.text(heading, 20, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\nreturn (\r\n  <>\r\n  <Navbar/>\r\n   <div className=\" mb-3\" >\r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\" id='date_block1'>\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\"  id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n            <option value=\"01\">\r\n              January\r\n            </option>\r\n            <option value=\"02\">\r\n             February\r\n            </option>\r\n            <option value=\"03\">\r\n              March\r\n            </option>\r\n            <option value=\"04\">\r\n             April\r\n            </option>\r\n            <option value=\"05\">\r\n             May\r\n            </option>\r\n            <option value=\"06\">\r\n             June\r\n            </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && NitishaAgg &&  <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n       <option>Select Subject</option>\r\n            <option value=\"Internet of Things Systems, Security and Cloud\">\r\n              Internet of Things Systems, Security and Cloud\r\n            </option>\r\n            \r\n          \r\n        </select>\r\n      </div>\r\n</form> }\r\n{subject && UnmeshShukla&& <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n           <option>Select Subject</option>\r\n            <option value=\"Health Informatics\">Health Informatics</option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && MKDas && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n          <option>Select Subject</option>\r\n            <option value=\"Software Engineering\">Software Engineering</option>\r\n            \r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && Sanjeev&& <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n           <option>Select Subject</option>\r\n            <option value=\"Dissertation Project\">Dissertation Project</option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n\r\n <div className='text-center'> \r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n<div>{string}</div>\r\n{visible && <>\r\n <h3 className='overall-1'>{heading}</h3>\r\n<div className='table-24'>\r\n        <table className='table table-striped'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>\r\n</>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem4filters","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\sem1.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\change_student_password.js",["472","473"],"import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst ChangePassword = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const [enrollNum, setEnrollNum] = useState([])\r\n  const [allpasswords, setAllpasswords] = useState({\r\n    oldpassword: \"\",\r\n    newpassword: \"\",\r\n    confirmpassword: \"\"\r\n  })\r\n  // const [oldpassword, setOldpassword] = useState(\"\")\r\n  // const [newpassword, setNewpassword] = useState(\"\")\r\n  // const [confirmpassword, setConfirmpassword] = useState(\"\")\r\n  const [errmsg, setErrmsg] = useState(\"\")\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value} = e.target\r\n    setAllpasswords({\r\n      ...allpasswords,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n\r\n  async function updatepassword(e) {\r\n    e.preventDefault()\r\n    if (allpasswords.oldpassword === allpasswords.newpassword) {\r\n      setErrmsg(\"Old password and New password cannot be same\");\r\n    } else if (allpasswords.newpassword !== allpasswords.confirmpassword) {\r\n      setErrmsg(\"Confirm password and new password must be same\");\r\n    } else {\r\n      const req = await fetch('http://localhost:4000/dashboard/changepassword', {\r\n        method: \"PATCH\",\r\n        headers: {\r\n\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify(allpasswords),\r\n      }\r\n      )\r\n      const json = await req.json()\r\n      console.log(json)\r\n      if (json.status === 'ok') {\r\n        setEnrollNum(json.enrollNum)\r\n      }\r\n      console.log(enrollNum)\r\n      if (json) {\r\n        setErrmsg(\"\")\r\n        alert(\"Password updated successful\")\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      }\r\n    }\r\n  }, [enrollNum])\r\n\r\n  return (\r\n    <>\r\n      <section className=\"wrapper\">\r\n        <div className=\"container\">\r\n          <div className=\"col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4 text-center\">\r\n            <form className=\"rounded bg-white shadow p-5\">\r\n              <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Change Password</h3>\r\n\r\n              <label htmlFor=\"floatingInput\">Old Password</label>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingInput\"\r\n                  name=\"oldpassword\"\r\n                  placeholder=\"Old Password\"\r\n                  value={allpasswords.oldpassword}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <label htmlFor=\"floatingPassword\">New Password</label>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingPassword\"\r\n                  name=\"newpassword\"\r\n                  placeholder=\"New Password\"\r\n                  value= {allpasswords.newpassword}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <label htmlFor=\"floatingConfirmPassword\">Confirm Password</label>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingConfirmPassword\"\r\n                  name=\"confirmpassword\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value= {allpasswords.confirmpassword}\r\n                  onChange={handleChange}\r\n\r\n                />\r\n              </div>\r\n              {\r\n                errmsg ? <h3 className='text-danger'>{errmsg}</h3> : \"\"\r\n              }\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary submi_btn w-100 my-4\"\r\n                onClick={updatepassword}\r\n              >\r\n                Update Password\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default ChangePassword","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\sem4.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\semesterwise\\Testreport_semester.js",["474","475","476","477","478","479","480","481","482","483","484","485","486"],"import React from 'react'\r\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from '../list.js';\r\nimport \"../../Scheduled_Class_List/Scheduledcommon.css\";\r\nimport Navbar from \"../../Student_dashboard/Navbar\";\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Testreport = () => {\r\n    const navigate = useNavigate();\r\n    const [tests,setTests]=useState([]);\r\n    const newdate= new Date()\r\n    const monthval= newdate.getMonth()+1;\r\n    const day =newdate.getDate()\r\n    const [subject, setSubject] = useState(\"\")\r\n    const [sem1, setSem1] = useState(false)\r\n    const [sem2, setSem2] = useState(false)\r\n    const [sem3, setSem3] = useState(false)\r\n    const [sem4, setSem4] = useState(false)\r\n    const [report, setReport] = useState({})\r\n    const [visible, setVisible] = useState(false)\r\n    const [string, setString] = useState(\"\")\r\n\r\n    const fetchdata=async()=>{\r\n        const response=await fetch(\"http://localhost:4000/testschedule\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n            const json = await response.json()\r\n            setReport(json)\r\n      }\r\n\r\n      async function subjectupdate(e) {\r\n        setVisible(false)\r\n        setString(\"\")\r\n        e.preventDefault();\r\n        console.log(report)\r\n        let data = report.data.filter((data)=>{\r\n          if(data.date.slice(5,7)==monthval && data.date.slice(8,10)>=day)\r\n          {\r\n              return data\r\n          }\r\n          else if(data.date.slice(5,7)>monthval)\r\n          {\r\n            return data\r\n          }\r\n        })\r\n        let data2 = data.filter((data) => {\r\n          if(data.subject == subject)\r\n          {\r\n            return data\r\n          }\r\n        })\r\n        console.log(data2)\r\n\r\n            setTests(data2.reverse())\r\n            if(data2.length != 0)\r\n            {\r\n              setVisible(true)\r\n            }\r\n            else{\r\n              setString(\"No Tests are scheduled !\")\r\n\r\n            }\r\n    \r\n      }\r\n\r\n      useEffect(() =>{\r\n        if(report.sem == 'Sem-1')\r\n            {\r\n                setSem1(true)\r\n                console.log(\"This is sem1\",sem1)\r\n                \r\n            }\r\n\r\n            else if(report.sem == \"Sem-2\")\r\n            {\r\n                setSem2(true)\r\n                console.log(sem2)\r\n            }\r\n            else if(report.sem == \"Sem-3\")\r\n            {\r\n                setSem3(true)\r\n                console.log(sem3)\r\n            }\r\n            \r\n            else if(report.sem == \"Sem-4\")\r\n            {\r\n                setSem4(true)\r\n                console.log(sem4)\r\n            }\r\n          \r\n      },[report])\r\n\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n          const user = jwt.decode(token)\r\n          console.log(user)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/dashboard\");\r\n          } else {\r\n            fetchdata()\r\n    \r\n          }\r\n        }\r\n      }, [])\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(tests);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Tests Scheduled\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <>\r\n<Navbar />\r\n {<h1 className='text-center-1'>Scheduled Tests </h1>}\r\n <div className='rep_1 '>\r\n {sem1 && <div className='classrepcontainer'>\r\n  <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Algorithms And Data Structure\">\r\n                  Algorithms and Data Structure\r\n                </option>\r\n                <option value=\"Software Design & Programming\">\r\n                  Software Design & Programming\r\n                </option>\r\n                <option value=\"Mathematical Foundation Of Computing\">\r\n                  Mathematical Foundation of Computing\r\n                </option>\r\n                <option value=\"Computer System Architecture\">\r\n                  Computer System Architecture\r\n                </option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem2 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem3 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Information System Design\">Information System Design</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n                <option value=\"Software Engineering\">Software Engineering</option>\r\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem4 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  </div>\r\n  <div  className='nothing_block'>{string}</div>\r\n {visible && <div classname=\"main\">\r\n    <table className='table table-striped' id='mytable-1'>\r\n      <thead className='heading_1'>\r\n        <tr>\r\n          <th>Professor</th>\r\n          <th>Subject</th>\r\n          <th>Date</th>\r\n          <th>Time</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List tests={tests} />\r\n      </tbody>\r\n    </table>\r\n  </div>}\r\n\r\n{visible &&  <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Testreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\teacher_studymaterial.js",["487","488","489","490"],"import React from 'react'\r\nimport { useState, useEffect} from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport '../Scheduled_Class_List/scheduledclass.css'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './list';\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Studymaterial_report = () => {\r\n    const navigate = useNavigate();\r\n    const [material,setMaterial]=useState([]);\r\n    const [visible, setVisible] = useState(false)\r\n    const [string, setString] = useState(\"\")\r\n    console.log(material);\r\n    const fetchdata=async()=>{\r\n        const response=await fetch(\"http://localhost:4000/studymaterial_teacher\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n            const json = await response.json()\r\n                setMaterial(json.data)\r\n                console.log(json)\r\n                if (json.data.length != 0) {\r\n                  setVisible(true)\r\n                  setString(\"Study Material Posted \")\r\n                }else{\r\n                  setString(\"No Study Material Posted !\")\r\n                }\r\n\r\n      }\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n          const user = jwt.decode(token)\r\n          console.log(user)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/Teacherdashboard\");\r\n          } else {\r\n            fetchdata()\r\n    \r\n          }\r\n        }\r\n      }, [])\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(material);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Tests Scheduled\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <>\r\n  <Navbar />\r\n {<h1 className='text-center pt-3'>{string} </h1>}\r\n  {visible && <div classname='tableblock'>\r\n    <table className='table table-striped' id='mytable-5'>\r\n      <thead className='heading-2'>\r\n        <tr>\r\n          <th>Professor</th>\r\n          <th>Subject</th>\r\n          <th>Semester</th>\r\n          <th>File</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List material={material} />\r\n      </tbody>\r\n    </table>\r\n  </div>}\r\n\r\n  {/* {visible && <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>} */}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Studymaterial_report","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\classreport_student.js",["491","492","493","494","495"],"import React from 'react'\r\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport './scheduledclass.css';\r\nimport autoTable from 'jspdf-autotable';\r\nimport '../Student_dashboard/Navbar';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './list';\r\nimport Navbar from '../Student_dashboard/Navbar';\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Classreport = () => {\r\n    const navigate = useNavigate();\r\n    const [classes,setClasses]=useState([]);\r\n    const newdate = new Date()\r\n    const monthval = newdate.getMonth()+1;\r\n    const day = newdate.getDate()\r\n    const year = newdate.getFullYear()\r\n    const fetchdata=async()=>{\r\n        const response=await fetch(\"http://localhost:4000/classschedule\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n            const json = await response.json()\r\n            let data = json.data.filter((data)=>{\r\n              if((data.date.slice(8,10)>=day &&  data.date.slice(5,7)==monthval) || data.date.slice(5,7)>monthval || data.date.slice(0,5)>year  )\r\n              {\r\n                  return data\r\n              }\r\n             \r\n            })\r\n\r\n                setClasses(data.reverse())\r\n      }\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n          const user = jwt.decode(token)\r\n          console.log(user)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/Teacherdashboard\");\r\n          } else {\r\n            fetchdata()\r\n    \r\n          }\r\n        }\r\n      }, [])\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(classes);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Classes Scheduled\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <>\r\n  <Navbar/>\r\n {<h1 className='text-center'>Overall Scheduled Classes </h1>}\r\n \r\n  <div className='tableblock'>\r\n    <table className='table table-striped' id='mytable'>\r\n      <thead className='heading-2'>\r\n        <tr>\r\n          <th>Professor</th>\r\n          <th>Subject</th>\r\n          <th>Date</th>\r\n          <th>Time</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List classes={classes} />\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Classreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem2filters.js",["496","497","498","499","500","501","502","503","504","505","506","507","508","509","510"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './List'\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem2filters = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const[report,setreport]=useState(false)\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [Sanjeev, setSanjeev] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n  \r\n  console.log(\"subject value :\",subject);\r\n  const fetchdata = async () => {\r\n      const response = await fetch(\"http://localhost:4000/attendancereport/sem2\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    if (json.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (json.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (json.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (json.name == \"Sanjeev\") {\r\n      setSanjeev(true)\r\n    }\r\n    setstudent(json.data)\r\n    \r\n    if(json.data.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n    }\r\n    if (monthval) {\r\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n    \r\n      var val=e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n\r\n    setreport(true)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(student);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n    doc.text(heading, 20, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\n\r\nreturn (\r\n  <>\r\n  <Navbar/>\r\n   <div className=\" mb-3\">\r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\"  id='date_block1'>\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\" id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n            <option value=\"01\">\r\n              January\r\n            </option>\r\n            <option value=\"02\">\r\n             February\r\n            </option>\r\n            <option value=\"03\">\r\n              March\r\n            </option>\r\n            <option value=\"04\">\r\n             April\r\n            </option>\r\n            <option value=\"05\">\r\n             May\r\n            </option>\r\n            <option value=\"06\">\r\n             June\r\n            </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && NitishaAgg &&  <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n        <option>Select Subject</option>\r\n            <option value=\"Computer Communication and Networks\">\r\n              Computer Communication and Networks\r\n            </option>\r\n            <option value=\"Operating Systems\">Operating Systems</option>\r\n          \r\n        </select>\r\n      </div>\r\n</form> }\r\n{subject && UnmeshShukla && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n          <option required>Select Subject</option>\r\n            <option value=\"Database Systems\">Database Systems</option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && MKDas && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n          <option>Select Subject</option> \r\n            <option value=\"Applied Machine Learning\">\r\n              Applied Machine Learning\r\n            </option>\r\n            \r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && Sanjeev&& <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n           <option>Select Subject</option>\r\n            <option value=\"Open Elective-1\">Open Elective-1</option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n \r\n \r\n<div className='text-center'> \r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n{visible && <div>\r\n  <h3 className='overall-1'>{heading}</h3>\r\n  </div>}\r\n<div>{string}</div>\r\n{visible && <div className='table-24'>\r\n        <table className='table table-striped'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>}\r\n     {visible && <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem2filters","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\Sem3filters.js",["511","512","513","514","515","516","517","518","519","520","521","522","523","524","525"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './List'\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem3filters = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const[report,setreport]=useState(false)\r\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\r\n  const [NitishaAgg,setNitishaAgg]=useState(false)\r\n  const [MKDas,setMKDas]=useState(false)\r\n  const [Manish,setManish]=useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem3\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    if(json.name==\"Unmesh Shukla\")\r\n    {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if(json.name==\"Nitisha Aggarwal\")\r\n    {\r\n      setNitishaAgg(true)\r\n    }\r\n    if(json.name==\"M.K Das\")\r\n    {\r\n      setMKDas(true)\r\n    }\r\n    if(json.name==\"Manish\")\r\n    {\r\n      setManish(true)\r\n    }\r\n    setstudent(json.data)\r\n\r\n    if(json.data.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n\r\n    }\r\n\r\n    if (monthval) {\r\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n      var val=e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n    setreport(true)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(student);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n    doc.text(heading, 20, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\nreturn (\r\n  <>\r\n   <Navbar/>\r\n   <div className=\" mb-3\" >\r\n   \r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\"  id='date_block1'>\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\" id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12 shadow-none\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n          <option value=\"07\">\r\n            July\r\n          </option>\r\n          <option value=\"08\">\r\n           August\r\n          </option>\r\n          <option value=\"09\">\r\n            September\r\n          </option>\r\n          <option value=\"10\">\r\n          October\r\n          </option>\r\n          <option value=\"11\">\r\n           November\r\n          </option>\r\n          <option value=\"12\">\r\n           December\r\n          </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && NitishaAgg &&  <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n        <option>Select Subject</option>\r\n            <option value=\"Information System Design\">\r\n              Information System Design\r\n            </option>\r\n            \r\n          \r\n        </select>\r\n      </div>\r\n</form> }\r\n{subject && UnmeshShukla && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n           <option>Select Subject</option>\r\n            <option value=\"Cloud Computing\">Cloud Computing</option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && MKDas && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n          <option>Select Subject</option>\r\n            <option value=\"Software Engineering\">Software Engineering</option>\r\n            \r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && Manish&& <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n           <option>Select Subject</option>\r\n            <option value=\"IT Planning and Management\">\r\n              IT Planning and Management\r\n            </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n \r\n<div className='text-center'>\r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5'  onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n<div>{string}</div>\r\n{visible && <>\r\n <h3 className='overall-1'>{heading}</h3>\r\n</>}\r\n{visible && <>\r\n  <div className='table-24'>\r\n        <table className='table table-striped'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>\r\n</>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem3filters","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem3.js",["526","527","528","529","530"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './study.css'\r\n\r\nfunction UploadStudyMaterialSem3() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [Manish, setManish] = useState(false);\r\n  const[success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Manish\") {\r\n      setManish(true);\r\n    }\r\n  }\r\n\r\n  async function Upload() {\r\n    if(!subject)\r\n    {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if(!file)\r\n    {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else\r\n    {\r\n\r\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          semester: \"Sem-3\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      },2500);\r\n    }\r\n   \r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h1>Upload Studymaterial</h1>\r\n      </div>\r\n      <div className=\"uploadassignmentcontent\">\r\n        <div className=\" mb-3\">\r\n          {NitishaAgg && (\r\n            <div>\r\n             \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Information System Design\">\r\n                  Information System Design\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {UnmeshShukla && (\r\n            <div>\r\n             \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {MKDas && (\r\n            <div>\r\n             \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Software Engineering\">\r\n                  Software Engineering\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {Manish && (\r\n            <div>\r\n             \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"IT Planning and Management\">\r\n                  IT Planning and Management\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* upload file */}\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input\r\n              type=\"file\"\r\n              value={file}\r\n              onChange={(e) => setFile(e.target.value)}\r\n            />\r\n            <button>Select File</button>\r\n          </div>\r\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Study Material Posted</h4>\r\n</div>\r\n      </div>}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default UploadStudyMaterialSem3;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem1.js",["531","532","533","534","535","536","537"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './study.css'\r\n\r\nfunction UploadStudyMaterialSem1() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [deadline, setdeadline] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [SunilKumar, setSunilKumar] = useState(false);\r\n  const[success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Sunil Kumar\") {\r\n      setSunilKumar(true);\r\n    }\r\n  }\r\n\r\n  async function Upload() {\r\n    if(!subject)\r\n    {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if(!file)\r\n    {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else\r\n    {\r\n\r\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          semester: \"Sem-1\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      },2500);\r\n    }\r\n   \r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h1>Upload Studymaterial</h1>\r\n      </div>\r\n      <div className=\"uploadassignmentcontent\">\r\n        {UnmeshShukla && (\r\n          <div>\r\n            \r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Algorithms And Data Structure\">\r\n                Algorithms and Data Structure\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {NitishaAgg && (\r\n          <div>\r\n            \r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Software Design & Programming\">\r\n                Software Design & Programming\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {MKDas && (\r\n          <div>\r\n            <label className=\"form-label\">Select Subject</label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control mt-2 shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Mathematical Foundation Of Computing\">\r\n                Mathematical Foundation of Computing\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {SunilKumar && (\r\n          <div>\r\n            <label className=\"form-label\">Select Subject</label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control mt-2 shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Computer System Architecture\">\r\n                Computer System Architecture\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        {/* upload file */}\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input\r\n              type=\"file\"\r\n              value={file}\r\n              onChange={(e) => setFile(e.target.value)}\r\n            />\r\n            <button>Select File</button>\r\n          </div>\r\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n\r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Study Material Posted</h4>\r\n</div>\r\n      </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadStudyMaterialSem1;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance Report\\attendancestudent.js",["538","539","540","541","542","543","544","545","546","547","548","549","550"],"import React from 'react'\r\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport './attendance_report.css'\r\nimport List from './list2';\r\nimport Navbar from \"../Student_dashboard/Navbar\";\r\n\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Attendancereport = () => {\r\n  const navigate = useNavigate();\r\n  const [student, setstudent] = useState([]);\r\n  const [attendmaterial,setAttendmaterial]=useState([]);\r\n  var [string, setString] = useState(\"Overall Attendance Report\")\r\n  const [sem1, setSem1] = useState(false)\r\n  const [sem2, setSem2] = useState(false)\r\n  const [sem3, setSem3] = useState(false)\r\n  const [sem4, setSem4] = useState(false)\r\n  const [subject, setSubject] = useState(\"\")\r\n  const [semester, setSemester] = useState(\"\")\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/dashboard\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n        setSemester(json.semester)\r\n        setstudent(json.attend.reverse())\r\n        setAttendmaterial(json.attend)\r\n  }\r\n\r\n\r\n  async function subjectupdate(e) {\r\n    e.preventDefault();\r\n    setVisible(false)\r\n    console.log(student)\r\n    if(subject != \"overall\")\r\n      setString(\"Subject-wise Attendance Report : \"+ subject)\r\n\r\n    let data = student.filter((data) => {\r\n      if(data.subject == subject)\r\n      {\r\n        return data\r\n      }\r\n    })\r\n    console.log(data)\r\n\r\n    setAttendmaterial(data)\r\n    if(data.length!=0)\r\n    {\r\n      setVisible(true)\r\n    }else{\r\n      setString(\"No Attendance Report Available\")\r\n    }\r\n    if(subject == \"overall\")\r\n    {\r\n      setAttendmaterial(student)\r\n      setVisible(true)\r\n      setString(\"Overall Attendance Report\")\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() =>{\r\n    if(semester == 'Sem-1')\r\n        {\r\n            setSem1(true)\r\n            console.log(\"This is sem1\",sem1)\r\n            \r\n        }\r\n\r\n        else if(semester == \"Sem-2\")\r\n        {\r\n            setSem2(true)\r\n            console.log(sem2)\r\n        }\r\n        else if(semester == \"Sem-3\")\r\n        {\r\n            setSem3(true)\r\n            console.log(sem3)\r\n        }\r\n        \r\n        else if(semester == \"Sem-4\")\r\n        {\r\n            setSem4(true)\r\n            console.log(sem4)\r\n        }\r\n      \r\n  },[student])\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(attendmaterial);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Attendance\", 70, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      {sem1 && <div className='classrepcontainer' id='sem-23'>\r\n  <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n            className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value='overall'>Overall</option>\r\n                <option value=\"Algorithms And Data Structure\">\r\n                  Algorithms and Data Structure\r\n                </option>\r\n                <option value=\"Software Design & Programming\">\r\n                  Software Design & Programming\r\n                </option>\r\n                <option value=\"Mathematical Foundation Of Computing\">\r\n                  Mathematical Foundation of Computing\r\n                </option>\r\n                <option value=\"Computer System Architecture\">\r\n                  Computer System Architecture\r\n                </option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n             Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem2 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n            className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value='overall'>Overall</option>\r\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n             Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem3 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n            className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value='overall'>Overall Attendance</option>\r\n                <option value=\"Information System Design\">Information System Design</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n                <option value=\"Software Engineering\">Software Engineering</option>\r\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem4 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n            className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value='overall'>Overall</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n    {<h3 className='text-center' id='string-12'>{string}</h3>}\r\n    \r\n     {visible && <div className='main'>\r\n        <table className='table table-striped' id='mytable-2'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n                    \r\n                <th>subject</th>\r\n                <th>Date</th>\r\n                <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List attendmaterial={attendmaterial} />\r\n          </tbody>\r\n        </table>\r\n      </div>}\r\n\r\n    {visible && <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Attendancereport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\assignmentreport_student.js",["551","552","553"],"import React from 'react'\r\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport '../Scheduled_Class_List/Scheduledcommon.css';\r\nimport './assignment_report.css'\r\nimport List from './list';\r\nimport Navbar from \"../Student_dashboard/Navbar\";\r\n\r\n\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Assignmentreport = () => {\r\n  const navigate = useNavigate();\r\n  const [assignments, setAssignments] = useState([]);\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/assignmentreportstudent\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n        setAssignments(json.data.reverse())\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(assignments);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Assignments Posted\", 70, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n    <>\r\n<Navbar />\r\n      {<h1 className='text-center-1'>Overall Assignments Posted </h1>}\r\n\r\n      <div classname=\"main\">\r\n        <table className='table table-striped' id='mytable-5'>\r\n          <thead className='heading_1'>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Professor</th>\r\n              <th>Subject</th>\r\n              <th>Deadline</th>\r\n              <th>Assignment</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List assignments={assignments}  />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Assignmentreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem2.js",["554","555","556","557","558"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport \"./upload_assignment.css\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction UploadAssignmentsem2() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [deadline, setdeadline] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [Sanjeev, setSanjeev] = useState(false);\r\n  const[success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(false);\r\n    }\r\n  }\r\n\r\n  async function Upload() {\r\n    if(!subject)\r\n    {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if(!file)\r\n    {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else\r\n    {\r\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          deadline,\r\n          semester: \"Sem-2\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n   \r\n  }\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h1>Upload Assignment</h1>\r\n      </div>\r\n    \r\n      <div className=\"uploadassignmentcontent\">\r\n        <div className=\" mb-3\">\r\n          {NitishaAgg && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Computer Communication and Networks\">\r\n                  Computer Communication and Networks\r\n                </option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {UnmeshShukla && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {MKDas && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Applied Machine Learning\">\r\n                  Applied Machine Learning\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {Sanjeev && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* upload file */}\r\n\r\n        <div className=\"uploadassignmentcontent\" id=\"deadline_block\">\r\n        <div className=\" mb-3\">\r\n          <label htmlFor=\"form-label\">Deadline:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"time_block12\"\r\n            value={deadline}\r\n            onChange={(e) => setdeadline(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input\r\n              type=\"file\"\r\n              value={file}\r\n              onChange={(e) => setFile(e.target.value)}\r\n            />\r\n            <button>Upload</button>\r\n          </div>\r\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Assignment Posted</h4>\r\n</div>\r\n      </div>}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default UploadAssignmentsem2;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem3.js",["559","560","561","562","563"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport \"./upload_assignment.css\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction UploadAssignmentsem3() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [deadline, setdeadline] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [Manish, setManish] = useState(false);\r\n  const [success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Manish\") {\r\n      setManish(true);\r\n    }\r\n  }\r\n\r\n  async function Upload() {\r\n    if(!subject)\r\n    {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if(!file)\r\n    {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else\r\n    {\r\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          deadline,\r\n          semester: \"Sem-3\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n       setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n   \r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h2>Upload Assignment</h2>\r\n      </div>\r\n     \r\n      <div className=\"uploadassignmentcontent\">\r\n        <div className=\" mb-3\">\r\n          {NitishaAgg && (\r\n            <div>\r\n            \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option> <option>Select Subject</option>\r\n                <option value=\"Information System Design\">\r\n                  Information System Design\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {UnmeshShukla && (\r\n            <div>\r\n            \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {MKDas && (\r\n            <div>\r\n            \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Software Engineering\">\r\n                  Software Engineering\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {Manish && (\r\n            <div>\r\n            \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"IT Planning and Management\">\r\n                  IT Planning and Management\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* upload file */}\r\n        <div className=\"uploadassignmentcontent\" id=\"deadline_block\">\r\n        <div className=\" mb-3\">\r\n          <label htmlFor=\"form-label\">Deadline:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"time_block12\"\r\n            value={deadline}\r\n            onChange={(e) => setdeadline(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input\r\n              type=\"file\"\r\n              value={file}\r\n              onChange={(e) => setFile(e.target.value)}\r\n            />\r\n            <button>Upload</button>\r\n          </div>\r\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Assignment Posted</h4>\r\n</div>\r\n      </div>}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default UploadAssignmentsem3;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem4.js",["564","565","566","567","568"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './study.css'\r\n\r\nfunction UploadStudyMaterialSem4() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [Sanjeev, setSanjeev] = useState(false);\r\n  const[success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(true);\r\n    }\r\n  }\r\n\r\n  async function Upload() {\r\n    if(!subject)\r\n    {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if(!file)\r\n    {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else\r\n    {\r\n\r\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          semester: \"Sem-4\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      },2500);\r\n    }\r\n   \r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h1>Upload Studymaterial</h1>\r\n      </div>\r\n      <div className=\"uploadassignmentcontent\">\r\n        <div className=\" mb-3\">\r\n          {NitishaAgg && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">\r\n                  Internet of Things Systems, Security and Cloud\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {UnmeshShukla && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {Sanjeev && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Dissertation Project\">\r\n                  Dissertation Project\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {MKDas && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Research Methods in Informatics\">\r\n                  Research Methods in Informatics\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* upload file */}\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input\r\n              type=\"file\"\r\n              value={file}\r\n              onChange={(e) => setFile(e.target.value)}\r\n            />\r\n            <button>Select File</button>\r\n          </div>\r\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Study Material Posted</h4>\r\n</div>\r\n      </div>}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default UploadStudyMaterialSem4;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\UploadStudyMaterialSem2.js",["569","570","571","572","573"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './study.css'\r\n\r\nfunction UploadStudyMaterialSem2() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [Sanjeev, setSanjeev] = useState(false);\r\n  const[success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(false);\r\n    }\r\n  }\r\n\r\n  async function Upload() {\r\n    if(!subject)\r\n    {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if(!file)\r\n    {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else\r\n    {\r\n\r\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          semester: \"Sem-2\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      },2500);\r\n    }\r\n   \r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h1>Upload Studymaterial</h1>\r\n      </div>\r\n      <div className=\"uploadassignmentcontent\">\r\n        <div className=\" mb-3\">\r\n          {NitishaAgg && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Computer Communication and Networks\">\r\n                  Computer Communication and Networks\r\n                </option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {UnmeshShukla && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {MKDas && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Applied Machine Learning\">\r\n                  Applied Machine Learning\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {Sanjeev && (\r\n            <div>\r\n              \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                   <option>Select Subject</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* upload file */}\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input\r\n              type=\"file\"\r\n              value={file}\r\n              onChange={(e) => setFile(e.target.value)}\r\n            />\r\n            <button>Select File</button>\r\n          </div>\r\n         {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n          \r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Post\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Study Material Posted</h4>\r\n</div>\r\n      </div>}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default UploadStudyMaterialSem2;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\Student_profile.js",["574","575","576","577","578"],"import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport \"./Student_profile.css\"\r\nimport Navbar from './Navbar'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState([])\r\n    const [rollNum, setRollNum] = useState([])\r\n    const [contactNum, setContactNum] = useState([])\r\n    const [email, setEmail] = useState([])\r\n    const [enrollNum, setEnrollNum] = useState([])\r\n\r\n    async function populatedashboard() {\r\n        const req = await fetch('http://localhost:4000/dashboard/profile', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('token'),\r\n\r\n            },\r\n        })\r\n\r\n        const json = await req.json()\r\n\r\n        console.log(json)\r\n        if(json.status === 'ok'){\r\n            setName(json.name)\r\n            setEmail(json.email)\r\n            setEnrollNum(json.enrollNum)\r\n            setRollNum(json.rollNum)\r\n            setContactNum(json.contactNum)\r\n        }\r\n        else{\r\n            // alert(data.error)\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const token = localStorage.getItem('token')\r\n        if (token){\r\n            const user = jwt.decode(token)\r\n            if(!user){\r\n                localStorage.removeItem('token')\r\n                navigate(\"/\");\r\n            } else {\r\n                populatedashboard()\r\n            }\r\n        }\r\n    }, [name], [email])\r\n\r\n    return (\r\n        <>\r\n        <Navbar/>\r\n            <h1 className='Teacherheading'>Student Profile</h1>\r\n            <div class=\"emp-profile\">\r\n                <div>\r\n                    <form method=\"post\">\r\n                        <div className='photo_block'>\r\n                                <div class=\"profile-img\">\r\n                                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog\" alt=\"\" />\r\n                                </div>\r\n                            <div class=\"profile-head\">\r\n                                <h2>\r\n                                    Abhishek Tyagi\r\n                                </h2>\r\n                                <h4>\r\n                                   Enroll. no.\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"teacherInfo\">\r\n                            <div className='keys'>\r\n                                <div>\r\n                                    <label>User Id: </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>DOB </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Email: </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Phone: </label>\r\n                                </div>\r\n                                <div>\r\n                                    <label>Semester: </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='values'>\r\n                                <div>\r\n                                    <p>Abhishek_tyagi</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p>17/11/2000</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p>tyagiabhi@gmail.com</p>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <p>123 756 7890</p>\r\n                                </div>\r\n                                <div>\r\n                                    <p>3rd</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            \r\n            <div className='text-center pt-5' id='prof_block'>\r\n                                 <button id='butn' class=\"btn btn-primary\" >Logout</button>\r\n                                 <button id='butn' class=\"btn btn-primary-1\" >Reset Password</button>\r\n                         </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Profile","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Profile\\Profile.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem1.js",["579","580","581","582","583"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport \"./upload_assignment.css\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction UploadAssignmentsem1() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [deadline, setdeadline] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [SunilKumar, setSunilKumar] = useState(false);\r\n  const[success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Sunil Kumar\") {\r\n      setSunilKumar(true);\r\n    }\r\n  }\r\n\r\n  async function Upload(e) {\r\n    if (!subject) {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if (!file) {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          deadline,\r\n          semester: \"Sem-1\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h1>Upload Assignment</h1>\r\n      </div>\r\n\r\n      <div className=\"uploadassignmentcontent\">\r\n        {UnmeshShukla && (\r\n          <div>\r\n\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Algorithms And Data Structure\">\r\n                Algorithms and Data Structure\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {NitishaAgg && (\r\n          <div>\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Software Design & Programming\">\r\n                Software Design & Programming\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {MKDas && (\r\n          <div>\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control mt-2 shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Mathematical Foundation Of Computing\">\r\n                Mathematical Foundation of Computing\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n        {SunilKumar && (\r\n          <div>\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control mt-2 shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              required\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option>Select Subject</option>\r\n              <option value=\"Computer System Architecture\">\r\n                Computer System Architecture\r\n              </option>\r\n            </select>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mb-3 mt-3\" id=\"deadline_block\">\r\n          <label className=\"form-label deadline\">Deadline</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"time_block12\"\r\n            value={deadline}\r\n            onChange={(e) => setdeadline(e.target.value)}\r\n          />\r\n        </div>\r\n        {/* upload file */}\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input type=\"file\" value={file} onChange={(e) => setFile(e.target.value)} />\r\n            <button>Select File</button>\r\n          </div>\r\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4 descriptionbody\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"text-area\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n\r\n      </div>\r\n    </div>\r\n{success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Assignment Posted</h4>\r\n</div>\r\n      </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadAssignmentsem1;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_Upload\\Upload_assignment_sem4.js",["584","585","586","587","588"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport \"./upload_assignment.css\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction UploadAssignmentsem4() {\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(\"\");\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [deadline, setdeadline] = useState(\"\");\r\n  const [teacher, setTeacher] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\r\n  const [NitishaAgg, setNitishaAgg] = useState(false);\r\n  const [MKDas, setMKDas] = useState(false);\r\n  const [Sanjeev, setSanjeev] = useState(false);\r\n  const [success,setsuccess]=useState(false)\r\n  async function populate(e) {\r\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n      headers: {\r\n        \"x-access-token\": localStorage.getItem(\"token\"), //\r\n      },\r\n    });\r\n    const data = await req.json();\r\n    setTeacher(data.name);\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true);\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true);\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true);\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(true);\r\n    }\r\n  }\r\n\r\n  async function Upload() {\r\n    if(!subject)\r\n    {\r\n      alert(\"Please select the subject\")\r\n    }\r\n    else if(!file)\r\n    {\r\n      alert(\"Please upload a file\")\r\n    }\r\n    else\r\n    {\r\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          \"x-access-token\": localStorage.getItem(\"token\"),\r\n        },\r\n        body: JSON.stringify({\r\n          file,\r\n          subject,\r\n          deadline,\r\n          semester: \"Sem-4\",\r\n          teacher,\r\n          description,\r\n        }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n       setsuccess(data.success)\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n   \r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = jwt.decode(token);\r\n      console.log(user);\r\n      if (!user) {\r\n        localStorage.removeItem(\"token\");\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate();\r\n      }\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n    <div className=\"uploadassignmentbody\">\r\n      <Navbar />\r\n      <div className=\"uploadheading\">\r\n        <h1>Upload Assignment</h1>\r\n      </div>\r\n      \r\n      <div className=\"uploadassignmentcontent\">\r\n        <div className=\" mb-3\">\r\n          {NitishaAgg && (\r\n            <div>\r\n                \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">\r\n                  Internet of Things Systems, Security and Cloud\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {UnmeshShukla && (\r\n            <div>\r\n                \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {Sanjeev && (\r\n            <div>\r\n                \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Dissertation Project\">\r\n                  Dissertation Project\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n          {MKDas && (\r\n            <div>\r\n                \r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                     <option>Select Subject</option>\r\n                <option value=\"Research Methods in Informatics\">\r\n                  Research Methods in Informatics\r\n                </option>\r\n              </select>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* upload file */}\r\n        <div className=\"uploadassignmentcontent\"  id=\"deadline_block\">\r\n        <div className=\" mb-3\">\r\n          <label htmlFor=\"form-label\">Deadline:</label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"time_block12\"\r\n            value={deadline}\r\n            onChange={(e) => setdeadline(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n        <div className=\"file-card\">\r\n          <div className=\"file-inputs\">\r\n            <input\r\n              type=\"file\"\r\n              value={file}\r\n              onChange={(e) => setFile(e.target.value)}\r\n            />\r\n            <button>Upload</button>\r\n          </div>\r\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\r\n          <div className=\"infocontent\">\r\n            <p className=\"main\">Supported files</p>\r\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* text box */}\r\n\r\n        <div class=\"mb-3 mt-4\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Discription\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            placeholder=\"optional\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            value={description}\r\n            onChange={(e) => setdescription(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        {/* submit button */}\r\n\r\n        <div className=\"text-center\">\r\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Assignment Posted</h4>\r\n</div>\r\n      </div>}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default UploadAssignmentsem4;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_4.js",["589","590","591","592","593","594"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jwt from 'jsonwebtoken'\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./classschedule.css\";\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\nconst Sem_4 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n\r\n  //\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [Sanjeev, setSanjeev] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n  const [success, setsuccess] = useState(false)\r\n  const sem = \"Sem-4\";\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduleclass', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(true)\r\n    }\r\n\r\n  }\r\n\r\n  async function schedule(e) {\r\n\r\n    if (subject && time && date) {\r\n      e.preventDefault()\r\n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      if (!date) {\r\n        document.getElementById(\"date\").style.color = \"red\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n\r\n      }\r\n      else {\r\n        document.getElementById(\"date\").style.color = \"black\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\r\n\r\n      }\r\n\r\n      if (!time) {\r\n        document.getElementById(\"time\").style.color = \"red\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n\r\n      else {\r\n        document.getElementById(\"time\").style.color = \"black\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\r\n      }\r\n\r\n\r\n      if (!subject) {\r\n\r\n        document.getElementById(\"subject\").style.borderColor = \"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n      else {\r\n        // document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor = \"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\r\n      }\r\n    }\r\n\r\n  }\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate()\r\n\r\n      }\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <form onSubmit={schedule}>\r\n        <div className=\" mb-3 scheduledcontainer\">\r\n          <div className=\" mb-3\">\r\n            <h1 className=\"class-1\">Class Schedule</h1>\r\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">\r\n                  Internet of Things Systems, Security and Cloud\r\n                </option>\r\n              </select>\r\n            </div>}\r\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n              </select>\r\n            </div>}\r\n            {Sanjeev && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Dissertation Project\">Dissertation Project</option>\r\n              </select>\r\n            </div>}\r\n            {MKDas && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Research Methods in Informatics\">\r\n                  Research Methods in Informatics\r\n                </option>\r\n              </select>\r\n            </div>}\r\n\r\n          </div>\r\n\r\n          <div className=\"abc-1\">\r\n            <div className=\"class-div\">\r\n              <label htmlFor=\"date\" className=\"class-form-label\" id=\"date\">\r\n                Date\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"class-form-control \"\r\n                id=\"date-1\"\r\n                aria-describedby=\"date\"\r\n                value={date}\r\n                onChange={(e) => setdate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"time-div\">\r\n              <label htmlFor=\"time\" className=\"time-form-label\" id=\"time\">\r\n                time\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                className=\"class-form-control\"\r\n                id=\"time-1\"\r\n                value={time}\r\n                onChange={(e) => settime(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"messagecontent\">\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Message:\r\n            </label>\r\n            <textarea\r\n              type=\"text\"\r\n              class=\"class-form-control-1\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              placeholder=\"Optional\"\r\n              value={message}\r\n              onChange={(e) => setmessage(e.target.value)}></textarea>\r\n          </div>\r\n          <div className=\"btn-class\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Schedule Class\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n      {success && <div className=\"container-fluid blacky\">\r\n        <div className=\"success\">\r\n          <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" /> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\r\n          </svg>\r\n          </div>\r\n          <h4>Class scheduled successfully</h4>\r\n        </div>\r\n      </div>}\r\n      {warning && <><div className=\"container-fluid blacky\">\r\n      </div>\r\n        <div className=\"warningmain\" >\r\n\r\n          <div className=\"warning\">\r\n\r\n            <FaIcons.FaExclamationTriangle size={70} color='red' />\r\n\r\n            <p>{warning}</p>\r\n            <button className=\"okay\" onClick={() => setwarning(false)} >Okay</button>\r\n          </div>\r\n        </div></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_4;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_2.js",["595","596","597","598","599","600"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport jwt from 'jsonwebtoken'\r\nimport \"./classschedule.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\nconst Sem_2 = () => {\r\n  const navigate = useNavigate();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [Sanjeev, setSanjeev] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n  const [success, setsuccess] = useState(false)\r\n  const sem = \"Sem-2\";\r\n\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduleclass', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(false)\r\n    }\r\n  }\r\n\r\n\r\n  async function schedule(e) {\r\n\r\n    e.preventDefault();\r\n    if (subject && time && date) {\r\n\r\n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        console.log(data);\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      if (!date) {\r\n        document.getElementById(\"date\").style.color = \"red\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n\r\n      }\r\n      else {\r\n        document.getElementById(\"date\").style.color = \"black\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\r\n\r\n      }\r\n\r\n      if (!time) {\r\n        document.getElementById(\"time\").style.color = \"red\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n\r\n      else {\r\n        document.getElementById(\"time\").style.color = \"black\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\r\n      }\r\n\r\n\r\n      if (!subject) {\r\n\r\n        document.getElementById(\"subject\").style.borderColor = \"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n      else {\r\n        // document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor = \"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\r\n      }\r\n\r\n    }\r\n}\r\n//--------------------\r\nuseEffect(() => {\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    const user = jwt.decode(token)\r\n    console.log(user)\r\n    if (!user) {\r\n      localStorage.removeItem('token')\r\n      navigate(\"/Teacherdashboard\");\r\n    } else {\r\n      populate()\r\n    }\r\n  }\r\n}, [])\r\n\r\nreturn (\r\n  <>\r\n    <Navbar />\r\n    <form onSubmit={schedule}>\r\n      <div className=\" mb-3 scheduledcontainer\">\r\n        <div className=\"mb-3\">\r\n          <h1 className=\"class-1\">Class Schedule</h1>\r\n          {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value=\"\">Select Subject</option>\r\n              <option value=\"Computer Communication and Networks\">\r\n                Computer Communication and Networks\r\n              </option>\r\n              <option value=\"Operating Systems\">Operating Systems</option>\r\n            </select></div>}\r\n\r\n          {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value=\"\">Select Subject</option>\r\n              <option value=\"Database Systems\">Database Systems</option>\r\n            </select></div>}\r\n\r\n          {MKDas && <div className=\"selectsubjectcontainer\">\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value=\"\">Select Subject</option>\r\n              <option value=\"Applied Machine Learning\">\r\n                Applied Machine Learning\r\n              </option>\r\n            </select></div>}\r\n\r\n          {Sanjeev && <div className=\"selectsubjectcontainer\">\r\n\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value=\"\">Select Subject</option>\r\n              <option value=\"Open Elective-1\">Open Elective-1</option>\r\n            </select></div>}\r\n\r\n        </div>\r\n\r\n        <div className=\"abc-1\">\r\n          <div className=\"class-div\">\r\n            <label htmlFor=\"date\" className=\"class-form-label\" id = \"date\">\r\n              Date:\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              className=\"class-form-control\"\r\n              id=\"date-1\"\r\n              aria-describedby=\"date\"\r\n              value={date}\r\n              onChange={(e) => setdate(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"time-div\">\r\n            <label htmlFor=\"time\" className=\"time-form-label\" id = \"time\">\r\n              Time:\r\n            </label>\r\n            <input\r\n              type=\"time\"\r\n              className=\"class-form-control\"\r\n              id=\"time-1\"\r\n              value={time}\r\n              onChange={(e) => settime(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"messagecontent\">\r\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n            Message:\r\n          </label>\r\n          <br />\r\n          <textarea\r\n            type=\"text\"\r\n            class=\"class-form-control-1\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            placeholder=\"Optional\"\r\n            value={message}\r\n            onChange={(e) => setmessage(e.target.value)}></textarea>\r\n        </div>\r\n\r\n        <div className=\"btn-class\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Schedule Class\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Class scheduled successfully</h4>\r\n</div>\r\n      </div>}\r\n    {warning && <><div className=\"container-fluid blacky\">\r\n </div>\r\n <div className=\"warningmain\" >\r\n\r\n <div className=\"warning\">\r\n    \r\n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\r\n\r\n    <p>{warning}</p>\r\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\r\n  </div>\r\n </div></>}\r\n  </>\r\n);\r\n};\r\n\r\nexport default Sem_2;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_1.js",["601","602","603","604","605","606"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./testschedule.css\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport jwt from 'jsonwebtoken'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { useNavigate } from \"react-router-dom\"\r\nconst Sem_1 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(false)\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [SunilKumar, setSunilKumar] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n   const[success,setsuccess] = useState(false)\r\n  const sem = \"Sem-1\";\r\n\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduletest', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    console.log(data)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Sunil Kumar\") {\r\n      setSunilKumar(true)\r\n    }\r\n  }\r\n\r\n\r\n  async function schedule(e) {\r\n    e.preventDefault();\r\n    if(subject && time && date)\r\n    {\r\n  \r\n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",//\r\n          \"Content-Type\": \"application/json\", //\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n       if(!date)\r\n       {\r\n        document.getElementById(\"date\").style.color=\"red\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000); \r\n      }\r\n      else\r\n      {\r\n        document.getElementById(\"date\").style.color=\"black\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\r\n      }\r\n      \r\n       if(!time)\r\n       {\r\n        document.getElementById(\"time\").style.color=\"red\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000); \r\n      }\r\n       else\r\n      {\r\n        document.getElementById(\"time\").style.color=\"black\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\r\n      }\r\n       \r\n      if (!subject )\r\n       {\r\n  \r\n        document.getElementById(\"subject\").style.borderColor=\"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n       }\r\n       else\r\n      {\r\n        document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor=\"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\r\n      }\r\n\r\n    \r\n\r\n  }\r\n\r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <form onSubmit={schedule}>\r\n        <div className=\" mb-3 scheduledcontainer\">\r\n          <h1 className=\"class-1\">Test Schedule</h1>\r\n          <div className=\" mb-3\">\r\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                \r\n                \r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Algorithms And Data Structure\">\r\n                  Algorithms and Data Structure\r\n                </option>\r\n              </select></div>}\r\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n              \r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Software Design & Programming\">\r\n                  Software Design & Programming\r\n                </option>\r\n              </select></div>}\r\n            {MKDas && <div className=\"selectsubjectcontainer\">\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n               \r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Mathematical Foundation Of Computing\">\r\n                  Mathematical Foundation of Computing\r\n                </option>\r\n              </select></div>}\r\n            {SunilKumar && <div className=\"selectsubjectcontainer\">\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n              \r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Computer System Architecture\">\r\n                  Computer System Architecture\r\n                </option>\r\n              </select></div>}\r\n\r\n         \r\n              </div>\r\n          <div className=\"abc-1\">\r\n            <div className=\"class-div\">\r\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\r\n                Date:\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"class-form-control\"\r\n                id=\"date-1\"\r\n                aria-describedby=\"date\"\r\n                value={date}\r\n                onChange={(e) => setdate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"time-div\">\r\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\r\n                Time:\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                className=\"class-form-control\"\r\n                id=\"time-1\"\r\n                value={time}\r\n                onChange={(e) => settime(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"messagecontent\">\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Message:\r\n            </label>\r\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              placeholder=\"Optional\"\r\n              value={message}\r\n              onChange={(e) => setmessage(e.target.value)}></textarea>\r\n          </div>\r\n          <div className=\"btn-class\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Schedule Test\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n      {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Test scheduled successfully</h4>\r\n</div>\r\n      </div>}\r\n      {warning && <><div className=\"container-fluid blacky\">\r\n </div>\r\n <div className=\"warningmain\" >\r\n\r\n <div className=\"warning\">\r\n    \r\n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\r\n\r\n    <p>{warning}</p>\r\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\r\n  </div>\r\n </div></>}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Sem_1;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_2.js",["607","608","609","610","611","612"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport \"./testschedule.css\";\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\nconst Sem_2 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [Sanjeev, setSanjeev] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n   const[success,setsuccess] = useState(false)\r\n  const sem = \"Sem-2\";\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduletest', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    console.log(data)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(false)\r\n    }\r\n  }\r\n\r\n  async function schedule(e) {\r\n    e.preventDefault();\r\n    if(subject && time && date)\r\n    {\r\n  \r\n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",//\r\n          \"Content-Type\": \"application/json\", //\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n       if(!date)\r\n       {\r\n        document.getElementById(\"date\").style.color=\"red\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n        \r\n\r\n       }\r\n      else\r\n      {\r\n        document.getElementById(\"date\").style.color=\"black\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\r\n        \r\n      }\r\n      \r\n       if(!time)\r\n       {\r\n        document.getElementById(\"time\").style.color=\"red\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n    \r\n      }\r\n       \r\n       else\r\n      {\r\n        document.getElementById(\"time\").style.color=\"black\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\r\n      }\r\n\r\n       \r\n      if (!subject )\r\n       {\r\n  \r\n        document.getElementById(\"subject\").style.borderColor=\"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n        \r\n       }\r\n       else\r\n      {\r\n        // document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor=\"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\r\n      }\r\n\r\n    \r\n\r\n  }\r\n\r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <form onSubmit={schedule}>\r\n        <div className=\" mb-3 scheduledcontainer\">\r\n          <h1 className=\"class-1\">Test Schedule</h1>\r\n          <div className=\" mb-3\">\r\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Computer Communication and Networks\">\r\n                  Computer Communication and Networks\r\n                </option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n              </select></div>}\r\n\r\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n              </select></div>}\r\n\r\n            {MKDas && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Applied Machine Learning\">\r\n                  Applied Machine Learning\r\n                </option>\r\n              </select></div>}\r\n\r\n            {Sanjeev && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select></div>}\r\n\r\n          </div>\r\n          <div className=\"abc-1\">\r\n            <div className=\"class-div\">\r\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\r\n                Date:\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"class-form-control\"\r\n                id=\"date-1\"\r\n                aria-describedby=\"date\"\r\n                value={date}\r\n                onChange={(e) => setdate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"time-div\">\r\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\r\n                Time:\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                className=\"class-form-control\"\r\n                id=\"time-1\"\r\n                value={time}\r\n                onChange={(e) => settime(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"messagecontent\">\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Message:\r\n            </label>\r\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              placeholder=\"Optional\"\r\n              value={message}\r\n              onChange={(e) => setmessage(e.target.value)}></textarea>\r\n          </div>\r\n          <div className=\"btn-class\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Schedule Test\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n      {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Test scheduled successfully</h4>\r\n</div>\r\n      </div>}\r\n      {warning && <><div className=\"container-fluid blacky\">\r\n </div>\r\n <div className=\"warningmain\" >\r\n\r\n <div className=\"warning\">\r\n    \r\n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\r\n\r\n    <p>{warning}</p>\r\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\r\n  </div>\r\n </div></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_2;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\loginteacher\\loginteacher.js",["613"],"import React, { useState } from \"react\";\r\nimport \"./loginteacher.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Loginteacher = () => {\r\n\r\n  const [ifPasswordAndUserNameNotsame, setIfPasswordAndUserNameNotsame] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState({\r\n    Teacher_id: \"\",\r\n    password: \"\"\r\n  })\r\n\r\n  const [loginstatus, setLoginstatus] = useState(\"\")\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setUser({\r\n      ...user,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n    await fetch(\"http://localhost:4000/loginteacher\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then(async (response) => {\r\n      let data = await response.json();\r\n      console.log(data);\r\n      if (data.teacher) {\r\n        localStorage.setItem('token', data.teacher)\r\n        navigate(\"/Teacherdashboard\");\r\n        setLoginstatus(data.message);\r\n      } else {\r\n        setIfPasswordAndUserNameNotsame(true);\r\n        setLoginstatus(data.message);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"login2body\">\r\n        {ifPasswordAndUserNameNotsame && < div class=\"alert alert-danger\" role=\"alert\">\r\n          please check your username and password!\r\n        </div>}\r\n        <div className=\"screen\">\r\n          <div className=\"screen__content\">\r\n            <form className=\"login\">\r\n              {/* <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Login for Professors</h3> */}\r\n\r\n              <div className=\"login__field\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login__input\"\r\n                  id=\"floatingInput\"\r\n                  name=\"Teacher_id\"\r\n                  placeholder=\"Professor ID\"\r\n                  value={user.Teacher_id}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"login__input\"\r\n                  id=\"floatingPassword\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={user.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button login__submit\"\r\n                onClick={login}\r\n              >\r\n                <span className=\"button__text\">Log In Now</span>\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div class=\"screen__background\">\r\n            <span class=\"screen__background__shape screen__background__shape4\"></span>\r\n            <span class=\"screen__background__shape screen__background__shape3\"></span>\r\n            <span class=\"screen__background__shape screen__background__shape2\"></span>\r\n            <span class=\"screen__background__shape screen__background__shape1\"></span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Loginteacher;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_1..js",["614","615","616","617","618","619","620","621","622"],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./classschedule.css\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport * as FaIcons from 'react-icons/fa';\r\n\r\n\r\n\r\nconst Sem_1 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [SunilKumar, setSunilKumar] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n  const [isAlertVisible, setIsAlertVisible] = useState(false);\r\n  const [isdot, setIsdotVisible] = useState(false);\r\n  const[success,setsuccess] = useState(false)\r\n  const [empty,setempty]=useState(false)\r\n\r\n  // const handleButtonClick = () => {\r\n  //   setIsdotVisible(true);\r\n  //   setTimeout(() => {\r\n  //     setIsdotVisible(false);\r\n  //     setIsAlertVisible(true);\r\n  //   }, 2000);\r\n  // }\r\n\r\n  const sem = \"Sem-1\";\r\n\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduleclass', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Sunil Kumar\") {\r\n      setSunilKumar(true)\r\n    }\r\n  }\r\n\r\n  async function schedule(e) {\r\n\r\n    \r\n    if (subject && time && date) {\r\n      e.preventDefault() \r\n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n        \r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      if (!date) {\r\n        document.getElementById(\"date\").style.color = \"red\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n\r\n      }\r\n      else {\r\n        document.getElementById(\"date\").style.color = \"black\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\r\n\r\n      }\r\n\r\n      if (!time) {\r\n        document.getElementById(\"time\").style.color = \"red\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n\r\n      else {\r\n        document.getElementById(\"time\").style.color = \"black\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\r\n      }\r\n\r\n\r\n      if (!subject) {\r\n\r\n        document.getElementById(\"subject\").style.borderColor = \"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n      else {\r\n        // document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor = \"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate()\r\n\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n     \r\n      {/* <div>\r\n        {isdot && <div class=\"loader\"  >\r\n          <div class=\"pair p1\">\r\n            <div class=\"dot dot-1 \">\r\n\r\n\r\n            </div>\r\n            <div class=\"dot dot-2\">\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"pair p2\">\r\n            <div class=\"dot dot-1\">\r\n\r\n            </div>\r\n            <div class=\"dot dot-2\">\r\n\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div> */}\r\n      <Navbar />\r\n      <form onSubmit={schedule}>\r\n        <div>\r\n          {/* popup */}\r\n          {isAlertVisible && <div className=\"popup center\">\r\n            <div class=\"icon\">\r\n              <i class=\"fa fa-check\"></i>\r\n            </div>\r\n            <div class=\"title\">\r\n              Success!!\r\n            </div>\r\n            <div class=\"description\">\r\n              class is scheduled successfully\r\n            </div>\r\n            <div class=\"dismiss-btn\">\r\n              <button id=\"dismiss-popup-btn\" onClick={() => setIsAlertVisible(false)}>\r\n                Dismiss\r\n              </button>\r\n            </div>\r\n          </div>}\r\n        </div>\r\n\r\n        {/* loading */}\r\n\r\n\r\n\r\n        <div className=\"mb-3 scheduledcontainer\" style={{ filter: isAlertVisible || isdot ? \"blur(3px)\" : \"none\", background: isAlertVisible ? \"#f1ebeb\" : \"none\" }} >\r\n\r\n\r\n          <div className=\" mb-3\">\r\n            <h1 className=\"class-1 mb-1\">Class Schedule</h1>\r\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Algorithms And Data Structure\">\r\n                  Algorithms and Data Structure\r\n                </option>\r\n              </select></div>}\r\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Software Design & Programming\">\r\n                  Software Design & Programming\r\n                </option>\r\n              </select></div>}\r\n            {MKDas && <div className=\"selectsubjectcontainer\">\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control mt-2 shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Mathematical Foundation Of Computing\">\r\n                  Mathematical Foundation of Computing\r\n                </option>\r\n              </select></div>}\r\n            {SunilKumar && <div className=\"selectsubjectcontainer\">\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control mt-2 shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Computer System Architecture\">\r\n                  Computer System Architecture\r\n                </option>\r\n              </select></div>}\r\n\r\n          </div>\r\n\r\n          <div className=\"abc-1\">\r\n            <div className=\"class-div\">\r\n              <label htmlFor=\"date\" className=\"class-form-label\" id=\"date\">Date:</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"class-form-control\"\r\n                id=\"date-1\"\r\n                aria-describedby=\"date\"\r\n                value={date}\r\n\r\n                onChange={(e) => setdate(e.target.value)}\r\n              />\r\n            </div >\r\n            <br />\r\n            <div className=\"time-div\">\r\n              <label htmlFor=\"time\" className=\"time-form-label \" id=\"time\">\r\n                Time:\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                className=\"class-form-control\"\r\n                id=\"time-1\"\r\n                value={time}\r\n\r\n                onChange={(e) => settime(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"messagecontent\">\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Message:\r\n            </label><br />\r\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              placeholder=\"Optional\"\r\n              value={message}\r\n              onChange={(e) => setmessage(e.target.value)}></textarea>\r\n          </div>\r\n\r\n          <div className=\"btn-class\">\r\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\"  >\r\n              Schedule Class\r\n            </button>\r\n          </div>\r\n         \r\n        </div>\r\n      </form>\r\n\r\n  {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Class scheduled successfully</h4>\r\n</div>\r\n      </div>}\r\n{warning && <><div className=\"container-fluid blacky\">\r\n </div>\r\n <div className=\"warningmain\" >\r\n\r\n <div className=\"warning\">\r\n    \r\n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\r\n\r\n    <p>{warning}</p>\r\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\r\n  </div>\r\n </div></>}\r\n   \r\n      \r\n    </>\r\n  )\r\n};\r\n\r\nexport default Sem_1;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\testreport_student.js",["623","624","625","626","627"],"import React from 'react'\r\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport './scheduletest.css';\r\nimport '../Student_dashboard/Navbar';\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './list';\r\nimport Navbar from '../Student_dashboard/Navbar';\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Testreport = () => {\r\n    const navigate = useNavigate();\r\n    const [tests,setTests]=useState([]);\r\n    const newdate= new Date()\r\n    const monthval= newdate.getMonth()+1;\r\n    const day =newdate.getDate()\r\n    const fetchdata=async()=>{\r\n        const response=await fetch(\"http://localhost:4000/testschedule\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n            const json = await response.json()\r\n            let data = json.data.filter((data)=>{\r\n              if(data.date.slice(5,7)==monthval && data.date.slice(8,10)>=day)\r\n              {\r\n                  return data\r\n              }\r\n              else if(data.date.slice(5,7)>monthval)\r\n              {\r\n                return data\r\n              }\r\n            })\r\n\r\n                setTests(data.reverse())\r\n\r\n      }\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n          const user = jwt.decode(token)\r\n          console.log(user)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/dashboard\");\r\n          } else {\r\n            fetchdata()\r\n    \r\n          }\r\n        }\r\n      }, [])\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(tests);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Tests Scheduled\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <>\r\n   <Navbar/>\r\n\r\n {<h1 className='text-center'>Overall Tests Scheduled </h1>}\r\n \r\n  <div className='tableblock'>\r\n        <table className='table table-striped' id='mytable'>\r\n      <thead className='heading-2'>\r\n        <tr>\r\n          <th>Professor</th>\r\n          <th>Subject</th>\r\n          <th>Date</th>\r\n          <th>Time</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List tests={tests} />\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n  </div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Testreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_4.js",["628","629","630","631","632","633"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./testschedule.css\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport jwt from 'jsonwebtoken'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { useNavigate } from \"react-router-dom\"\r\nconst Sem_4 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [Sanjeev, setSanjeev] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n   const[success,setsuccess] = useState(false)\r\n  const sem = \"Sem-4\";\r\n\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduletest', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    console.log(data)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Sanjeev\") {\r\n      setSanjeev(true)\r\n    }\r\n  }\r\n\r\n  async function schedule(e) {\r\n    e.preventDefault();\r\n    if (subject && time && date) {\r\n\r\n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",//\r\n          \"Content-Type\": \"application/json\", //\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n       if(!date)\r\n       {\r\n        document.getElementById(\"date\").style.color=\"red\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n       }\r\n      else\r\n      {\r\n        document.getElementById(\"date\").style.color=\"black\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\r\n      }\r\n      \r\n       if(!time)\r\n       {\r\n        document.getElementById(\"time\").style.color=\"red\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n      }\r\n       else\r\n      {\r\n        document.getElementById(\"time\").style.color=\"black\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\r\n      }\r\n       \r\n      if (!subject )\r\n       {\r\n  \r\n        document.getElementById(\"subject\").style.borderColor=\"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n       }\r\n       else\r\n      {\r\n        // document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor=\"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\r\n      }\r\n\r\n    \r\n\r\n  }\r\n\r\n  }\r\n\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <form onSubmit={schedule}>\r\n        <div className=\" mb-3 scheduledcontainer\">\r\n          <h1 className=\"class-1\">Test Schedule</h1>\r\n          <div className=\" mb-3\">\r\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">\r\n                  Internet of Things Systems, Security and Cloud\r\n                </option>\r\n              </select>\r\n            </div>}\r\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n              </select>\r\n            </div>}\r\n            {Sanjeev && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Dissertation Project\">Dissertation Project</option>\r\n              </select>\r\n            </div>}\r\n            {MKDas && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value= \"\">Select Subject</option>\r\n                <option value=\"Research Methods in Informatics\">\r\n                  Research Methods in Informatics\r\n                </option>\r\n              </select>\r\n            </div>}\r\n          </div>\r\n          <div className=\"abc-1\">\r\n            <div className=\"class-div\">\r\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\r\n                Date:\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"class-form-control\"\r\n                id=\"date-1\"\r\n                aria-describedby=\"date\"\r\n                value={date}\r\n                onChange={(e) => setdate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"time-div\">\r\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\r\n                Time:\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                className=\"class-form-control\"\r\n                id=\"time-1\"\r\n                value={time}\r\n                onChange={(e) => settime(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"messagecontent\">\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Message:\r\n            </label>\r\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              placeholder=\"Optional\"\r\n              value={message}\r\n              onChange={(e) => setmessage(e.target.value)}></textarea>\r\n          </div>\r\n          <div className=\"btn-class\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Schedule Test\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </form>\r\n      {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Test scheduled successfully</h4>\r\n</div>\r\n      </div>}\r\n      {warning && <><div className=\"container-fluid blacky\">\r\n </div>\r\n <div className=\"warningmain\" >\r\n\r\n <div className=\"warning\">\r\n    \r\n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\r\n\r\n    <p>{warning}</p>\r\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\r\n  </div>\r\n </div></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_4;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\semesterwise\\studymaterial_semester.js",["634","635","636","637","638","639","640","641","642","643","644","645"],"import React from 'react'\r\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './list';\r\nimport Navbar from \"../../Student_dashboard/Navbar\";\r\n\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Classreport = () => {\r\n    const navigate = useNavigate();\r\n    const [material,setMaterial]=useState([]);\r\n    const [subject, setSubject] = useState(\"\")\r\n    const [sem1, setSem1] = useState(false)\r\n    const [sem2, setSem2] = useState(false)\r\n    const [sem3, setSem3] = useState(false)\r\n    const [sem4, setSem4] = useState(false)\r\n    const [study, setStudy] = useState({})\r\n    const [visible, setVisible] = useState(false)\r\n    const [string, setString] = useState(\"\")\r\n    \r\n    const fetchdata=async()=>{\r\n        const response=await fetch(\"http://localhost:4000/studymaterial_student\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'),\r\n            }})\r\n            const json = await response.json()\r\n            console.log(json.sem)\r\n            setStudy(json)\r\n      }\r\n\r\n      console.log(sem1)\r\n      console.log(study)\r\n      async function subjectupdate(e) {\r\n        setVisible(false)\r\n        setString(\"\")\r\n        e.preventDefault();\r\n        console.log(study)\r\n        let data = study.data.filter((data) => {\r\n          if(data.subject == subject)\r\n          {\r\n            return data\r\n          }\r\n        })\r\n        console.log(data)\r\n\r\n            setMaterial(data.reverse())\r\n\r\n            if(data.length != 0)\r\n            {\r\n              setVisible(true)\r\n            }\r\n            else{\r\n              setString(\"No Study Material Posted !\")\r\n\r\n            }\r\n    \r\n      }\r\n\r\n      useEffect(() =>{\r\n        if(study.sem == 'Sem-1')\r\n            {\r\n                setSem1(true)\r\n                console.log(\"This is sem1\",sem1)\r\n                \r\n            }\r\n\r\n            else if(study.sem == \"Sem-2\")\r\n            {\r\n                setSem2(true)\r\n                console.log(sem2)\r\n            }\r\n            else if(study.sem == \"Sem-3\")\r\n            {\r\n                setSem3(true)\r\n                console.log(sem3)\r\n            }\r\n            \r\n            else if(study.sem == \"Sem-4\")\r\n            {\r\n                setSem4(true)\r\n                console.log(sem4)\r\n            }\r\n          \r\n      },[study])\r\n\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        console.log('useeffect called')\r\n        if (token) {\r\n          const user = jwt.decode(token)\r\n          console.log(user)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/dashboard\");\r\n            \r\n          } else {\r\n            fetchdata()\r\n            console.log('useeffect called !!!!!')\r\n\r\n          }\r\n        }\r\n      }, [])\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(material);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Classes Scheduled\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <>\r\n<Navbar />\r\n {<h1 className='text-center-1'>Study Material Uploaded</h1>}\r\n {sem1 && <div className='classrepcontainer'>\r\n  <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Algorithms And Data Structure\">\r\n                  Algorithms and Data Structure\r\n                </option>\r\n                <option value=\"Software Design & Programming\">\r\n                  Software Design & Programming\r\n                </option>\r\n                <option value=\"Mathematical Foundation Of Computing\">\r\n                  Mathematical Foundation of Computing\r\n                </option>\r\n                <option value=\"Computer System Architecture\">\r\n                  Computer System Architecture\r\n                </option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem2 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem3 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Information System Design\">Information System Design</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n                <option value=\"Software Engineering\">Software Engineering</option>\r\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem4 && <div className='classrepcontainer'>\r\n    <form onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  <div  className='nothing_block'>{string}</div>\r\n  {visible && <div classname=\"main\">\r\n    <table className='table table-striped' id='mytable-1'>\r\n      <thead className='heading_1'>\r\n        <tr>\r\n          <th>Professor</th>\r\n          <th>Subject</th>\r\n          <th>File</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List material={material} />\r\n      </tbody>\r\n    </table>\r\n  </div>}\r\n\r\n  \r\n  {visible && <div className='text-center'>\r\n   {/* <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button> */}\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Classreport\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Class Schedule\\Sem_3.js",["646","647","648","649","650","651"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jwt from 'jsonwebtoken'\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./classschedule.css\";\r\nimport * as FaIcons from 'react-icons/fa';\r\nconst Sem_3 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [Manish, setManish] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n   const[success,setsuccess] = useState(false)\r\n  const sem = \"Sem-3\";\r\n\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduleclass', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Manish\") {\r\n      setManish(true)\r\n    }\r\n  }\r\n\r\n  async function schedule(e) {\r\n\r\n\r\n    if (subject && time && date) {\r\n      e.preventDefault()\r\n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n      if (!date) {\r\n        document.getElementById(\"date\").style.color = \"red\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n\r\n      }\r\n      else {\r\n        document.getElementById(\"date\").style.color = \"black\"\r\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\r\n\r\n      }\r\n\r\n      if (!time) {\r\n        document.getElementById(\"time\").style.color = \"red\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n\r\n      else {\r\n        document.getElementById(\"time\").style.color = \"black\"\r\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\r\n      }\r\n\r\n\r\n      if (!subject) {\r\n\r\n        document.getElementById(\"subject\").style.borderColor = \"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n      else {\r\n        // document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor = \"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\r\n      }\r\n    }\r\n  }\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate()\r\n\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <form onSubmit={schedule}>\r\n        <div className=\" mb-3 scheduledcontainer\">\r\n          <div className=\" mb-3\">\r\n            <h1 className=\"class-1\">Class Schedule</h1>\r\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Information System Design\">\r\n                  Information System Design\r\n                </option>\r\n              </select>\r\n            </div>}\r\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n              </select>\r\n            </div>}\r\n            {MKDas && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option>Select Subject</option>\r\n                <option value=\"Software Engineering\">Software Engineering</option>\r\n              </select>\r\n            </div>}\r\n            {Manish && <div className=\"selectsubjectcontainer\">\r\n\r\n              <select\r\n                type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                onChange={(e) => setsubject(e.target.value)}>\r\n                <option value=\"\">Select Subject</option>\r\n                <option value=\"IT Planning and Management\">\r\n                  IT Planning and Management\r\n                </option>\r\n              </select>\r\n            </div>}\r\n\r\n          </div>\r\n          <div className=\"abc-1\">\r\n            <div className=\"class-div\">\r\n              <label htmlFor=\"date\" className=\"class-form-label\" id = \"date\">\r\n                Date:\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"class-form-control\"\r\n                id=\"date-1\"\r\n                aria-describedby=\"date\"\r\n                value={date}\r\n                onChange={(e) => setdate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"time-div\">\r\n              <label htmlFor=\"time\" className=\"time-form-label\" id = \"time\">\r\n                Time:\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                className=\"class-form-control\"\r\n                id=\"time-1\"\r\n                value={time}\r\n                onChange={(e) => settime(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"messagecontent\">\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Message:\r\n            </label>\r\n            <textarea\r\n              type=\"text\"\r\n              class=\"class-form-control-1\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              placeholder=\"Optional\"\r\n              value={message}\r\n              onChange={(e) => setmessage(e.target.value)}></textarea>\r\n          </div>\r\n\r\n          <div className=\"btn-class\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Schedule Class\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Class scheduled successfully</h4>\r\n</div>\r\n      </div>}\r\n         {warning && <><div className=\"container-fluid blacky\">\r\n </div>\r\n <div className=\"warningmain\" >\r\n\r\n <div className=\"warning\">\r\n    \r\n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\r\n\r\n    <p>{warning}</p>\r\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\r\n  </div>\r\n </div></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_3;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Test Schedule\\Sem_3.js",["652","653","654","655","656","657"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./testschedule.css\";\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\nimport { useEffect, useState } from \"react\";\r\nimport jwt from 'jsonwebtoken'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport { useNavigate } from \"react-router-dom\"\r\nconst Sem_3 = () => {\r\n  //\r\n  const navigate = useNavigate();\r\n  const [subject, setsubject] = useState(\"\");\r\n  const [date, setdate] = useState(\"\");\r\n  const [time, settime] = useState(\"\");\r\n  const [message, setmessage] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\r\n  const [NitishaAgg, setNitishaAgg] = useState(false)\r\n  const [MKDas, setMKDas] = useState(false)\r\n  const [Manish, setManish] = useState(false)\r\n  const [teacher, setTeacher] = useState(\"\")\r\n   const[success,setsuccess] = useState(false)\r\n  const sem = \"Sem-3\";\r\n  //-----------\r\n  async function populate(e) {\r\n    const req = await fetch('http://localhost:4000/scheduletest', {\r\n      headers: {\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      },\r\n    })\r\n    const data = await req.json();\r\n    setTeacher(data.name)\r\n    console.log(data)\r\n    if (data.name == \"Unmesh Shukla\") {\r\n      setUnmeshShukla(true)\r\n    }\r\n    if (data.name == \"Nitisha Aggarwal\") {\r\n      setNitishaAgg(true)\r\n    }\r\n    if (data.name == \"M.K Das\") {\r\n      setMKDas(true)\r\n    }\r\n    if (data.name == \"Manish\") {\r\n      setManish(true)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  async function schedule(e) {\r\n    e.preventDefault();\r\n    if(subject && time && date)\r\n    {\r\n  \r\n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",//\r\n          \"Content-Type\": \"application/json\", //\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify({\r\n          subject,\r\n          sem,\r\n          date,\r\n          time,\r\n          message,\r\n          teacher\r\n        }),\r\n      }).then(async (response) => {\r\n        let data = await response.json();\r\n        setwarning(data.warning)\r\n        setsuccess(data.success)\r\n      });\r\n      setTimeout(() => {\r\n        setsuccess(false)\r\n      }, 2500);\r\n    }\r\n    else {\r\n      e.preventDefault()\r\n       if(!date)\r\n       {\r\n        document.getElementById(\"date\").style.color=\"red\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"date\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"date\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n       }\r\n      else\r\n      {\r\n        document.getElementById(\"date\").style.color=\"black\"\r\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\r\n      }\r\n      \r\n       if(!time)\r\n       {\r\n        document.getElementById(\"time\").style.color=\"red\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\r\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\r\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\r\n        document.getElementById(\"time\").classList.add(\"shaking\")\r\n        setTimeout(() => {\r\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\r\n          document.getElementById(\"time\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n\r\n      }\r\n       else\r\n      {\r\n        document.getElementById(\"time\").style.color=\"black\"\r\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\r\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\r\n      }\r\n       \r\n      if (!subject )\r\n       {\r\n  \r\n        document.getElementById(\"subject\").style.borderColor=\"red\"\r\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\r\n        document.getElementById(\"subject\").classList.add(\"shaking\")\r\n         setTimeout(() => {\r\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\r\n        }, 1000);\r\n       }\r\n       else\r\n      {\r\n        // document.getElementById(\"subject\").style.color=\"black\"\r\n        document.getElementById(\"subject\").style.borderColor=\"black\"\r\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\r\n      }\r\n\r\n    \r\n\r\n  }\r\n\r\n  }\r\n  //--------------------\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        populate()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n          <Navbar />\r\n      <form onSubmit={schedule}>\r\n        <div className=\" mb-3 scheduledcontainer\">\r\n        <h1 className=\"class-1\">Test Schedule</h1>\r\n          <div className=\" mb-3\">\r\n          {NitishaAgg && <div className=\"selectsubjectcontainer\">\r\n            \r\n            <select\r\n              type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value= \"\">Select Subject</option>\r\n              <option value=\"Information System Design\">\r\n                Information System Design\r\n              </option>\r\n            </select>\r\n          </div>}\r\n          {UnmeshShukla && <div className=\"selectsubjectcontainer\">\r\n            \r\n            <select\r\n              type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value= \"\">Select Subject</option>\r\n              <option value=\"Cloud Computing\">Cloud Computing</option>\r\n            </select>\r\n          </div>}\r\n          {MKDas && <div className=\"selectsubjectcontainer\">\r\n            \r\n            <select\r\n              type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value= \"\">Select Subject</option>\r\n              <option value=\"Software Engineering\">Software Engineering</option>\r\n            </select>\r\n          </div>}\r\n          {Manish && <div className=\"selectsubjectcontainer\">\r\n            \r\n            <select\r\n              type=\"text\"\r\n                className=\"form-control shadow-none\"\r\n              id=\"subject\"\r\n              name=\"subject\"\r\n              value={subject}\r\n              onChange={(e) => setsubject(e.target.value)}>\r\n              <option value= \"\">Select Subject</option>\r\n              <option value=\"IT Planning and Management\">\r\n                IT Planning and Management\r\n              </option>\r\n            </select>\r\n          </div>}\r\n        </div>\r\n          <div className=\"abc-1\">\r\n            <div className=\"class-div\">\r\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\r\n                Date:\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"class-form-control\"\r\n                id=\"date-1\"\r\n                aria-describedby=\"date\"\r\n                value={date}\r\n                onChange={(e) => setdate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"time-div\">\r\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\r\n                Time:\r\n              </label>\r\n              <input\r\n                type=\"time\"\r\n                className=\"class-form-control\"\r\n                id=\"time-1\"\r\n                value={time}\r\n                onChange={(e) => settime(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"messagecontent\">\r\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\r\n              Message:\r\n            </label>\r\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\r\n              rows=\"3\"\r\n              placeholder=\"Optional\"\r\n              value={message}\r\n              onChange={(e) => setmessage(e.target.value)}></textarea>\r\n          </div>\r\n        <div className=\"btn-class\">\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Schedule Test\r\n        </button>\r\n        </div>\r\n    \r\n        </div>\r\n      </form>\r\n      {success &&  <div className=\"container-fluid blacky\">\r\n    <div className=\"success\">\r\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\r\n</svg>\r\n</div>\r\n<h4>Test scheduled successfully</h4>\r\n</div>\r\n      </div>}\r\n      {warning && <><div className=\"container-fluid blacky\">\r\n </div>\r\n <div className=\"warningmain\" >\r\n\r\n <div className=\"warning\">\r\n    \r\n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\r\n\r\n    <p>{warning}</p>\r\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\r\n  </div>\r\n </div></>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sem_3;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\teacher_assignment_report.js",["658","659","660","661","662","663"],"import React from 'react'\r\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"../Scheduled_Class_List/scheduledclass.css\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport Navbar from \"../Teacher_dashboard/Navbar\";\r\n\r\nimport List from './list';\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Assignmentreport = () => {\r\n  const navigate = useNavigate();\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/assignmentreportteacher\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    setAssignments(json.data)\r\n    if (json.data.length != 0) {\r\n      setVisible(true)\r\n      setString(\"Assignments Posted \")\r\n    }else{\r\n      setString(\"No Assignments Posted !\")\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      } else {\r\n        fetchdata()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(assignments);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Assignments Posted\", 70, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n    <>\r\n  <Navbar />\r\n      {<h1 className='text-center pt-3'>{string}</h1>}\r\n\r\n    {visible && <div className='tableblock'>\r\n        <table className='table table-striped' id='mytable'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Professor</th>\r\n              <th>Subject</th>\r\n              <th>Deadline</th>\r\n              <th>Assignment</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List assignments={assignments} />\r\n          </tbody>\r\n        </table>\r\n      </div>}\r\n      {/* {visible && <div className='text-center'>\r\n        <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n        <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n      </div>} */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Assignmentreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\student_dashboard.js",["664"],"import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar.js\";\r\nimport \"./student_dashboard.css\";\r\n\r\nconst Dashboard = (props) => {\r\n    const [totalclassesheld, setTotalclassesheld] = useState([])\r\n    const [totalClasstaken, setTotalClasstaken] = useState([])\r\n    const [totalClassScheduled, setTotalClassScheduled] = useState([])\r\n    const [totalTestScheduled, setTotalTestScheduled] = useState([])\r\n    const [assignments, setAssignments] = useState([])\r\n    let attendancepercentage\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState([])\r\n    const [email, setEmail] = useState([])\r\n\r\n    async function populatedashboard() {\r\n        const req = await fetch('http://localhost:4000/dashboard', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('token'),\r\n\r\n            },\r\n        })\r\n\r\n        const json = await req.json()\r\n\r\n        // console.log(json)\r\n        if (json.status === 'ok') {\r\n            setName(json.name)\r\n            setEmail(json.email)\r\n            setTotalclassesheld(json.Classes_held)\r\n            setTotalClassScheduled(json.Classes_Scheduled)\r\n            setTotalClasstaken(json.Classes_taken_count)\r\n            setTotalTestScheduled(json.Test_Scheduled)\r\n            setAssignments(json.Assignment_posted)\r\n\r\n        }\r\n        else {\r\n            // alert(data.error)\r\n        }\r\n    }\r\n\r\n    attendancepercentage = (totalClasstaken / totalclassesheld) * 100\r\n    // console.log(attendancepercentage)\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n            const user = jwt.decode(token)\r\n            if (!user) {\r\n                localStorage.removeItem('token')\r\n                navigate(\"/\");\r\n            } else {\r\n                populatedashboard()\r\n            }\r\n        }\r\n    }, [name], [email])\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div>\r\n                <div className=\"flex dashboardcontent\">\r\n                    <div class=\"col main pt-5  dashboardbackground\">\r\n\r\n                    <div class=\"row mb-3 dashblocks\">\r\n                            <Link to='/classschedule'><div class=\"col-xl-3 col-sm-6 blockcolour\">\r\n                                <h5 class=\"text-uppercase pt-3\">CLASS SCHEDULED</h5>\r\n                                <h1 class=\"display-4\">{totalClassScheduled}</h1>\r\n                            </div></Link>\r\n                            <Link to='/testschedule'><div class=\"col-xl-3 col-sm-6 blockcolour\">\r\n                            <h5 class=\"text-uppercase pt-3\">TEST SCHEDULED</h5>\r\n                                <h1 class=\"display-4\">{totalTestScheduled}</h1>\r\n                            </div></Link>\r\n                            <Link to='/assignmentreportstudent'><div class=\"col-xl-3 col-sm-6 blockcolour\">\r\n                               <h5 class=\"text-uppercase pt-3\">ASSIGNMENTS</h5>\r\n                                <h1 class=\"display-4\">{assignments}</h1>\r\n                            </div></Link>\r\n                        </div>\r\n\r\n\r\n                    \r\n\r\n                        <div class=\"row overviewdatacontent\">\r\n                            <div class=\"col-lg-7 col-md-6 col-sm-12 datacontent flex\">\r\n                                <div class=\"classinfo\">\r\n                                    <h5>Total classes Held</h5>\r\n                                    <h5>Total classes Taken</h5>\r\n                                    <h5>Total Tests</h5>\r\n                                    <h5>Assignments submitted</h5>\r\n                                    <h5>Attendance %</h5>\r\n                                </div>\r\n                                <div class=\"classinfoval\">\r\n                                    <h5>{totalclassesheld}</h5>\r\n                                    <h5>{totalClasstaken}</h5>\r\n                                    <h5>{totalTestScheduled}</h5>\r\n                                    <h5>{assignments}</h5>\r\n                                    <h5>{attendancepercentage} %</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profilecontent\"\r\n                        style={{\r\n                            display: props.show ? \"block\" : \"none\"\r\n                        }}>\r\n                        <br /><br />\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\change_teacher_password.js",["665","666"],"import React, { useEffect, useState } from 'react'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./change_teach_password.css\"\r\n\r\n\r\nconst ChangeTeacherPassword = () => {\r\n\r\n  const [ifpasswordsame, setIfpasswordsame] = useState(false);\r\n  const [ifconfirmpassworddifferent, setIfconfirmpassworddifferent] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const [teacher_id, setTeacher_id] = useState([])\r\n  const [allpasswords, setAllpasswords] = useState({\r\n    oldpassword: \"\",\r\n    newpassword: \"\",\r\n    confirmpassword: \"\"\r\n  })\r\n  const [errmsg, setErrmsg] = useState(\"\")\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setAllpasswords({\r\n      ...allpasswords,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n\r\n  async function updatepassword(e) {\r\n    e.preventDefault()\r\n\r\n    if (allpasswords.oldpassword === allpasswords.newpassword) {\r\n      setIfpasswordsame(true);\r\n      setIfconfirmpassworddifferent(false);\r\n      // setErrmsg(\"Old password and New password cannot be same\");\r\n    } else if (allpasswords.newpassword !== allpasswords.confirmpassword) {\r\n      // setErrmsg(\"Confirm password and new password must be same\");\r\n      setIfpasswordsame(false);\r\n      setIfconfirmpassworddifferent(true);\r\n    } else {\r\n      const req = await fetch('http://localhost:4000/Teacherdashboard/changepassword', {\r\n        method: \"PATCH\",\r\n        headers: {\r\n\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          'x-access-token': localStorage.getItem('token'),\r\n        },\r\n        body: JSON.stringify(allpasswords),\r\n      }\r\n      )\r\n      const json = await req.json()\r\n      console.log(json)\r\n      if (json.status === 'ok') {\r\n        setTeacher_id(json.Teacher_id)\r\n      }\r\n      // console.log(teacher_id)\r\n      if (json) {\r\n        setErrmsg(\"\")\r\n        alert(\"Password updated successful\")\r\n        navigate(\"/loginteacher\");\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/Teacherdashboard\");\r\n      }\r\n    }\r\n  }, [teacher_id])\r\n\r\n  return (\r\n    <>\r\n      <section className=\"wrapper \">\r\n        {ifpasswordsame && < div class=\"alert alert-danger\" role=\"alert\">\r\n          Old password and New password cannot be same!\r\n        </div>}\r\n\r\n        {ifconfirmpassworddifferent && < div class=\"alert alert-danger\" role=\"alert\">\r\n          Confirm password and new password must be same\r\n        </div>}\r\n        <div className=\"container pt-10\">\r\n          <div className=\"col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4 text-center\">\r\n            <form className=\"rounded bg-white shadow p-5\" >\r\n              <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Change Password</h3>\r\n\r\n              <label htmlFor=\"floatingInput\">Old Password</label>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingInput\"\r\n                  name=\"oldpassword\"\r\n                  placeholder=\"Old Password\"\r\n                  value={allpasswords.oldpassword}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <label htmlFor=\"floatingPassword\">New Password</label>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingPassword\"\r\n                  name=\"newpassword\"\r\n                  placeholder=\"New Password\"\r\n                  value={allpasswords.newpassword}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n\r\n              <label htmlFor=\"floatingConfirmPassword\">Confirm Password</label>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"floatingConfirmPassword\"\r\n                  name=\"confirmpassword\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={allpasswords.confirmpassword}\r\n                  onChange={handleChange}\r\n\r\n                />\r\n              </div>\r\n              {\r\n                errmsg ? <h3 className='text-danger'>{errmsg}</h3> : \"\"\r\n              }\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary submi_btn w-100 my-4\"\r\n                onClick={updatepassword}\r\n              >\r\n                Update Password\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default ChangeTeacherPassword","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Teacherprofile2.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Notifications.js",["667"],"import React, { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport List from './List'\r\nimport Navbar from './Navbar'\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Notifications = () => {\r\n    const navigate = useNavigate();\r\n    const[notification,setnotification]=useState(\"\")\r\n    const [teacher, setTeacher] = useState(\"\")\r\n\r\n\r\n    console.log(notification)\r\n    const fetchdata=async()=>{\r\n        const response = await fetch(\"http://localhost:4000/assignmentsubmit\", {\r\n      \r\n            method: \"GET\",\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n            const json = await response.json()\r\n            setnotification(json.data.reverse())\r\n            setTeacher(json.name)\r\n    }\r\n\r\n\r\n        useEffect(() => {\r\n     \r\n          const token = localStorage.getItem('token')\r\n          if (token) {\r\n            const user = jwt.decode(token)\r\n            console.log(user)\r\n            if (!user) {\r\n              localStorage.removeItem('token')\r\n              navigate(\"/Teacherdashboard\");\r\n            } else {\r\n              fetchdata()\r\n            }\r\n          }        \r\n        },[])\r\n        \r\n  return (\r\n    <>\r\n    <Navbar/>\r\n    <div className=\"container notification\">\r\n     {notification && <List notification={notification} teacher={teacher} />} \r\n     </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Notifications","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\scheduleclassreport.js",["668","669","670","671"],"import React from 'react'\r\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport './scheduledclass.css';\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from './list';\r\nimport Navbar from '../Teacher_dashboard/Navbar'\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Classreport = () => {\r\n    const navigate = useNavigate();\r\n    const [classes, setClasses]=useState([]);\r\n    const [visible, setVisible] = useState(false)\r\n    const [string, setString] = useState(\"\")\r\n    const fetchdata=async()=>{\r\n        const response=await fetch(\"http://localhost:4000/scheduledclassreport\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n            const json = await response.json()\r\n                setClasses(json.data.reverse())\r\n                if(json.data.length != 0)\r\n                {\r\n                  setVisible(true)\r\n                  setString(\"Overall Scheduled Classes \")\r\n                }else {\r\n                  setString(\"No Classes Scheduled !\")\r\n                }\r\n\r\n\r\n      }\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n          const user = jwt.decode(token)\r\n          console.log(user)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/Teacherdashboard\");\r\n          } else {\r\n            fetchdata()\r\n    \r\n          }\r\n        }\r\n      }, [])\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(classes);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Overall Classes Scheduled\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <div className='height100vh'>\r\n<Navbar />\r\n {<h1 className='text-center pt-3'>{string}</h1>}\r\n \r\n {visible && <div className='tableblock'>\r\n    <table className='table table-striped' id='mytable'>\r\n      <thead className='heading-2'>\r\n        <tr>\r\n          <th>Professor</th>\r\n          <th>Subject</th>\r\n          <th>Date</th>\r\n          <th>Time</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List classes={classes} />\r\n      </tbody>\r\n    </table>\r\n  </div>}\r\n  {visible && <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>}\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Classreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\semesterwise\\Classreport_semester.js",["672","673","674","675","676","677","678","679","680","681","682","683","684"],"import React from 'react'\r\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport \"../Scheduledcommon.css\"\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from '../list';\r\nimport Navbar from \"../../Student_dashboard/Navbar\";\r\n\r\nvar XLSX = require(\"xlsx\");\r\n\r\nconst Classreport = () => {\r\n    const navigate = useNavigate();\r\n    const [classes,setClasses]=useState([]);\r\n    const newdate= new Date()\r\n    const monthval= newdate.getMonth()+1;\r\n    const day =newdate.getDate()\r\n    const [subject, setSubject] = useState(\"\")\r\n    const [sem1, setSem1] = useState(false)\r\n    const [sem2, setSem2] = useState(false)\r\n    const [sem3, setSem3] = useState(false)\r\n    const [sem4, setSem4] = useState(false)\r\n    const [report, setReport] = useState({})\r\n    const [visible, setVisible] = useState(false)\r\n    const [string, setString] = useState(\"\")\r\n    \r\n    const fetchdata=async()=>{\r\n        const response=await fetch(\"http://localhost:4000/classschedule\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n            const json = await response.json()\r\n            setReport(json)\r\n      }\r\n\r\n      async function subjectupdate(e) {\r\n        setVisible(false)\r\n        setString(\"\")\r\n        e.preventDefault();\r\n    \r\n        console.log(subject)\r\n        console.log(report)\r\n\r\n        let data = report.data.filter((data)=>{\r\n          if(data.date.slice(5,7)==monthval && data.date.slice(8,10)>=day)\r\n          {\r\n              return data\r\n          }\r\n          else if(data.date.slice(5,7)>monthval)\r\n          {\r\n            return data\r\n          }\r\n        })\r\n        let data2 = data.filter((data) => {\r\n          if(data.subject == subject)\r\n          {\r\n            return data\r\n          }\r\n        })\r\n        console.log(data2)\r\n        if(data2.length!=0)\r\n        {\r\n          setVisible(true)\r\n        }\r\n        else{\r\n          setString(\"No Classes are scheduled !\")\r\n\r\n        }\r\n\r\n            setClasses(data2.reverse())    \r\n      }\r\n\r\n      useEffect(() =>{\r\n        if(report.sem == 'Sem-1')\r\n            {\r\n                setSem1(true)\r\n                console.log(\"This is sem1\",sem1)\r\n                \r\n            }\r\n\r\n            else if(report.sem == \"Sem-2\")\r\n            {\r\n                setSem2(true)\r\n                console.log(sem2)\r\n            }\r\n            else if(report.sem == \"Sem-3\")\r\n            {\r\n                setSem3(true)\r\n                console.log(sem3)\r\n            }\r\n            \r\n            else if(report.sem == \"Sem-4\")\r\n            {\r\n                setSem4(true)\r\n                console.log(sem4)\r\n            }\r\n          \r\n      },[report])\r\n\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n          const user = jwt.decode(token)\r\n          console.log(user)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/Teacherdashboard\");\r\n          } else {\r\n            fetchdata()\r\n    \r\n          }\r\n        }\r\n      }, [])\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(classes);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Classes Scheduled\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <div className='height100vh'>\r\n<Navbar />\r\n {<h1 className='text-center-1'>Scheduled Classes </h1>}\r\n <div className='rep_1 '>\r\n {sem1 && <div className='classrepcontainer'>\r\n  <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Algorithms And Data Structure\">\r\n                  Algorithms and Data Structure\r\n                </option>\r\n                <option value=\"Software Design & Programming\">\r\n                  Software Design & Programming\r\n                </option>\r\n                <option value=\"Mathematical Foundation Of Computing\">\r\n                  Mathematical Foundation of Computing\r\n                </option>\r\n                <option value=\"Computer System Architecture\">\r\n                  Computer System Architecture\r\n                </option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\r\n              Search\r\n            </button>\r\n    </form>\r\n  \r\n  </div>}\r\n  {sem2 && <div className='classrepcontainer'>\r\n    <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n             Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem3 && <div className='classrepcontainer'>\r\n    <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Information System Design\">Information System Design</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n                <option value=\"Software Engineering\">Software Engineering</option>\r\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem4 && <div className='classrepcontainer'>\r\n    <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  </div>\r\n  <div className='nothing_block'>{string}</div>\r\n  {visible && <div classname=\"main\">\r\n    <table className='table table-striped' id='mytable-1'>\r\n      <thead className='heading_1'>\r\n        <tr>\r\n          <th>Professor</th>\r\n          <th>Subject</th>\r\n          <th>Date</th>\r\n          <th>Time</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List classes={classes} />\r\n      </tbody>\r\n    </table>\r\n  </div>}\r\n  {visible && <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>}\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Classreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\semesterwise\\Assignmentreport_semester.js",["685","686","687","688","689","690","691","692","693","694","695","696"],"import React from 'react'\r\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"../../Scheduled_Class_List/Scheduledcommon.css\";\r\nimport List from './list';\r\nimport Navbar from \"../../Student_dashboard/Navbar\";\r\n\r\nvar XLSX = require(\"xlsx\");\r\nlet user;\r\nconst Assignmentreport = () => {\r\n    const navigate = useNavigate();\r\n    const [assignments,setAssignments]=useState([]);\r\n    const [subject, setSubject] = useState(\"\")\r\n    const [sem1, setSem1] = useState(false)\r\n    const [sem2, setSem2] = useState(false)\r\n    const [sem3, setSem3] = useState(false)\r\n    const [sem4, setSem4] = useState(false)\r\n    const [report, setReport] = useState({})\r\n    const [visible, setVisible] = useState(false)\r\n    const [string, setString] = useState(\"\")\r\n    const newdate = new Date()\r\n    const monthval = newdate.getMonth()+1;\r\n    const day = newdate.getDate()\r\n    const year = newdate.getFullYear()\r\n    const[files,setfile]=useState(\"\")\r\n\r\n    const fetchdata=async()=>{\r\n        const response = await fetch(\"http://localhost:4000/assignmentreportstudent\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'x-access-token': localStorage.getItem('token'), //\r\n            }})\r\n\r\n            const json = await response.json()\r\n           \r\n              setReport(json)\r\n\r\n      }\r\n      \r\n      async function subjectupdate(e) {\r\n        setVisible(false)\r\n        setString(\"\")\r\n        e.preventDefault();\r\n\r\n        let data = report.data.filter((data)=>{\r\n          if(((data.deadline.slice(8,10)>=day &&  data.deadline.slice(5,7)==monthval) || data.deadline.slice(5,7)>monthval || data.deadline.slice(0,5)>year  ) && (data.subject == subject))\r\n          {\r\n              return data\r\n          }\r\n         \r\n        })\r\n\r\n        console.log(data)\r\n\r\n            setAssignments(data.reverse())\r\n            if(data.length != 0)\r\n            {\r\n              setVisible(true)\r\n            }\r\n            else{\r\n              setString(\"No Assignments Posted !\")\r\n\r\n            }\r\n    \r\n      }\r\n\r\n      useEffect(() =>{\r\n        if(report.sem == 'Sem-1')\r\n            {\r\n                setSem1(true)\r\n                console.log(\"This is sem1\",sem1)\r\n                \r\n            }\r\n\r\n            else if(report.sem == \"Sem-2\")\r\n            {\r\n                setSem2(true)\r\n                console.log(sem2)\r\n            }\r\n            else if(report.sem == \"Sem-3\")\r\n            {\r\n                setSem3(true)\r\n                console.log(sem3)\r\n            }\r\n            \r\n            else if(report.sem == \"Sem-4\")\r\n            {\r\n                setSem4(true)\r\n                console.log(sem4)\r\n            }\r\n          \r\n      },[report])\r\n\r\n      useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n           user = jwt.decode(token)\r\n          if (!user) {\r\n            localStorage.removeItem('token')\r\n            navigate(\"/dashboard\");\r\n          } else {\r\n            fetchdata()\r\n          }\r\n        }\r\n      }, [])\r\n      const AssignmentSubmit=async(e)=>{\r\n        e.preventDefault()\r\n        console.log(\"this is user\",user);\r\n        await fetch(\"http://localhost:4000/assignmentsubmit\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body:JSON.stringify({\r\n            files,\r\n            enrollNum:user.enrollNum,\r\n            subject\r\n          })\r\n        })\r\n    }\r\n  \r\n  const exporttoexcelhandler= () =>{\r\n     var wb = XLSX.utils.book_new(),\r\n     ws = XLSX.utils.json_to_sheet(assignments);\r\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\r\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () =>{\r\n    const doc = new jsPDF()\r\n    doc.text(\"Assignments Posted\",70,10)\r\n    autoTable(doc, { html: '#mytable'})\r\n    doc.save('table.pdf')\r\n  };\r\n  return (\r\n   <>\r\n<Navbar />\r\n {<h1 className='text-center-1'>Assignments Posted </h1>}\r\n {sem1 && <div className='classrepcontainer'>\r\n    <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                 <option required>Select Subject</option>\r\n                <option value=\"Algorithms And Data Structure\">\r\n                  Algorithms and Data Structure\r\n                </option>\r\n                <option value=\"Software Design & Programming\">\r\n                  Software Design & Programming\r\n                </option>\r\n                <option value=\"Mathematical Foundation Of Computing\">\r\n                  Mathematical Foundation of Computing\r\n                </option>\r\n                <option value=\"Computer System Architecture\">\r\n                  Computer System Architecture\r\n                </option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem2 && <div className='classrepcontainer'>\r\n    <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\r\n                <option value=\"Operating Systems\">Operating Systems</option>\r\n                <option value=\"Database Systems\">Database Systems</option>\r\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\r\n                <option value=\"Open Elective-1\">Open Elective-1</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem3 && <div className='classrepcontainer'>\r\n    <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Information System Design\">Information System Design</option>\r\n                <option value=\"Cloud Computing\">Cloud Computing</option>\r\n                <option value=\"Software Engineering\">Software Engineering</option>\r\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\"id='btn-12' >\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  {sem4 && <div className='classrepcontainer'>\r\n    <form className='repform1' onSubmit={subjectupdate}>\r\n    <select\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"subject\"\r\n                name=\"subject\"\r\n                value={subject}\r\n                required\r\n                onChange={(e) => setSubject(e.target.value)}>\r\n                <option required>Select Subject</option>\r\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\r\n                <option value=\"Health Informatics\">Health Informatics</option>\r\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\r\n              </select>\r\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\r\n              Search\r\n            </button>\r\n    </form>\r\n  </div>}\r\n  <div  className='nothing_block'>{string}</div>\r\n  {visible && <div classname=\"main\" id = \"mytableblock-1\">\r\n    <table className='table table-striped' id='mytable-1'>\r\n      <thead className='heading_1'>\r\n        <tr>\r\n            <th>Date</th>\r\n            <th>Professor</th>\r\n            <th>Subject</th>\r\n            <th>Deadline</th>\r\n            <th>Assignment</th>\r\n            <th>Upload</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      <List key={assignments.id} assignments={assignments} files={files} setfile={setfile} AssignmentSubmit={AssignmentSubmit} />\r\n      </tbody>\r\n    </table>\r\n  </div>}\r\n\r\n  {visible && <div className='text-center'>\r\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n   </div>}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Assignmentreport","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\Navbar.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Student_dashboard\\Navbar.js",["697","698","699","700","701","702","703","704","705","706","707"],"import React, { useEffect, useState } from \"react\";\r\nimport './Navbar.css';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport { IconContext } from 'react-icons';\r\nimport logo from './image.png'\r\nimport jwt from 'jsonwebtoken'\r\n\r\n\r\n\r\nfunction Navbar() {\r\n    const navigate = useNavigate();\r\n    const [sidebar, setSidebar] = React.useState(false);\r\n    const [sem, setsem] = React.useState(false);\r\n    const showsemesterhandler = () => setsem(!sem);\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    const [sem1, setSem1] = useState(false)\r\n    const [sem2, setSem2] = useState(false)\r\n    const [sem3, setSem3] = useState(false)\r\n    const [sem4, setSem4] = useState(false)\r\n\r\n    async function populatenavbar() {\r\n        const req = await fetch('http://localhost:4000/dashboard', {\r\n            headers: {\r\n                'x-access-token': localStorage.getItem('token'),\r\n\r\n            },\r\n        })\r\n\r\n        const json = await req.json()\r\n        if (json.status == \"ok\") {\r\n            if (json.semester == \"Sem-1\") {\r\n                setSem1(true)\r\n            }\r\n\r\n            else if (json.semester == \"Sem-2\") {\r\n                setSem2(true)\r\n            }\r\n            else if (json.semester == \"Sem-3\") {\r\n                setSem3(true)\r\n            }\r\n\r\n            else if (json.semester == \"Sem-4\") {\r\n                setSem4(true)\r\n            }\r\n        }\r\n        console.log(json);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n            const user = jwt.decode(token)\r\n            if (!user) {\r\n                localStorage.removeItem('token')\r\n                navigate(\"/\");\r\n            } else {\r\n                populatenavbar()\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <IconContext.Provider value={{ color: '#fff' }}>\r\n                <div className='navbar'>\r\n                    <Link to='#' className='menu-bars'>\r\n                        <FaIcons.FaBars onClick={showSidebar} />\r\n                    </Link>\r\n                    <div className=\"heading\">\r\n                        <i class=\"fa fa-bell mt-1 fa-2x\"></i>\r\n                        <Link to=\"/dashboard/profile\"><div className=\"button\"><img src={logo} alt=\"...\" class=\"profilePic\"></img></div></Link>\r\n\r\n                    </div>\r\n                </div>\r\n                <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                    <ul className='nav-menu-items' >\r\n                        <li className='navbar-toggle'>\r\n                            <FaIcons.FaCaretLeft size={40} onClick={showSidebar} />\r\n                            <span>Classopedia</span>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <AiIcons.AiFillHome color='rgb(0, 104, 74)' />\r\n                            <Link to=\"/dashboard\"><span>Home</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <FaIcons.FaUserCircle color='rgb(0, 104, 74)' />\r\n                            <Link to=\"/dashboard/profile\"><span>Profile</span></Link>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <FaIcons.FaRegCalendarCheck color='rgb(0, 104, 74)' />\r\n                            <Link to='/scheduledclass'><span><p>Scheduled Classes</p></span></Link>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <FaIcons.FaBookReader color='rgb(0, 104, 74)' />\r\n                            <Link to='/scheduledtests'><span><p>Scheduled Tests</p></span></Link>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <FaIcons.FaRegListAlt color='rgb(0, 104, 74)' />\r\n                            <Link to='/assignments'><span><p>Assignments</p></span></Link>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <FaIcons.FaBook color='rgb(0, 104, 74)' />\r\n                            <Link to='/studymaterial'><span><p>Study Material</p></span></Link>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <FaIcons.FaUserCheck color='rgb(0, 104, 74)' />\r\n                            <Link to='/attendancereport'><span><p>Attendance Report</p></span></Link>\r\n                        </li>\r\n                        <li className=\"nav-text\">\r\n                            <FaIcons.FaSignInAlt color='rgb(0, 104, 74)' />\r\n                            <span onClick={() => {\r\n                                localStorage.removeItem('token')\r\n                                navigate(\"/\")\r\n                            }}>Logout</span>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </IconContext.Provider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance list\\List.js",["708","709","710"],"import React, { useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./attendance.css\";\r\n\r\nconst List = ({ students, status, setstatus }) => {\r\n  useEffect(() => {\r\n    let obj = {};\r\n    {\r\n      students.map((student) => {\r\n        const { name } = student;\r\n        obj[name] = false;\r\n      });\r\n    }\r\n    setstatus(obj);\r\n  }, [students]);\r\n\r\n  return (\r\n    <>\r\n      {students.map((student) => {\r\n        const { name, rollNum } = student;\r\n        return (\r\n          <tr>\r\n            <td>\r\n              {name} <br />\r\n {rollNum}\r\n            </td>\r\n            <td>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"checkbox\"\r\n                  type=\"checkbox\"\r\n                  id=\"flexCheckChecked1\"\r\n                  onChange={(e) =>\r\n                    setstatus({ ...status, [`${name}`]: e.target.checked })\r\n                  }\r\n                />\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\list.js",["711"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CSVLink } from 'react-csv'\r\nconst List = ({ assignments }) => {\r\n  return (\r\n    <>\r\n      {assignments.map((teach) => {\r\n        const {date, teacher, subject, deadline, file } = teach;\r\n        return (\r\n          <>\r\n            <tr>\r\n              <td>\r\n                {date}\r\n              </td>\r\n              <td>{teacher}\r\n              </td>\r\n              <td>\r\n                {subject}\r\n              </td>\r\n              <td>\r\n                {deadline}\r\n              </td>\r\n              <td>\r\n                {file}\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default List","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_Class_List\\list.js",["712"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {CSVLink} from 'react-csv'\r\nconst List = ({classes}) => {\r\n  return (\r\n   <>\r\n    {classes.map((teach)=>{\r\n        const {name,subject,date,time}=teach;\r\n        return(\r\n            <>\r\n               <tr>\r\n            <td>{name}\r\n            </td>\r\n            <td>\r\n              {subject}\r\n            </td>\r\n            <td>\r\n              {date}\r\n            </td>\r\n            <td>\r\n              {time}\r\n            </td>\r\n          </tr>\r\n            </>\r\n        )\r\n     })}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default List","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Assignment_report\\semesterwise\\list.js",["713"],"\r\nimport React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CSVLink } from 'react-csv'\r\nconst List = ({ assignments, AssignmentSubmit, files, setfile, key }) => {\r\n  return (\r\n    <>\r\n      {assignments.map((teach, index) => {\r\n        const { date, teacher, subject, deadline, file } = teach;\r\n        return (\r\n\r\n          <>\r\n            <tr>\r\n              <td>\r\n                {date}\r\n              </td>\r\n              <td>{teacher}\r\n              </td>\r\n              <td>\r\n                {subject}\r\n              </td>\r\n              <td>\r\n                {deadline}\r\n              </td>\r\n              <td>\r\n                {file}\r\n              </td>\r\n              <td>\r\n                <form id=\"uploadandsubmitblock\">\r\n                  <input type=\"file\" id='inputfilechoose' value={files} onChange={(e) => setfile(e.target.value)} key={teach.id} />\r\n                  <button className='upload_button'>Upload</button>\r\n                  <button type='submit' onClick={AssignmentSubmit}>Submit</button>\r\n                </form>\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default List\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Teacher_dashboard\\List.js",["714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738"],"import React from \"react\";\r\n\r\nconst List = ({ notification, teacher }) => {\r\n    console.log(\"notifications : \",notification)\r\n\r\n    const notifi=notification.filter((data) => {\r\n      if(teacher == \"Unmesh Shukla\")\r\n      {\r\n        if(data.subject==\"Database Systems\" || data.subject==\"Algorithms and Data Structure\" || data.subject==\"Cloud Computing\" || data.subject==\"Health Informatics\")\r\n        {\r\n          return data\r\n        }\r\n      }\r\n      else if(teacher == \"Nitisha Aggarwal\")\r\n      {\r\n        if(data.subject==\"Software Design & Programming\" || data.subject==\"Computer Communication and Networks\" || data.subject==\"Operating Systems\" || data.subject==\"Information System Design\" || data.subject==\"Internet of Things Systems, Security and Cloud\")\r\n        {\r\n          return data\r\n        }\r\n      }\r\n      else if(teacher == \"M.K Das\")\r\n      {\r\n        if(data.subject==\"Mathematical Foundation of Computing\" || data.subject==\"Applied Machine Learning\" || data.subject==\"Software Engineering\" || data.subject==\"Research Methods in Informatics\")\r\n        {\r\n          return data\r\n        }\r\n      }\r\n      else if(teacher == \"Sunil Kumar\")\r\n      {\r\n        if(data.subject==\"Computer System Architecture\")\r\n        {\r\n          return data\r\n        }\r\n      }\r\n      else if(teacher == \"Sanjeev Singh\")\r\n      {\r\n        if(data.subject==\"Open Elective-1\")\r\n        {\r\n          return data\r\n        }\r\n      }\r\n      else if(teacher == \"Manish\")\r\n      {\r\n        if(data.subject==\"IT Planning and Management\" || data.subject==\"Algorithms and Data Structure\" || data.subject==\"Cloud Computing\")\r\n        {\r\n          return data\r\n        }\r\n      }\r\n    })\r\n    console.log(notifi)\r\n  \r\n  return (\r\n    <>\r\n     {notifi.map((noti)=>{\r\n        const {name,subject}=noti;\r\n        return(\r\n            \r\n            <>\r\n            \r\n            <div className=\"container noti\">\r\n\r\n<h5>{name} has Submitted the assignment of {subject}</h5>\r\n\r\n            </div>\r\n            \r\n            </>\r\n        )\r\n     })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Scheduled_test_List\\list.js",["739"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {CSVLink} from 'react-csv'\r\nconst List = ({tests}) => {\r\n  return (\r\n   <>\r\n    {tests.map((test)=>{\r\n        const {name,subject,date,time}=test;\r\n        return(\r\n            <>\r\n               <tr>\r\n            <td>{name}\r\n            </td>\r\n            <td>\r\n              {subject}\r\n            </td>\r\n            <td>\r\n              {date}\r\n            </td>\r\n            <td>\r\n              {time}\r\n            </td>\r\n          </tr>\r\n            </>\r\n        )\r\n     })}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default List","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\semesterwise\\list.js",["740"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {CSVLink} from 'react-csv'\r\nconst List = ({material}) => {\r\n  return (\r\n   <>\r\n    {material.map((teach)=>{\r\n        const {teacher,subject,date,file}=teach;\r\n        return(\r\n            <>\r\n               <tr>\r\n            <td>{teacher}\r\n            </td>\r\n            <td>\r\n              {subject}\r\n            </td>\r\n            <td>\r\n              {file}\r\n            </td>\r\n            <td>\r\n              {date}\r\n            </td>\r\n          </tr>\r\n            </>\r\n        )\r\n     })}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default List","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Filters\\List.js",["741"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {CSVLink} from 'react-csv'\r\nconst List = ({student}) => {\r\n  return (\r\n   <>\r\n    {student.map((stu)=>{\r\n        const {date,name,attendanceStatus,subject}=stu;\r\n        return(\r\n            <>\r\n               <tr>\r\n            <td>\r\n              {name}\r\n            </td>\r\n            <td>\r\n              {subject}\r\n            </td>\r\n            <td>\r\n              {date}\r\n            </td>\r\n            <td>\r\n              {attendanceStatus}\r\n            </td>\r\n          </tr>\r\n            </>\r\n        )\r\n     })}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default List","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Attendance Report\\list2.js",["742"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {CSVLink} from 'react-csv'\r\nconst List = ({attendmaterial}) => {\r\n  return (\r\n   <>\r\n    {attendmaterial.map((stu)=>{\r\n        const {date,attendanceStatus,subject}=stu;\r\n        return(\r\n            <>\r\n            <tr>\r\n            <td>\r\n                {subject}\r\n            </td>\r\n            <td>\r\n              {date}\r\n            </td>\r\n            <td>\r\n                {attendanceStatus}\r\n            </td>\r\n          </tr>\r\n            </>\r\n        )\r\n     })}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default List","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Study Material\\list.js",["743"],"import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { CSVLink } from 'react-csv'\r\nconst List = ({ material }) => {\r\n  return (\r\n    <>\r\n      {material.map((teach) => {\r\n        const { teacher, subject, semester, file } = teach;\r\n        return (\r\n          <>\r\n            <tr>\r\n              <td>{teacher}\r\n              </td>\r\n              <td>\r\n                {subject}\r\n              </td>\r\n              <td>\r\n                {semester}\r\n              </td>\r\n              <td>\r\n                {file}\r\n              </td>\r\n            </tr>\r\n          </>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default List","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Navbar.js",["744"],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Attendance_report.js",[],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem1Attendance.js",["745","746","747","748","749","750","751","752","753","754","755"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from '../Filters/List'\r\nimport jsPDF from \"jspdf\";\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nimport autoTable from 'jspdf-autotable';\r\n// import './filters.css'\r\n\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem1Attendance = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const[report,setreport]=useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem1\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    \r\n    setstudent(json.data2)\r\n\r\n    if(json.data2.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n    }\r\n\r\n    if (monthval) {\r\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data2.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data2)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n       var val= e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setreport(false)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setreport(false)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setreport(false)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  \r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n        var wb = XLSX.utils.book_new(),\r\n          ws = XLSX.utils.json_to_sheet(student);\r\n        XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n        XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n      };\r\n    \r\n      const exporttopdfhandler = () => {\r\n        const doc = new jsPDF()\r\n        let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n        doc.text(heading, 20, 10)\r\n        autoTable(doc, { html: '#mytable' })\r\n        doc.save('table.pdf')\r\n      };\r\n\r\nreturn (\r\n  <>\r\n   <div className=\" mb-3\" >\r\n    <Navbar/>\r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\" id='date_block1' >\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\" id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n          <option value=\"07\">\r\n            July\r\n          </option>\r\n          <option value=\"08\">\r\n           August\r\n          </option>\r\n          <option value=\"09\">\r\n            September\r\n          </option>\r\n          <option value=\"10\">\r\n          October\r\n          </option>\r\n          <option value=\"11\">\r\n           November\r\n          </option>\r\n          <option value=\"12\">\r\n           December\r\n          </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n        <option required>Select Subject</option>\r\n              <option value=\"Software Design & Programming\">\r\n                Software Design & Programming\r\n              </option>\r\n              <option value=\"Algorithms And Data Structure\">\r\n                Algorithms and Data Structure\r\n              </option>\r\n              <option value=\"Mathematical Foundation Of Computing\">\r\n                Mathematical Foundation of Computing\r\n              </option>\r\n              <option value=\"Computer System Architecture\">\r\n                Computer System Architecture\r\n              </option>\r\n        </select>\r\n      </div>\r\n</form>} \r\n\r\n\r\n \r\n<div className='text-center'>\r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n{visible && <div>\r\n  <h3 className='overall-1'>{heading}</h3>\r\n\r\n  </div>}\r\n  <div>{string}</div>\r\n{visible && <>\r\n  <div className='table-24'>\r\n        <table className='table table-striped' >\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>\r\n</>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem1Attendance","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem3Attendance.js",["756","757","758","759","760","761","762","763","764","765","766"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from '../Filters/List'\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem3Attendance = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const[report,setreport]=useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem3\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    setstudent(json.data2)\r\n\r\n    if(json.data2.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n\r\n    }\r\n\r\n    if (monthval) {\r\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data2.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data2)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n      var val=e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n    setreport(true)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(student);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n    doc.text(heading, 20, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\nreturn (\r\n  <>\r\n   <Navbar/>\r\n   <div className=\" mb-3\" >\r\n   \r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\"  id='date_block1'>\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\" id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12 shadow-none\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n          <option value=\"07\">\r\n            July\r\n          </option>\r\n          <option value=\"08\">\r\n           August\r\n          </option>\r\n          <option value=\"09\">\r\n            September\r\n          </option>\r\n          <option value=\"10\">\r\n          October\r\n          </option>\r\n          <option value=\"11\">\r\n           November\r\n          </option>\r\n          <option value=\"12\">\r\n           December\r\n          </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n        <option>Select Subject</option>\r\n            <option value=\"Information System Design\">\r\n              Information System Design\r\n            </option>\r\n             <option value=\"Cloud Computing\">Cloud Computing</option>\r\n             <option value=\"Software Engineering\">Software Engineering</option>\r\n              <option value=\"IT Planning and Management\">\r\n              IT Planning and Management\r\n            </option>\r\n        </select>\r\n      </div>\r\n</form> }\r\n\r\n \r\n<div className='text-center'>\r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5'  onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n<div>{string}</div>\r\n{visible && <>\r\n <h3 className='overall-1'>{heading}</h3>\r\n</>}\r\n{visible && <>\r\n  <div className='table-24'>\r\n        <table className='table table-striped'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>\r\n</>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem3Attendance","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem2Attendance.js",["767","768","769","770","771","772","773","774","775","776","777"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from '../Filters/List'\r\nimport jsPDF from \"jspdf\";\r\nimport autoTable from 'jspdf-autotable';\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem2Attendance = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const[report,setreport]=useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n  \r\n  const fetchdata = async () => {\r\n      const response = await fetch(\"http://localhost:4000/attendancereport/sem2\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    setstudent(json.data2)\r\n    \r\n    if(json.data2.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n    }\r\n    if (monthval) {\r\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data2.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data2)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n    \r\n      var val=e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n\r\n    setreport(true)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(student);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n    doc.text(heading, 20, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\n\r\nreturn (\r\n  <>\r\n  <Navbar/>\r\n   <div className=\" mb-3\">\r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\"  id='date_block1'>\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\" id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n            <option value=\"01\">\r\n              January\r\n            </option>\r\n            <option value=\"02\">\r\n             February\r\n            </option>\r\n            <option value=\"03\">\r\n              March\r\n            </option>\r\n            <option value=\"04\">\r\n             April\r\n            </option>\r\n            <option value=\"05\">\r\n             May\r\n            </option>\r\n            <option value=\"06\">\r\n             June\r\n            </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject && <form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n        <option>Select Subject</option>\r\n            <option value=\"Computer Communication and Networks\">\r\n              Computer Communication and Networks\r\n            </option>\r\n            <option value=\"Operating Systems\">Operating Systems</option>\r\n             <option value=\"Database Systems\">Database Systems</option>\r\n             <option value=\"Applied Machine Learning\">\r\n              Applied Machine Learning\r\n            </option>\r\n             <option value=\"Open Elective-1\">Open Elective-1</option>\r\n        </select>\r\n      </div>\r\n</form> }\r\n\r\n \r\n \r\n<div className='text-center'> \r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n{visible && <div>\r\n  <h3 className='overall-1'>{heading}</h3>\r\n  </div>}\r\n<div>{string}</div>\r\n{visible && <div className='table-24'>\r\n        <table className='table table-striped'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>}\r\n     {visible && <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem2Attendance","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Sem4Attendance.js",["778","779","780","781","782","783","784","785","786","787","788"],"import React from 'react'\r\nimport { useState,useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport jwt from 'jsonwebtoken'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport List from '../Filters/List'\r\nimport jsPDF from \"jspdf\";\r\nimport Navbar from '../Teacher_dashboard/Navbar';\r\nimport autoTable from 'jspdf-autotable';\r\n\r\nvar XLSX = require(\"xlsx\");\r\nconst Sem4filters = () => {\r\n  const navigate = useNavigate();\r\n  const [subject,setsubject]=useState(false)\r\n  const [date,setdate]=useState(false)\r\n  const [month,setmonth]=useState(false)\r\n  const[button,setbutton]=useState(false)\r\n  const[filter,setfilter]=useState(\"\")\r\n  const [subjectval, setsubjectval] = useState(\"\")\r\n  const [dateval, setdateval] = useState(\"\")\r\n  const[monthval,setmonthval]=useState(\"\")\r\n  const[overall,setoverall]=useState(false)\r\n  const[report,setreport]=useState(false)\r\n  const [val, setval] = useState(\"\")\r\n  const [student, setstudent] = useState([]);\r\n  const [visible, setVisible] = useState(false)\r\n  const [string, setString] = useState(\"\")\r\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\r\n\r\n  const fetchdata = async () => {\r\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem4\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        'x-access-token': localStorage.getItem('token'), //\r\n      }\r\n    })\r\n    const json = await response.json()\r\n    setstudent(json.data2)\r\n    if(json.data2.length != 0)\r\n    {\r\n      setVisible(true)\r\n    }\r\n    else{\r\n      setString(\"No Attendance Report Available !\")\r\n    }\r\n\r\n    if (monthval) {\r\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\r\n      setstudent(data1)\r\n      const date = new Date();\r\n      date.setMonth(monthval - 1);\r\n\r\n      var month = date.toLocaleString('en-US', {\r\n        month: 'long',\r\n      });\r\n      setval(month)\r\n    }\r\n\r\n    else if (dateval) {\r\n      let data1 = json.data2.filter((data) => data.date == dateval)\r\n      setstudent(data1)\r\n      setval(dateval)\r\n    }\r\n     \r\n    else if (subjectval) {\r\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\r\n      setstudent(data1)\r\n      setval(subjectval)\r\n    }\r\n    else {\r\n      setstudent(json.data2)\r\n    }\r\n\r\n  }\r\n  useEffect(()=>{\r\n    fetchdata()\r\n  },[])\r\n  function handlechange(e){\r\n      var val=e.target.value\r\n      setfilter(val)\r\n      \r\n      if(val==\"overall\")\r\n      {   \r\n          \r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(true)\r\n          setreport(false)\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"date\")\r\n      {\r\n          setdate(true)\r\n          setmonth(false)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setmonthval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"month\")\r\n      {\r\n          setdate(false)\r\n          setmonth(true)\r\n          setsubject(false)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setsubjectval(\"\")\r\n      }\r\n      if(val==\"subject\")\r\n      {\r\n          setdate(false)\r\n          setmonth(false)\r\n          setsubject(true)\r\n          setbutton(true)\r\n          setoverall(\"\")\r\n          setdateval(\"\")\r\n          setmonthval(\"\")\r\n      }\r\n  }\r\n  function Print()\r\n  {\r\n    setHeading(\"\")\r\n  if(overall)\r\n  {\r\n    setHeading(\"Overall Attendance Report\")\r\n  }\r\n  else if(subject)\r\n  {\r\n    setHeading(\"Attendance Report of \"+ subjectval)\r\n  }\r\n  else if(date)\r\n  {\r\n    setHeading(\"Attendance Report of \" + dateval)\r\n  }\r\n  else if(month)\r\n  {\r\n    setHeading(\"Attendance Report of \" + val)\r\n  }\r\n\r\n    setreport(true)\r\n    const token = localStorage.getItem('token')\r\n    if (token) {\r\n      const user = jwt.decode(token)\r\n      console.log(user)\r\n      if (!user) {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        fetchdata()\r\n\r\n      }\r\n    }  \r\n  }\r\n  const exporttoexcelhandler = () => {\r\n    var wb = XLSX.utils.book_new(),\r\n      ws = XLSX.utils.json_to_sheet(student);\r\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\r\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\r\n  };\r\n\r\n  const exporttopdfhandler = () => {\r\n    const doc = new jsPDF()\r\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\r\n    doc.text(heading, 20, 10)\r\n    autoTable(doc, { html: '#mytable' })\r\n    doc.save('table.pdf')\r\n  };\r\nreturn (\r\n  <>\r\n  <Navbar/>\r\n   <div className=\" mb-3\" >\r\n        {/* <label className=\"form-label\">Select Filter</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-8\"\r\n          id=\"filter\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handlechange}>\r\n          <option value=\"overall\">\r\n            Overall\r\n          </option>\r\n          <option value=\"date\">\r\n            Date\r\n          </option>\r\n          <option value=\"month\">\r\n            Month\r\n          </option>\r\n          <option value=\"subject\">\r\n            Subject\r\n          </option>\r\n        </select>\r\n      </div>\r\n      {date && <form>\r\n<div className=\"mb-3\" id='date_block1'>\r\n  {/* <label className=\"form-label\">Enter Date</label> */}\r\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\r\n</div>\r\n\r\n</form>}\r\n{month &&    <form>\r\n  <div className=\" mb-3\"  id='date_block1'>\r\n        {/* <label className=\"form-label\">Select Month</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control-12\"\r\n          id=\"month\"\r\n          name=\"month\"\r\n          value={monthval}\r\n          onChange={(e) => setmonthval(e.target.value)}>\r\n          <option required>Select Month</option>\r\n            <option value=\"01\">\r\n              January\r\n            </option>\r\n            <option value=\"02\">\r\n             February\r\n            </option>\r\n            <option value=\"03\">\r\n              March\r\n            </option>\r\n            <option value=\"04\">\r\n             April\r\n            </option>\r\n            <option value=\"05\">\r\n             May\r\n            </option>\r\n            <option value=\"06\">\r\n             June\r\n            </option>\r\n        </select>\r\n      </div>\r\n</form>}\r\n{subject &&<form>\r\n  <div className=\"selectsubjectcontainer\">\r\n        {/* <label className=\"form-label\">Select Subject</label> */}\r\n        <select\r\n          type=\"text\"\r\n          className=\"form-control shadow-none\"\r\n          id=\"subject\"\r\n          name=\"subject\"\r\n          value={subjectval}\r\n          onChange={(e) => setsubjectval(e.target.value)}>\r\n       <option>Select Subject</option>\r\n            <option value=\"Internet of Things Systems, Security and Cloud\">\r\n              Internet of Things Systems, Security and Cloud\r\n            </option>\r\n            <option value=\"Health Informatics\">Health Informatics</option>\r\n            <option value=\"Software Engineering\">Software Engineering</option>\r\n            <option value=\"Dissertation Project\">Dissertation Project</option>\r\n        </select>\r\n      </div>\r\n</form> }\r\n\r\n\r\n <div className='text-center'> \r\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\r\n</div>\r\n<div>{string}</div>\r\n{visible && <>\r\n <h3 className='overall-1'>{heading}</h3>\r\n<div className='table-24'>\r\n        <table className='table table-striped'>\r\n          <thead className='heading-2'>\r\n            <tr>\r\n              <th>Student</th>\r\n              <th>Subject</th>\r\n              <th>Date</th>\r\n              <th>Attendance Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <List student={student} />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className='text-center'>\r\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\r\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\r\n        </div>\r\n</>}\r\n  </>\r\n)\r\n}\r\n\r\nexport default Sem4filters","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin\\Admin Dashboard\\login.js",["789","790"],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nconst Loginadmin = () => {\r\n\r\n  const [ifPasswordAndUserNameNotsame, setIfPasswordAndUserNameNotsame] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    password: \"\"\r\n  })\r\n\r\n  const [loginstatus, setLoginstatus] = useState(\"\")\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setUser({\r\n      ...user,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n    await fetch(\"http://localhost:4000/adminlogin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(user),\r\n    }).then(async (response) => {\r\n      let data = await response.json();\r\n      console.log(data);\r\n      if (data.admin) {\r\n        localStorage.setItem('token', data.name)\r\n        // navigate(\"/Teacherdashboard\");\r\n        setLoginstatus(data.message);\r\n      } else {\r\n        setIfPasswordAndUserNameNotsame(true);\r\n        setLoginstatus(data.message);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"login2body\">\r\n        {ifPasswordAndUserNameNotsame && < div class=\"alert alert-danger\" role=\"alert\">\r\n          please check your username and password!\r\n        </div>}\r\n        <div className=\"screen\">\r\n          <div className=\"screen__content\">\r\n            <form className=\"login\">\r\n              {/* <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Login for Professors</h3> */}\r\n\r\n              <div className=\"login__field\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"login__input\"\r\n                  id=\"floatingInput\"\r\n                  name=\"name\"\r\n                  placeholder=\"Username\"\r\n                  value={user.name}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"login__input\"\r\n                  id=\"floatingPassword\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={user.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"button login__submit\"\r\n                onClick={login}\r\n              >\r\n                <span className=\"button__text\">Log In Now</span>\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div class=\"screen__background\">\r\n            <span class=\"screen__background__shape screen__background__shape4\"></span>\r\n            <span class=\"screen__background__shape screen__background__shape3\"></span>\r\n            <span class=\"screen__background__shape screen__background__shape2\"></span>\r\n            <span class=\"screen__background__shape screen__background__shape1\"></span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Loginadmin;\r\n","C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\Classes_taken.js",["791","792","793","794","795","796","797","798","799","800"],"C:\\Users\\Anas\\Desktop\\ISD\\frontend\\src\\components\\Admin Dashboard\\List.js",["801"],{"ruleId":"802","replacedBy":"803"},{"ruleId":"804","replacedBy":"805"},{"ruleId":"806","severity":1,"message":"807","line":2,"column":10,"nodeType":"808","messageId":"809","endLine":2,"endColumn":18},{"ruleId":"810","severity":1,"message":"811","line":82,"column":45,"nodeType":"812","messageId":"813","endLine":82,"endColumn":66},{"ruleId":"810","severity":1,"message":"814","line":83,"column":53,"nodeType":"812","messageId":"813","endLine":83,"endColumn":72},{"ruleId":"810","severity":1,"message":"815","line":85,"column":57,"nodeType":"812","messageId":"813","endLine":85,"endColumn":73},{"ruleId":"810","severity":1,"message":"816","line":86,"column":48,"nodeType":"812","messageId":"813","endLine":86,"endColumn":70},{"ruleId":"810","severity":1,"message":"817","line":87,"column":49,"nodeType":"812","messageId":"813","endLine":87,"endColumn":72},{"ruleId":"810","severity":1,"message":"818","line":88,"column":59,"nodeType":"812","messageId":"813","endLine":88,"endColumn":87},{"ruleId":"810","severity":1,"message":"819","line":89,"column":76,"nodeType":"812","messageId":"813","endLine":89,"endColumn":104},{"ruleId":"810","severity":1,"message":"820","line":90,"column":52,"nodeType":"812","messageId":"813","endLine":90,"endColumn":73},{"ruleId":"810","severity":1,"message":"821","line":91,"column":60,"nodeType":"812","messageId":"813","endLine":91,"endColumn":79},{"ruleId":"810","severity":1,"message":"822","line":111,"column":50,"nodeType":"812","messageId":"813","endLine":111,"endColumn":74},{"ruleId":"810","severity":1,"message":"823","line":112,"column":50,"nodeType":"812","messageId":"813","endLine":112,"endColumn":73},{"ruleId":"810","severity":1,"message":"824","line":113,"column":47,"nodeType":"812","messageId":"813","endLine":113,"endColumn":76},{"ruleId":"810","severity":1,"message":"825","line":114,"column":49,"nodeType":"812","messageId":"813","endLine":114,"endColumn":74},{"ruleId":"810","severity":1,"message":"826","line":115,"column":52,"nodeType":"812","messageId":"813","endLine":115,"endColumn":80},{"ruleId":"810","severity":1,"message":"827","line":116,"column":66,"nodeType":"812","messageId":"813","endLine":116,"endColumn":91},{"ruleId":"810","severity":1,"message":"828","line":132,"column":67,"nodeType":"812","messageId":"813","endLine":132,"endColumn":88},{"ruleId":"810","severity":1,"message":"829","line":137,"column":63,"nodeType":"812","messageId":"813","endLine":137,"endColumn":82},{"ruleId":"830","severity":1,"message":"831","line":33,"column":17,"nodeType":"832","messageId":"833","endLine":33,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":37,"column":17,"nodeType":"832","messageId":"833","endLine":37,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":41,"column":17,"nodeType":"832","messageId":"833","endLine":41,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":45,"column":17,"nodeType":"832","messageId":"833","endLine":45,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":50,"column":58,"nodeType":"832","messageId":"833","endLine":50,"endColumn":60},{"ruleId":"834","severity":1,"message":"835","line":66,"column":6,"nodeType":"836","endLine":66,"endColumn":8,"suggestions":"837"},{"ruleId":"806","severity":1,"message":"838","line":74,"column":13,"nodeType":"808","messageId":"809","endLine":74,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":33,"column":18,"nodeType":"832","messageId":"833","endLine":33,"endColumn":20},{"ruleId":"830","severity":1,"message":"831","line":37,"column":17,"nodeType":"832","messageId":"833","endLine":37,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":41,"column":17,"nodeType":"832","messageId":"833","endLine":41,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":45,"column":17,"nodeType":"832","messageId":"833","endLine":45,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":50,"column":58,"nodeType":"832","messageId":"833","endLine":50,"endColumn":60},{"ruleId":"834","severity":1,"message":"835","line":66,"column":6,"nodeType":"836","endLine":66,"endColumn":8,"suggestions":"839"},{"ruleId":"806","severity":1,"message":"838","line":74,"column":13,"nodeType":"808","messageId":"809","endLine":74,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":32,"column":17,"nodeType":"832","messageId":"833","endLine":32,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":36,"column":17,"nodeType":"832","messageId":"833","endLine":36,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":40,"column":17,"nodeType":"832","messageId":"833","endLine":40,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":44,"column":17,"nodeType":"832","messageId":"833","endLine":44,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":49,"column":58,"nodeType":"832","messageId":"833","endLine":49,"endColumn":60},{"ruleId":"834","severity":1,"message":"835","line":65,"column":6,"nodeType":"836","endLine":65,"endColumn":8,"suggestions":"840"},{"ruleId":"806","severity":1,"message":"838","line":73,"column":13,"nodeType":"808","messageId":"809","endLine":73,"endColumn":21},{"ruleId":"841","severity":1,"message":"842","line":11,"column":17,"nodeType":"812","endLine":11,"endColumn":69},{"ruleId":"841","severity":1,"message":"842","line":14,"column":13,"nodeType":"812","endLine":14,"endColumn":51},{"ruleId":"841","severity":1,"message":"842","line":15,"column":13,"nodeType":"812","endLine":15,"endColumn":51},{"ruleId":"806","severity":1,"message":"843","line":6,"column":8,"nodeType":"808","messageId":"809","endLine":6,"endColumn":12},{"ruleId":"834","severity":1,"message":"835","line":58,"column":8,"nodeType":"836","endLine":58,"endColumn":14,"suggestions":"844"},{"ruleId":"806","severity":1,"message":"845","line":15,"column":10,"nodeType":"808","messageId":"809","endLine":15,"endColumn":21},{"ruleId":"806","severity":1,"message":"846","line":6,"column":10,"nodeType":"808","messageId":"809","endLine":6,"endColumn":14},{"ruleId":"806","severity":1,"message":"843","line":7,"column":8,"nodeType":"808","messageId":"809","endLine":7,"endColumn":12},{"ruleId":"834","severity":1,"message":"835","line":50,"column":8,"nodeType":"836","endLine":50,"endColumn":14,"suggestions":"847"},{"ruleId":"830","severity":1,"message":"831","line":32,"column":19,"nodeType":"832","messageId":"833","endLine":32,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":35,"column":19,"nodeType":"832","messageId":"833","endLine":35,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":38,"column":19,"nodeType":"832","messageId":"833","endLine":38,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":41,"column":19,"nodeType":"832","messageId":"833","endLine":41,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":45,"column":58,"nodeType":"832","messageId":"833","endLine":45,"endColumn":60},{"ruleId":"834","severity":1,"message":"835","line":63,"column":6,"nodeType":"836","endLine":63,"endColumn":8,"suggestions":"848"},{"ruleId":"806","severity":1,"message":"838","line":71,"column":13,"nodeType":"808","messageId":"809","endLine":71,"endColumn":21},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":26,"column":9,"nodeType":"808","messageId":"809","endLine":26,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":47,"column":19,"nodeType":"832","messageId":"833","endLine":47,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":50,"column":19,"nodeType":"832","messageId":"833","endLine":50,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":53,"column":19,"nodeType":"832","messageId":"833","endLine":53,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":56,"column":19,"nodeType":"832","messageId":"833","endLine":56,"endColumn":21},{"ruleId":"830","severity":1,"message":"850","line":61,"column":25,"nodeType":"832","messageId":"833","endLine":61,"endColumn":27},{"ruleId":"830","severity":1,"message":"831","line":70,"column":68,"nodeType":"832","messageId":"833","endLine":70,"endColumn":70},{"ruleId":"830","severity":1,"message":"831","line":82,"column":56,"nodeType":"832","messageId":"833","endLine":82,"endColumn":58},{"ruleId":"830","severity":1,"message":"831","line":88,"column":59,"nodeType":"832","messageId":"833","endLine":88,"endColumn":61},{"ruleId":"834","severity":1,"message":"851","line":99,"column":5,"nodeType":"836","endLine":99,"endColumn":7,"suggestions":"852"},{"ruleId":"830","severity":1,"message":"831","line":104,"column":13,"nodeType":"832","messageId":"833","endLine":104,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":117,"column":13,"nodeType":"832","messageId":"833","endLine":117,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":128,"column":13,"nodeType":"832","messageId":"833","endLine":128,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":139,"column":13,"nodeType":"832","messageId":"833","endLine":139,"endColumn":15},{"ruleId":"806","severity":1,"message":"853","line":2,"column":31,"nodeType":"808","messageId":"809","endLine":2,"endColumn":37},{"ruleId":"806","severity":1,"message":"854","line":2,"column":39,"nodeType":"808","messageId":"809","endLine":2,"endColumn":54},{"ruleId":"830","severity":1,"message":"850","line":31,"column":26,"nodeType":"832","messageId":"833","endLine":31,"endColumn":28},{"ruleId":"834","severity":1,"message":"835","line":52,"column":6,"nodeType":"836","endLine":52,"endColumn":8,"suggestions":"855"},{"ruleId":"806","severity":1,"message":"856","line":8,"column":12,"nodeType":"808","messageId":"809","endLine":8,"endColumn":25},{"ruleId":"806","severity":1,"message":"857","line":8,"column":26,"nodeType":"808","messageId":"809","endLine":8,"endColumn":42},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":25,"column":9,"nodeType":"808","messageId":"809","endLine":25,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":44,"column":17,"nodeType":"832","messageId":"833","endLine":44,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":48,"column":17,"nodeType":"832","messageId":"833","endLine":48,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":52,"column":17,"nodeType":"832","messageId":"833","endLine":52,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":56,"column":17,"nodeType":"832","messageId":"833","endLine":56,"endColumn":19},{"ruleId":"830","severity":1,"message":"850","line":61,"column":25,"nodeType":"832","messageId":"833","endLine":61,"endColumn":27},{"ruleId":"830","severity":1,"message":"831","line":70,"column":68,"nodeType":"832","messageId":"833","endLine":70,"endColumn":70},{"ruleId":"830","severity":1,"message":"831","line":82,"column":56,"nodeType":"832","messageId":"833","endLine":82,"endColumn":58},{"ruleId":"830","severity":1,"message":"831","line":88,"column":59,"nodeType":"832","messageId":"833","endLine":88,"endColumn":61},{"ruleId":"834","severity":1,"message":"851","line":99,"column":5,"nodeType":"836","endLine":99,"endColumn":7,"suggestions":"858"},{"ruleId":"830","severity":1,"message":"831","line":104,"column":13,"nodeType":"832","messageId":"833","endLine":104,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":117,"column":13,"nodeType":"832","messageId":"833","endLine":117,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":127,"column":13,"nodeType":"832","messageId":"833","endLine":127,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":137,"column":13,"nodeType":"832","messageId":"833","endLine":137,"endColumn":15},{"ruleId":"806","severity":1,"message":"846","line":4,"column":10,"nodeType":"808","messageId":"809","endLine":4,"endColumn":14},{"ruleId":"834","severity":1,"message":"835","line":72,"column":6,"nodeType":"836","endLine":72,"endColumn":17,"suggestions":"859"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":29,"nodeType":"808","messageId":"809","endLine":2,"endColumn":35},{"ruleId":"806","severity":1,"message":"854","line":2,"column":36,"nodeType":"808","messageId":"809","endLine":2,"endColumn":51},{"ruleId":"860","severity":1,"message":"861","line":45,"column":45,"nodeType":"862","messageId":"863","endLine":45,"endColumn":47},{"ruleId":"830","severity":1,"message":"831","line":46,"column":34,"nodeType":"832","messageId":"833","endLine":46,"endColumn":36},{"ruleId":"860","severity":1,"message":"861","line":55,"column":40,"nodeType":"862","messageId":"863","endLine":55,"endColumn":42},{"ruleId":"830","severity":1,"message":"831","line":56,"column":27,"nodeType":"832","messageId":"833","endLine":56,"endColumn":29},{"ruleId":"830","severity":1,"message":"850","line":64,"column":29,"nodeType":"832","messageId":"833","endLine":64,"endColumn":31},{"ruleId":"830","severity":1,"message":"831","line":76,"column":23,"nodeType":"832","messageId":"833","endLine":76,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":83,"column":32,"nodeType":"832","messageId":"833","endLine":83,"endColumn":34},{"ruleId":"830","severity":1,"message":"831","line":88,"column":32,"nodeType":"832","messageId":"833","endLine":88,"endColumn":34},{"ruleId":"830","severity":1,"message":"831","line":94,"column":32,"nodeType":"832","messageId":"833","endLine":94,"endColumn":34},{"ruleId":"834","severity":1,"message":"864","line":100,"column":9,"nodeType":"836","endLine":100,"endColumn":17,"suggestions":"865"},{"ruleId":"834","severity":1,"message":"835","line":115,"column":10,"nodeType":"836","endLine":115,"endColumn":12,"suggestions":"866"},{"ruleId":"830","severity":1,"message":"850","line":30,"column":38,"nodeType":"832","messageId":"833","endLine":30,"endColumn":40},{"ruleId":"834","severity":1,"message":"835","line":51,"column":10,"nodeType":"836","endLine":51,"endColumn":12,"suggestions":"867"},{"ruleId":"806","severity":1,"message":"868","line":53,"column":9,"nodeType":"808","messageId":"809","endLine":53,"endColumn":29},{"ruleId":"806","severity":1,"message":"869","line":60,"column":9,"nodeType":"808","messageId":"809","endLine":60,"endColumn":27},{"ruleId":"806","severity":1,"message":"853","line":2,"column":29,"nodeType":"808","messageId":"809","endLine":2,"endColumn":35},{"ruleId":"806","severity":1,"message":"854","line":2,"column":36,"nodeType":"808","messageId":"809","endLine":2,"endColumn":51},{"ruleId":"860","severity":1,"message":"861","line":30,"column":47,"nodeType":"862","messageId":"863","endLine":30,"endColumn":49},{"ruleId":"830","severity":1,"message":"831","line":31,"column":70,"nodeType":"832","messageId":"833","endLine":31,"endColumn":72},{"ruleId":"834","severity":1,"message":"870","line":53,"column":10,"nodeType":"836","endLine":53,"endColumn":12,"suggestions":"871"},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":24,"column":9,"nodeType":"808","messageId":"809","endLine":24,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":44,"column":19,"nodeType":"832","messageId":"833","endLine":44,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":47,"column":19,"nodeType":"832","messageId":"833","endLine":47,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":50,"column":19,"nodeType":"832","messageId":"833","endLine":50,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":53,"column":19,"nodeType":"832","messageId":"833","endLine":53,"endColumn":21},{"ruleId":"830","severity":1,"message":"850","line":58,"column":25,"nodeType":"832","messageId":"833","endLine":58,"endColumn":27},{"ruleId":"830","severity":1,"message":"831","line":66,"column":68,"nodeType":"832","messageId":"833","endLine":66,"endColumn":70},{"ruleId":"830","severity":1,"message":"831","line":78,"column":56,"nodeType":"832","messageId":"833","endLine":78,"endColumn":58},{"ruleId":"830","severity":1,"message":"831","line":84,"column":59,"nodeType":"832","messageId":"833","endLine":84,"endColumn":61},{"ruleId":"834","severity":1,"message":"851","line":95,"column":5,"nodeType":"836","endLine":95,"endColumn":7,"suggestions":"872"},{"ruleId":"830","severity":1,"message":"831","line":101,"column":13,"nodeType":"832","messageId":"833","endLine":101,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":114,"column":13,"nodeType":"832","messageId":"833","endLine":114,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":124,"column":13,"nodeType":"832","messageId":"833","endLine":124,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":134,"column":13,"nodeType":"832","messageId":"833","endLine":134,"endColumn":15},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":24,"column":9,"nodeType":"808","messageId":"809","endLine":24,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":43,"column":17,"nodeType":"832","messageId":"833","endLine":43,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":47,"column":17,"nodeType":"832","messageId":"833","endLine":47,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":51,"column":17,"nodeType":"832","messageId":"833","endLine":51,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":55,"column":17,"nodeType":"832","messageId":"833","endLine":55,"endColumn":19},{"ruleId":"830","severity":1,"message":"850","line":61,"column":25,"nodeType":"832","messageId":"833","endLine":61,"endColumn":27},{"ruleId":"830","severity":1,"message":"831","line":71,"column":68,"nodeType":"832","messageId":"833","endLine":71,"endColumn":70},{"ruleId":"830","severity":1,"message":"831","line":83,"column":56,"nodeType":"832","messageId":"833","endLine":83,"endColumn":58},{"ruleId":"830","severity":1,"message":"831","line":89,"column":59,"nodeType":"832","messageId":"833","endLine":89,"endColumn":61},{"ruleId":"834","severity":1,"message":"851","line":100,"column":5,"nodeType":"836","endLine":100,"endColumn":7,"suggestions":"873"},{"ruleId":"830","severity":1,"message":"831","line":105,"column":13,"nodeType":"832","messageId":"833","endLine":105,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":118,"column":13,"nodeType":"832","messageId":"833","endLine":118,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":128,"column":13,"nodeType":"832","messageId":"833","endLine":128,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":138,"column":13,"nodeType":"832","messageId":"833","endLine":138,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":27,"column":19,"nodeType":"832","messageId":"833","endLine":27,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":30,"column":19,"nodeType":"832","messageId":"833","endLine":30,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":33,"column":19,"nodeType":"832","messageId":"833","endLine":33,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":36,"column":19,"nodeType":"832","messageId":"833","endLine":36,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":91,"column":6,"nodeType":"836","endLine":91,"endColumn":8,"suggestions":"874"},{"ruleId":"806","severity":1,"message":"875","line":13,"column":10,"nodeType":"808","messageId":"809","endLine":13,"endColumn":18},{"ruleId":"806","severity":1,"message":"876","line":13,"column":20,"nodeType":"808","messageId":"809","endLine":13,"endColumn":31},{"ruleId":"830","severity":1,"message":"831","line":28,"column":19,"nodeType":"832","messageId":"833","endLine":28,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":31,"column":19,"nodeType":"832","messageId":"833","endLine":31,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":92,"column":6,"nodeType":"836","endLine":92,"endColumn":8,"suggestions":"877"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":31,"nodeType":"808","messageId":"809","endLine":2,"endColumn":37},{"ruleId":"806","severity":1,"message":"854","line":2,"column":39,"nodeType":"808","messageId":"809","endLine":2,"endColumn":54},{"ruleId":"830","severity":1,"message":"850","line":47,"column":16,"nodeType":"832","messageId":"833","endLine":47,"endColumn":18},{"ruleId":"860","severity":1,"message":"861","line":50,"column":38,"nodeType":"862","messageId":"863","endLine":50,"endColumn":40},{"ruleId":"830","severity":1,"message":"831","line":51,"column":23,"nodeType":"832","messageId":"833","endLine":51,"endColumn":25},{"ruleId":"830","severity":1,"message":"850","line":59,"column":19,"nodeType":"832","messageId":"833","endLine":59,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":65,"column":16,"nodeType":"832","messageId":"833","endLine":65,"endColumn":18},{"ruleId":"830","severity":1,"message":"831","line":75,"column":17,"nodeType":"832","messageId":"833","endLine":75,"endColumn":19},{"ruleId":"830","severity":1,"message":"831","line":82,"column":26,"nodeType":"832","messageId":"833","endLine":82,"endColumn":28},{"ruleId":"830","severity":1,"message":"831","line":87,"column":26,"nodeType":"832","messageId":"833","endLine":87,"endColumn":28},{"ruleId":"830","severity":1,"message":"831","line":93,"column":26,"nodeType":"832","messageId":"833","endLine":93,"endColumn":28},{"ruleId":"834","severity":1,"message":"878","line":99,"column":5,"nodeType":"836","endLine":99,"endColumn":14,"suggestions":"879"},{"ruleId":"834","severity":1,"message":"835","line":114,"column":6,"nodeType":"836","endLine":114,"endColumn":8,"suggestions":"880"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":31,"nodeType":"808","messageId":"809","endLine":2,"endColumn":37},{"ruleId":"806","severity":1,"message":"854","line":2,"column":39,"nodeType":"808","messageId":"809","endLine":2,"endColumn":54},{"ruleId":"834","severity":1,"message":"835","line":45,"column":6,"nodeType":"836","endLine":45,"endColumn":8,"suggestions":"881"},{"ruleId":"830","severity":1,"message":"831","line":28,"column":19,"nodeType":"832","messageId":"833","endLine":28,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":31,"column":19,"nodeType":"832","messageId":"833","endLine":31,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":91,"column":6,"nodeType":"836","endLine":91,"endColumn":8,"suggestions":"882"},{"ruleId":"830","severity":1,"message":"831","line":28,"column":19,"nodeType":"832","messageId":"833","endLine":28,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":31,"column":19,"nodeType":"832","messageId":"833","endLine":31,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":92,"column":6,"nodeType":"836","endLine":92,"endColumn":8,"suggestions":"883"},{"ruleId":"830","severity":1,"message":"831","line":27,"column":19,"nodeType":"832","messageId":"833","endLine":27,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":30,"column":19,"nodeType":"832","messageId":"833","endLine":30,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":33,"column":19,"nodeType":"832","messageId":"833","endLine":33,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":36,"column":19,"nodeType":"832","messageId":"833","endLine":36,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":91,"column":6,"nodeType":"836","endLine":91,"endColumn":8,"suggestions":"884"},{"ruleId":"830","severity":1,"message":"831","line":27,"column":19,"nodeType":"832","messageId":"833","endLine":27,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":30,"column":19,"nodeType":"832","messageId":"833","endLine":30,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":33,"column":19,"nodeType":"832","messageId":"833","endLine":33,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":36,"column":19,"nodeType":"832","messageId":"833","endLine":36,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":91,"column":6,"nodeType":"836","endLine":91,"endColumn":8,"suggestions":"885"},{"ruleId":"806","severity":1,"message":"846","line":6,"column":10,"nodeType":"808","messageId":"809","endLine":6,"endColumn":14},{"ruleId":"806","severity":1,"message":"886","line":12,"column":12,"nodeType":"808","messageId":"809","endLine":12,"endColumn":19},{"ruleId":"806","severity":1,"message":"887","line":13,"column":12,"nodeType":"808","messageId":"809","endLine":13,"endColumn":22},{"ruleId":"806","severity":1,"message":"888","line":15,"column":12,"nodeType":"808","messageId":"809","endLine":15,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":51,"column":8,"nodeType":"836","endLine":51,"endColumn":14,"suggestions":"889"},{"ruleId":"830","severity":1,"message":"831","line":28,"column":19,"nodeType":"832","messageId":"833","endLine":28,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":31,"column":19,"nodeType":"832","messageId":"833","endLine":31,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":91,"column":6,"nodeType":"836","endLine":91,"endColumn":8,"suggestions":"890"},{"ruleId":"830","severity":1,"message":"831","line":28,"column":19,"nodeType":"832","messageId":"833","endLine":28,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":31,"column":19,"nodeType":"832","messageId":"833","endLine":31,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":92,"column":6,"nodeType":"836","endLine":92,"endColumn":8,"suggestions":"891"},{"ruleId":"830","severity":1,"message":"831","line":36,"column":19,"nodeType":"832","messageId":"833","endLine":36,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":39,"column":19,"nodeType":"832","messageId":"833","endLine":39,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":42,"column":19,"nodeType":"832","messageId":"833","endLine":42,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":45,"column":19,"nodeType":"832","messageId":"833","endLine":45,"endColumn":21},{"ruleId":"806","severity":1,"message":"892","line":55,"column":13,"nodeType":"808","messageId":"809","endLine":55,"endColumn":16},{"ruleId":"834","severity":1,"message":"835","line":153,"column":6,"nodeType":"836","endLine":153,"endColumn":8,"suggestions":"893"},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":40,"column":19,"nodeType":"832","messageId":"833","endLine":40,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":43,"column":19,"nodeType":"832","messageId":"833","endLine":43,"endColumn":21},{"ruleId":"806","severity":1,"message":"892","line":54,"column":13,"nodeType":"808","messageId":"809","endLine":54,"endColumn":16},{"ruleId":"834","severity":1,"message":"835","line":152,"column":4,"nodeType":"836","endLine":152,"endColumn":6,"suggestions":"894"},{"ruleId":"830","severity":1,"message":"831","line":35,"column":19,"nodeType":"832","messageId":"833","endLine":35,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":38,"column":19,"nodeType":"832","messageId":"833","endLine":38,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":41,"column":19,"nodeType":"832","messageId":"833","endLine":41,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":44,"column":19,"nodeType":"832","messageId":"833","endLine":44,"endColumn":21},{"ruleId":"806","severity":1,"message":"838","line":55,"column":13,"nodeType":"808","messageId":"809","endLine":55,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":155,"column":6,"nodeType":"836","endLine":155,"endColumn":8,"suggestions":"895"},{"ruleId":"830","severity":1,"message":"831","line":35,"column":19,"nodeType":"832","messageId":"833","endLine":35,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":38,"column":19,"nodeType":"832","messageId":"833","endLine":38,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":41,"column":19,"nodeType":"832","messageId":"833","endLine":41,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":44,"column":19,"nodeType":"832","messageId":"833","endLine":44,"endColumn":21},{"ruleId":"806","severity":1,"message":"838","line":54,"column":13,"nodeType":"808","messageId":"809","endLine":54,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":161,"column":6,"nodeType":"836","endLine":161,"endColumn":8,"suggestions":"896"},{"ruleId":"806","severity":1,"message":"845","line":17,"column":10,"nodeType":"808","messageId":"809","endLine":17,"endColumn":21},{"ruleId":"806","severity":1,"message":"897","line":26,"column":17,"nodeType":"808","messageId":"809","endLine":26,"endColumn":32},{"ruleId":"806","severity":1,"message":"898","line":28,"column":10,"nodeType":"808","messageId":"809","endLine":28,"endColumn":15},{"ruleId":"806","severity":1,"message":"899","line":28,"column":16,"nodeType":"808","messageId":"809","endLine":28,"endColumn":24},{"ruleId":"830","severity":1,"message":"831","line":49,"column":19,"nodeType":"832","messageId":"833","endLine":49,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":52,"column":19,"nodeType":"832","messageId":"833","endLine":52,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":55,"column":19,"nodeType":"832","messageId":"833","endLine":55,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":58,"column":19,"nodeType":"832","messageId":"833","endLine":58,"endColumn":21},{"ruleId":"806","severity":1,"message":"892","line":68,"column":13,"nodeType":"808","messageId":"809","endLine":68,"endColumn":16},{"ruleId":"834","severity":1,"message":"835","line":169,"column":6,"nodeType":"836","endLine":169,"endColumn":8,"suggestions":"900"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":29,"nodeType":"808","messageId":"809","endLine":2,"endColumn":35},{"ruleId":"806","severity":1,"message":"854","line":2,"column":36,"nodeType":"808","messageId":"809","endLine":2,"endColumn":51},{"ruleId":"860","severity":1,"message":"861","line":29,"column":47,"nodeType":"862","messageId":"863","endLine":29,"endColumn":49},{"ruleId":"830","severity":1,"message":"831","line":30,"column":38,"nodeType":"832","messageId":"833","endLine":30,"endColumn":40},{"ruleId":"834","severity":1,"message":"870","line":56,"column":10,"nodeType":"836","endLine":56,"endColumn":12,"suggestions":"901"},{"ruleId":"830","severity":1,"message":"831","line":35,"column":19,"nodeType":"832","messageId":"833","endLine":35,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":38,"column":19,"nodeType":"832","messageId":"833","endLine":38,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":41,"column":19,"nodeType":"832","messageId":"833","endLine":41,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":44,"column":19,"nodeType":"832","messageId":"833","endLine":44,"endColumn":21},{"ruleId":"806","severity":1,"message":"838","line":53,"column":13,"nodeType":"808","messageId":"809","endLine":53,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":154,"column":6,"nodeType":"836","endLine":154,"endColumn":8,"suggestions":"902"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":29,"nodeType":"808","messageId":"809","endLine":2,"endColumn":35},{"ruleId":"806","severity":1,"message":"854","line":2,"column":36,"nodeType":"808","messageId":"809","endLine":2,"endColumn":51},{"ruleId":"860","severity":1,"message":"861","line":45,"column":45,"nodeType":"862","messageId":"863","endLine":45,"endColumn":47},{"ruleId":"830","severity":1,"message":"831","line":46,"column":27,"nodeType":"832","messageId":"833","endLine":46,"endColumn":29},{"ruleId":"830","severity":1,"message":"850","line":55,"column":28,"nodeType":"832","messageId":"833","endLine":55,"endColumn":30},{"ruleId":"830","severity":1,"message":"831","line":67,"column":22,"nodeType":"832","messageId":"833","endLine":67,"endColumn":24},{"ruleId":"830","severity":1,"message":"831","line":74,"column":31,"nodeType":"832","messageId":"833","endLine":74,"endColumn":33},{"ruleId":"830","severity":1,"message":"831","line":79,"column":31,"nodeType":"832","messageId":"833","endLine":79,"endColumn":33},{"ruleId":"830","severity":1,"message":"831","line":85,"column":31,"nodeType":"832","messageId":"833","endLine":85,"endColumn":33},{"ruleId":"834","severity":1,"message":"864","line":91,"column":9,"nodeType":"836","endLine":91,"endColumn":16,"suggestions":"903"},{"ruleId":"834","severity":1,"message":"835","line":109,"column":10,"nodeType":"836","endLine":109,"endColumn":12,"suggestions":"904"},{"ruleId":"806","severity":1,"message":"868","line":111,"column":9,"nodeType":"808","messageId":"809","endLine":111,"endColumn":29},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":40,"column":19,"nodeType":"832","messageId":"833","endLine":40,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":43,"column":19,"nodeType":"832","messageId":"833","endLine":43,"endColumn":21},{"ruleId":"806","severity":1,"message":"892","line":53,"column":13,"nodeType":"808","messageId":"809","endLine":53,"endColumn":16},{"ruleId":"834","severity":1,"message":"835","line":150,"column":6,"nodeType":"836","endLine":150,"endColumn":8,"suggestions":"905"},{"ruleId":"830","severity":1,"message":"831","line":34,"column":19,"nodeType":"832","messageId":"833","endLine":34,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":37,"column":19,"nodeType":"832","messageId":"833","endLine":37,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":40,"column":19,"nodeType":"832","messageId":"833","endLine":40,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":43,"column":19,"nodeType":"832","messageId":"833","endLine":43,"endColumn":21},{"ruleId":"806","severity":1,"message":"838","line":55,"column":13,"nodeType":"808","messageId":"809","endLine":55,"endColumn":21},{"ruleId":"834","severity":1,"message":"835","line":156,"column":6,"nodeType":"836","endLine":156,"endColumn":8,"suggestions":"906"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":31,"nodeType":"808","messageId":"809","endLine":2,"endColumn":37},{"ruleId":"806","severity":1,"message":"854","line":2,"column":39,"nodeType":"808","messageId":"809","endLine":2,"endColumn":54},{"ruleId":"830","severity":1,"message":"850","line":30,"column":26,"nodeType":"832","messageId":"833","endLine":30,"endColumn":28},{"ruleId":"834","severity":1,"message":"835","line":49,"column":6,"nodeType":"836","endLine":49,"endColumn":8,"suggestions":"907"},{"ruleId":"806","severity":1,"message":"868","line":51,"column":9,"nodeType":"808","messageId":"809","endLine":51,"endColumn":29},{"ruleId":"806","severity":1,"message":"869","line":58,"column":9,"nodeType":"808","messageId":"809","endLine":58,"endColumn":27},{"ruleId":"834","severity":1,"message":"835","line":59,"column":8,"nodeType":"836","endLine":59,"endColumn":14,"suggestions":"908"},{"ruleId":"806","severity":1,"message":"846","line":4,"column":10,"nodeType":"808","messageId":"809","endLine":4,"endColumn":14},{"ruleId":"834","severity":1,"message":"835","line":78,"column":6,"nodeType":"836","endLine":78,"endColumn":18,"suggestions":"909"},{"ruleId":"834","severity":1,"message":"835","line":43,"column":11,"nodeType":"836","endLine":43,"endColumn":13,"suggestions":"910"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":29,"nodeType":"808","messageId":"809","endLine":2,"endColumn":35},{"ruleId":"806","severity":1,"message":"854","line":2,"column":36,"nodeType":"808","messageId":"809","endLine":2,"endColumn":51},{"ruleId":"830","severity":1,"message":"850","line":28,"column":37,"nodeType":"832","messageId":"833","endLine":28,"endColumn":39},{"ruleId":"834","severity":1,"message":"835","line":51,"column":10,"nodeType":"836","endLine":51,"endColumn":12,"suggestions":"911"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":29,"nodeType":"808","messageId":"809","endLine":2,"endColumn":35},{"ruleId":"806","severity":1,"message":"854","line":2,"column":36,"nodeType":"808","messageId":"809","endLine":2,"endColumn":51},{"ruleId":"860","severity":1,"message":"861","line":49,"column":45,"nodeType":"862","messageId":"863","endLine":49,"endColumn":47},{"ruleId":"830","severity":1,"message":"831","line":50,"column":34,"nodeType":"832","messageId":"833","endLine":50,"endColumn":36},{"ruleId":"860","severity":1,"message":"861","line":59,"column":40,"nodeType":"862","messageId":"863","endLine":59,"endColumn":42},{"ruleId":"830","severity":1,"message":"831","line":60,"column":27,"nodeType":"832","messageId":"833","endLine":60,"endColumn":29},{"ruleId":"830","severity":1,"message":"850","line":66,"column":24,"nodeType":"832","messageId":"833","endLine":66,"endColumn":26},{"ruleId":"830","severity":1,"message":"831","line":79,"column":23,"nodeType":"832","messageId":"833","endLine":79,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":86,"column":32,"nodeType":"832","messageId":"833","endLine":86,"endColumn":34},{"ruleId":"830","severity":1,"message":"831","line":91,"column":32,"nodeType":"832","messageId":"833","endLine":91,"endColumn":34},{"ruleId":"830","severity":1,"message":"831","line":97,"column":32,"nodeType":"832","messageId":"833","endLine":97,"endColumn":34},{"ruleId":"834","severity":1,"message":"864","line":103,"column":9,"nodeType":"836","endLine":103,"endColumn":17,"suggestions":"912"},{"ruleId":"834","severity":1,"message":"835","line":118,"column":10,"nodeType":"836","endLine":118,"endColumn":12,"suggestions":"913"},{"ruleId":"806","severity":1,"message":"853","line":2,"column":29,"nodeType":"808","messageId":"809","endLine":2,"endColumn":35},{"ruleId":"806","severity":1,"message":"854","line":2,"column":36,"nodeType":"808","messageId":"809","endLine":2,"endColumn":51},{"ruleId":"860","severity":1,"message":"861","line":51,"column":45,"nodeType":"862","messageId":"863","endLine":51,"endColumn":47},{"ruleId":"830","severity":1,"message":"831","line":52,"column":75,"nodeType":"832","messageId":"833","endLine":52,"endColumn":77},{"ruleId":"830","severity":1,"message":"831","line":52,"column":177,"nodeType":"832","messageId":"833","endLine":52,"endColumn":179},{"ruleId":"830","severity":1,"message":"850","line":62,"column":28,"nodeType":"832","messageId":"833","endLine":62,"endColumn":30},{"ruleId":"830","severity":1,"message":"831","line":74,"column":23,"nodeType":"832","messageId":"833","endLine":74,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":81,"column":32,"nodeType":"832","messageId":"833","endLine":81,"endColumn":34},{"ruleId":"830","severity":1,"message":"831","line":86,"column":32,"nodeType":"832","messageId":"833","endLine":86,"endColumn":34},{"ruleId":"830","severity":1,"message":"831","line":92,"column":32,"nodeType":"832","messageId":"833","endLine":92,"endColumn":34},{"ruleId":"834","severity":1,"message":"864","line":98,"column":9,"nodeType":"836","endLine":98,"endColumn":17,"suggestions":"914"},{"ruleId":"834","severity":1,"message":"835","line":111,"column":10,"nodeType":"836","endLine":111,"endColumn":12,"suggestions":"915"},{"ruleId":"806","severity":1,"message":"916","line":17,"column":11,"nodeType":"808","messageId":"809","endLine":17,"endColumn":30},{"ruleId":"806","severity":1,"message":"917","line":19,"column":12,"nodeType":"808","messageId":"809","endLine":19,"endColumn":16},{"ruleId":"806","severity":1,"message":"918","line":20,"column":12,"nodeType":"808","messageId":"809","endLine":20,"endColumn":16},{"ruleId":"806","severity":1,"message":"919","line":21,"column":12,"nodeType":"808","messageId":"809","endLine":21,"endColumn":16},{"ruleId":"806","severity":1,"message":"920","line":22,"column":12,"nodeType":"808","messageId":"809","endLine":22,"endColumn":16},{"ruleId":"830","severity":1,"message":"831","line":33,"column":25,"nodeType":"832","messageId":"833","endLine":33,"endColumn":27},{"ruleId":"830","severity":1,"message":"831","line":34,"column":31,"nodeType":"832","messageId":"833","endLine":34,"endColumn":33},{"ruleId":"830","severity":1,"message":"831","line":38,"column":36,"nodeType":"832","messageId":"833","endLine":38,"endColumn":38},{"ruleId":"830","severity":1,"message":"831","line":41,"column":36,"nodeType":"832","messageId":"833","endLine":41,"endColumn":38},{"ruleId":"830","severity":1,"message":"831","line":45,"column":36,"nodeType":"832","messageId":"833","endLine":45,"endColumn":38},{"ruleId":"834","severity":1,"message":"835","line":63,"column":8,"nodeType":"836","endLine":63,"endColumn":10,"suggestions":"921"},{"ruleId":"922","severity":1,"message":"923","line":8,"column":5,"nodeType":"924","messageId":"925","endLine":13,"endColumn":6},{"ruleId":"860","severity":1,"message":"926","line":9,"column":30,"nodeType":"862","messageId":"927","endLine":9,"endColumn":32},{"ruleId":"834","severity":1,"message":"928","line":15,"column":6,"nodeType":"836","endLine":15,"endColumn":16,"suggestions":"929"},{"ruleId":"806","severity":1,"message":"930","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":17},{"ruleId":"806","severity":1,"message":"930","line":3,"column":9,"nodeType":"808","messageId":"809","endLine":3,"endColumn":16},{"ruleId":"806","severity":1,"message":"930","line":4,"column":10,"nodeType":"808","messageId":"809","endLine":4,"endColumn":17},{"ruleId":"860","severity":1,"message":"861","line":6,"column":45,"nodeType":"862","messageId":"863","endLine":6,"endColumn":47},{"ruleId":"830","severity":1,"message":"831","line":7,"column":18,"nodeType":"832","messageId":"833","endLine":7,"endColumn":20},{"ruleId":"830","severity":1,"message":"831","line":9,"column":24,"nodeType":"832","messageId":"833","endLine":9,"endColumn":26},{"ruleId":"830","severity":1,"message":"831","line":9,"column":60,"nodeType":"832","messageId":"833","endLine":9,"endColumn":62},{"ruleId":"830","severity":1,"message":"831","line":9,"column":109,"nodeType":"832","messageId":"833","endLine":9,"endColumn":111},{"ruleId":"830","severity":1,"message":"831","line":9,"column":144,"nodeType":"832","messageId":"833","endLine":9,"endColumn":146},{"ruleId":"830","severity":1,"message":"831","line":14,"column":23,"nodeType":"832","messageId":"833","endLine":14,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":16,"column":24,"nodeType":"832","messageId":"833","endLine":16,"endColumn":26},{"ruleId":"830","severity":1,"message":"831","line":16,"column":73,"nodeType":"832","messageId":"833","endLine":16,"endColumn":75},{"ruleId":"830","severity":1,"message":"831","line":16,"column":128,"nodeType":"832","messageId":"833","endLine":16,"endColumn":130},{"ruleId":"830","severity":1,"message":"831","line":16,"column":165,"nodeType":"832","messageId":"833","endLine":16,"endColumn":167},{"ruleId":"830","severity":1,"message":"831","line":16,"column":210,"nodeType":"832","messageId":"833","endLine":16,"endColumn":212},{"ruleId":"830","severity":1,"message":"831","line":21,"column":23,"nodeType":"832","messageId":"833","endLine":21,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":23,"column":24,"nodeType":"832","messageId":"833","endLine":23,"endColumn":26},{"ruleId":"830","severity":1,"message":"831","line":23,"column":80,"nodeType":"832","messageId":"833","endLine":23,"endColumn":82},{"ruleId":"830","severity":1,"message":"831","line":23,"column":124,"nodeType":"832","messageId":"833","endLine":23,"endColumn":126},{"ruleId":"830","severity":1,"message":"831","line":23,"column":164,"nodeType":"832","messageId":"833","endLine":23,"endColumn":166},{"ruleId":"830","severity":1,"message":"831","line":28,"column":23,"nodeType":"832","messageId":"833","endLine":28,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":30,"column":24,"nodeType":"832","messageId":"833","endLine":30,"endColumn":26},{"ruleId":"830","severity":1,"message":"831","line":35,"column":23,"nodeType":"832","messageId":"833","endLine":35,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":37,"column":24,"nodeType":"832","messageId":"833","endLine":37,"endColumn":26},{"ruleId":"830","severity":1,"message":"831","line":42,"column":23,"nodeType":"832","messageId":"833","endLine":42,"endColumn":25},{"ruleId":"830","severity":1,"message":"831","line":44,"column":24,"nodeType":"832","messageId":"833","endLine":44,"endColumn":26},{"ruleId":"830","severity":1,"message":"831","line":44,"column":70,"nodeType":"832","messageId":"833","endLine":44,"endColumn":72},{"ruleId":"830","severity":1,"message":"831","line":44,"column":119,"nodeType":"832","messageId":"833","endLine":44,"endColumn":121},{"ruleId":"806","severity":1,"message":"930","line":3,"column":9,"nodeType":"808","messageId":"809","endLine":3,"endColumn":16},{"ruleId":"806","severity":1,"message":"930","line":3,"column":9,"nodeType":"808","messageId":"809","endLine":3,"endColumn":16},{"ruleId":"806","severity":1,"message":"930","line":3,"column":9,"nodeType":"808","messageId":"809","endLine":3,"endColumn":16},{"ruleId":"806","severity":1,"message":"930","line":3,"column":9,"nodeType":"808","messageId":"809","endLine":3,"endColumn":16},{"ruleId":"806","severity":1,"message":"930","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":17},{"ruleId":"806","severity":1,"message":"916","line":15,"column":11,"nodeType":"808","messageId":"809","endLine":15,"endColumn":30},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":26,"column":9,"nodeType":"808","messageId":"809","endLine":26,"endColumn":15},{"ruleId":"830","severity":1,"message":"850","line":44,"column":26,"nodeType":"832","messageId":"833","endLine":44,"endColumn":28},{"ruleId":"830","severity":1,"message":"831","line":53,"column":69,"nodeType":"832","messageId":"833","endLine":53,"endColumn":71},{"ruleId":"830","severity":1,"message":"831","line":65,"column":57,"nodeType":"832","messageId":"833","endLine":65,"endColumn":59},{"ruleId":"830","severity":1,"message":"831","line":71,"column":60,"nodeType":"832","messageId":"833","endLine":71,"endColumn":62},{"ruleId":"834","severity":1,"message":"851","line":82,"column":5,"nodeType":"836","endLine":82,"endColumn":7,"suggestions":"931"},{"ruleId":"830","severity":1,"message":"831","line":87,"column":13,"nodeType":"832","messageId":"833","endLine":87,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":100,"column":13,"nodeType":"832","messageId":"833","endLine":100,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":111,"column":13,"nodeType":"832","messageId":"833","endLine":111,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":122,"column":13,"nodeType":"832","messageId":"833","endLine":122,"endColumn":15},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":24,"column":9,"nodeType":"808","messageId":"809","endLine":24,"endColumn":15},{"ruleId":"830","severity":1,"message":"850","line":41,"column":26,"nodeType":"832","messageId":"833","endLine":41,"endColumn":28},{"ruleId":"830","severity":1,"message":"831","line":51,"column":69,"nodeType":"832","messageId":"833","endLine":51,"endColumn":71},{"ruleId":"830","severity":1,"message":"831","line":63,"column":57,"nodeType":"832","messageId":"833","endLine":63,"endColumn":59},{"ruleId":"830","severity":1,"message":"831","line":69,"column":60,"nodeType":"832","messageId":"833","endLine":69,"endColumn":62},{"ruleId":"834","severity":1,"message":"851","line":80,"column":5,"nodeType":"836","endLine":80,"endColumn":7,"suggestions":"932"},{"ruleId":"830","severity":1,"message":"831","line":85,"column":13,"nodeType":"832","messageId":"833","endLine":85,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":98,"column":13,"nodeType":"832","messageId":"833","endLine":98,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":108,"column":13,"nodeType":"832","messageId":"833","endLine":108,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":118,"column":13,"nodeType":"832","messageId":"833","endLine":118,"endColumn":15},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":24,"column":9,"nodeType":"808","messageId":"809","endLine":24,"endColumn":15},{"ruleId":"830","severity":1,"message":"850","line":41,"column":26,"nodeType":"832","messageId":"833","endLine":41,"endColumn":28},{"ruleId":"830","severity":1,"message":"831","line":49,"column":69,"nodeType":"832","messageId":"833","endLine":49,"endColumn":71},{"ruleId":"830","severity":1,"message":"831","line":61,"column":57,"nodeType":"832","messageId":"833","endLine":61,"endColumn":59},{"ruleId":"830","severity":1,"message":"831","line":67,"column":60,"nodeType":"832","messageId":"833","endLine":67,"endColumn":62},{"ruleId":"834","severity":1,"message":"851","line":78,"column":5,"nodeType":"836","endLine":78,"endColumn":7,"suggestions":"933"},{"ruleId":"830","severity":1,"message":"831","line":84,"column":13,"nodeType":"832","messageId":"833","endLine":84,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":97,"column":13,"nodeType":"832","messageId":"833","endLine":97,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":107,"column":13,"nodeType":"832","messageId":"833","endLine":107,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":117,"column":13,"nodeType":"832","messageId":"833","endLine":117,"endColumn":15},{"ruleId":"806","severity":1,"message":"846","line":3,"column":10,"nodeType":"808","messageId":"809","endLine":3,"endColumn":14},{"ruleId":"806","severity":1,"message":"849","line":23,"column":9,"nodeType":"808","messageId":"809","endLine":23,"endColumn":15},{"ruleId":"830","severity":1,"message":"850","line":41,"column":26,"nodeType":"832","messageId":"833","endLine":41,"endColumn":28},{"ruleId":"830","severity":1,"message":"831","line":50,"column":69,"nodeType":"832","messageId":"833","endLine":50,"endColumn":71},{"ruleId":"830","severity":1,"message":"831","line":62,"column":57,"nodeType":"832","messageId":"833","endLine":62,"endColumn":59},{"ruleId":"830","severity":1,"message":"831","line":68,"column":60,"nodeType":"832","messageId":"833","endLine":68,"endColumn":62},{"ruleId":"834","severity":1,"message":"851","line":79,"column":5,"nodeType":"836","endLine":79,"endColumn":7,"suggestions":"934"},{"ruleId":"830","severity":1,"message":"831","line":84,"column":13,"nodeType":"832","messageId":"833","endLine":84,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":97,"column":13,"nodeType":"832","messageId":"833","endLine":97,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":107,"column":13,"nodeType":"832","messageId":"833","endLine":107,"endColumn":15},{"ruleId":"830","severity":1,"message":"831","line":117,"column":13,"nodeType":"832","messageId":"833","endLine":117,"endColumn":15},{"ruleId":"806","severity":1,"message":"935","line":9,"column":9,"nodeType":"808","messageId":"809","endLine":9,"endColumn":17},{"ruleId":"806","severity":1,"message":"845","line":16,"column":10,"nodeType":"808","messageId":"809","endLine":16,"endColumn":21},{"ruleId":"830","severity":1,"message":"831","line":9,"column":15,"nodeType":"832","messageId":"833","endLine":9,"endColumn":17},{"ruleId":"830","severity":1,"message":"831","line":11,"column":52,"nodeType":"832","messageId":"833","endLine":11,"endColumn":54},{"ruleId":"830","severity":1,"message":"831","line":14,"column":20,"nodeType":"832","messageId":"833","endLine":14,"endColumn":22},{"ruleId":"830","severity":1,"message":"831","line":16,"column":52,"nodeType":"832","messageId":"833","endLine":16,"endColumn":54},{"ruleId":"830","severity":1,"message":"831","line":19,"column":20,"nodeType":"832","messageId":"833","endLine":19,"endColumn":22},{"ruleId":"830","severity":1,"message":"831","line":21,"column":52,"nodeType":"832","messageId":"833","endLine":21,"endColumn":54},{"ruleId":"830","severity":1,"message":"831","line":24,"column":20,"nodeType":"832","messageId":"833","endLine":24,"endColumn":22},{"ruleId":"830","severity":1,"message":"831","line":26,"column":52,"nodeType":"832","messageId":"833","endLine":26,"endColumn":54},{"ruleId":"830","severity":1,"message":"831","line":29,"column":20,"nodeType":"832","messageId":"833","endLine":29,"endColumn":22},{"ruleId":"830","severity":1,"message":"831","line":31,"column":52,"nodeType":"832","messageId":"833","endLine":31,"endColumn":54},{"ruleId":"806","severity":1,"message":"930","line":3,"column":9,"nodeType":"808","messageId":"809","endLine":3,"endColumn":16},"no-native-reassign",["936"],"no-negated-in-lhs",["937"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Student_Dashboard must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Student_Profile must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sem1_Student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Testreport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Classreport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Assignmentreport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Assignmentreport_teacher must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Teacher_Dashboard must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Teacher_Profile must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Classreport_semester must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Testreport_semester must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Assignmentreport_semester must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Studymaterial_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Attendancereport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Studymaterial_teacher must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Attendance_report must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component AdClasses_taken must be in PascalCase or SCREAMING_SNAKE_CASE","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["938"],"'response' is assigned a value but never used.",["939"],["940"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'logo' is defined but never used.",["941"],"'loginstatus' is assigned a value but never used.","'Link' is defined but never used.",["942"],["943"],"'report' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'fetchdata'. Either include it or remove the dependency array.",["944"],"'useRef' is defined but never used.","'useReactToPrint' is defined but never used.",["945"],"'studymaterial' is assigned a value but never used.","'setstudymaterial' is assigned a value but never used.",["946"],["947"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'sem1', 'sem2', 'sem3', and 'sem4'. Either include them or remove the dependency array.",["948"],["949"],["950"],"'exporttoexcelhandler' is assigned a value but never used.","'exporttopdfhandler' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchdata' and 'navigate'. Either include them or remove the dependency array.",["951"],["952"],["953"],["954"],"'deadline' is assigned a value but never used.","'setdeadline' is assigned a value but never used.",["955"],"React Hook useEffect has missing dependencies: 'sem1', 'sem2', 'sem3', 'sem4', and 'semester'. Either include them or remove the dependency array.",["956"],["957"],["958"],["959"],["960"],["961"],["962"],"'rollNum' is assigned a value but never used.","'contactNum' is assigned a value but never used.","'enrollNum' is assigned a value but never used.",["963"],["964"],["965"],"'req' is assigned a value but never used.",["966"],["967"],["968"],["969"],"'setIsdotVisible' is assigned a value but never used.","'empty' is assigned a value but never used.","'setempty' is assigned a value but never used.",["970"],["971"],["972"],["973"],["974"],["975"],["976"],["977"],["978"],["979"],["980"],["981"],["982"],["983"],["984"],["985"],"'showsemesterhandler' is assigned a value but never used.","'sem1' is assigned a value but never used.","'sem2' is assigned a value but never used.","'sem3' is assigned a value but never used.","'sem4' is assigned a value but never used.",["986"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'setstatus'. Either include it or remove the dependency array. If 'setstatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["987"],"'CSVLink' is defined but never used.",["988"],["989"],["990"],["991"],"'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"992","fix":"993"},{"desc":"992","fix":"994"},{"desc":"992","fix":"995"},{"desc":"996","fix":"997"},{"desc":"996","fix":"998"},{"desc":"992","fix":"999"},{"desc":"1000","fix":"1001"},{"desc":"992","fix":"1002"},{"desc":"1000","fix":"1003"},{"desc":"1004","fix":"1005"},{"desc":"1006","fix":"1007"},{"desc":"992","fix":"1008"},{"desc":"992","fix":"1009"},{"desc":"1010","fix":"1011"},{"desc":"1000","fix":"1012"},{"desc":"1000","fix":"1013"},{"desc":"992","fix":"1014"},{"desc":"992","fix":"1015"},{"desc":"1016","fix":"1017"},{"desc":"992","fix":"1018"},{"desc":"992","fix":"1019"},{"desc":"992","fix":"1020"},{"desc":"992","fix":"1021"},{"desc":"992","fix":"1022"},{"desc":"992","fix":"1023"},{"desc":"996","fix":"1024"},{"desc":"992","fix":"1025"},{"desc":"992","fix":"1026"},{"desc":"992","fix":"1027"},{"desc":"992","fix":"1028"},{"desc":"992","fix":"1029"},{"desc":"992","fix":"1030"},{"desc":"992","fix":"1031"},{"desc":"1010","fix":"1032"},{"desc":"992","fix":"1033"},{"desc":"1034","fix":"1035"},{"desc":"992","fix":"1036"},{"desc":"992","fix":"1037"},{"desc":"992","fix":"1038"},{"desc":"992","fix":"1039"},{"desc":"996","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"992","fix":"1043"},{"desc":"992","fix":"1044"},{"desc":"1006","fix":"1045"},{"desc":"992","fix":"1046"},{"desc":"1006","fix":"1047"},{"desc":"992","fix":"1048"},{"desc":"992","fix":"1049"},{"desc":"1050","fix":"1051"},{"desc":"1000","fix":"1052"},{"desc":"1000","fix":"1053"},{"desc":"1000","fix":"1054"},{"desc":"1000","fix":"1055"},"Update the dependencies array to be: [navigate]",{"range":"1056","text":"1057"},{"range":"1058","text":"1057"},{"range":"1059","text":"1057"},"Update the dependencies array to be: [name, navigate]",{"range":"1060","text":"1061"},{"range":"1062","text":"1061"},{"range":"1063","text":"1057"},"Update the dependencies array to be: [fetchdata]",{"range":"1064","text":"1065"},{"range":"1066","text":"1057"},{"range":"1067","text":"1065"},"Update the dependencies array to be: [enrollNum, navigate]",{"range":"1068","text":"1069"},"Update the dependencies array to be: [report, sem1, sem2, sem3, sem4]",{"range":"1070","text":"1071"},{"range":"1072","text":"1057"},{"range":"1073","text":"1057"},"Update the dependencies array to be: [fetchdata, navigate]",{"range":"1074","text":"1075"},{"range":"1076","text":"1065"},{"range":"1077","text":"1065"},{"range":"1078","text":"1057"},{"range":"1079","text":"1057"},"Update the dependencies array to be: [sem1, sem2, sem3, sem4, semester, student]",{"range":"1080","text":"1081"},{"range":"1082","text":"1057"},{"range":"1083","text":"1057"},{"range":"1084","text":"1057"},{"range":"1085","text":"1057"},{"range":"1086","text":"1057"},{"range":"1087","text":"1057"},{"range":"1088","text":"1061"},{"range":"1089","text":"1057"},{"range":"1090","text":"1057"},{"range":"1091","text":"1057"},{"range":"1092","text":"1057"},{"range":"1093","text":"1057"},{"range":"1094","text":"1057"},{"range":"1095","text":"1057"},{"range":"1096","text":"1075"},{"range":"1097","text":"1057"},"Update the dependencies array to be: [sem1, sem2, sem3, sem4, study]",{"range":"1098","text":"1099"},{"range":"1100","text":"1057"},{"range":"1101","text":"1057"},{"range":"1102","text":"1057"},{"range":"1103","text":"1057"},{"range":"1104","text":"1061"},"Update the dependencies array to be: [navigate, teacher_id]",{"range":"1105","text":"1106"},{"range":"1107","text":"1057"},{"range":"1108","text":"1057"},{"range":"1109","text":"1071"},{"range":"1110","text":"1057"},{"range":"1111","text":"1071"},{"range":"1112","text":"1057"},{"range":"1113","text":"1057"},"Update the dependencies array to be: [setstatus, students]",{"range":"1114","text":"1115"},{"range":"1116","text":"1065"},{"range":"1117","text":"1065"},{"range":"1118","text":"1065"},{"range":"1119","text":"1065"},[1858,1860],"[navigate]",[1856,1858],[1851,1853],[1921,1927],"[name, navigate]",[1470,1476],[1828,1830],[2983,2985],"[fetchdata]",[1525,1527],[2867,2869],[2069,2080],"[enrollNum, navigate]",[2991,2999],"[report, sem1, sem2, sem3, sem4]",[3366,3368],[1776,1778],[1848,1850],"[fetchdata, navigate]",[2920,2922],[2865,2867],[2469,2471],[2535,2537],[2678,2687],"[sem1, sem2, sem3, sem4, semester, student]",[2998,3000],[1341,1343],[2545,2547],[2544,2546],[2473,2475],[2474,2476],[1498,1504],[2574,2576],[2548,2550],[4881,4883],[4867,4869],[4954,4956],[4989,4991],[5265,5267],[1825,1827],[4935,4937],[2636,2643],"[sem1, sem2, sem3, sem4, study]",[3112,3114],[4866,4868],[4940,4942],[1547,1549],[1987,1993],[2281,2293],"[navigate, teacher_id]",[1320,1322],[1731,1733],[2985,2993],[3367,3369],[2990,2998],[3325,3327],[1899,1901],[363,373],"[setstatus, students]",[2431,2433],[2398,2400],[2402,2404],[2393,2395]]