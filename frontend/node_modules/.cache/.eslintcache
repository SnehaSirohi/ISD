[{"/Users/anassaifi/Desktop/ISD/frontend/src/index.js":"1","/Users/anassaifi/Desktop/ISD/frontend/src/App.js":"2","/Users/anassaifi/Desktop/ISD/frontend/src/components/login/login.js":"3","/Users/anassaifi/Desktop/ISD/frontend/src/components/login2/Login2.js":"4","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_2.js":"5","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_3.js":"6","/Users/anassaifi/Desktop/ISD/frontend/src/components/loginteacher/loginteacher.js":"7","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_4.js":"8","/Users/anassaifi/Desktop/ISD/frontend/src/components/homepage/homepage.js":"9","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_1.js":"10","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_1..js":"11","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_1.js":"12","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_4.js":"13","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_3.js":"14","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_2.js":"15","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_3.js":"16","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_2.js":"17","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_4.js":"18","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/Student_profile.js":"19","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/sem1.js":"20","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/Notifications.js":"21","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Teacher_dashboard.js":"22","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Teacher_profile.js":"23","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/change_teacher_password.js":"24","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem1.js":"25","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem2.js":"26","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem3.js":"27","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem4.js":"28","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Teacherprofile2.js":"29","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Notifications.js":"30","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem2filters.js":"31","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/student_dashboard.js":"32","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem3filters.js":"33","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/classreport_student.js":"34","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/scheduleclassreport.js":"35","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/testreport_student.js":"36","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/change_student_password.js":"37","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/semesterwise/Classreport_semester.js":"38","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/semesterwise/Testreport_semester.js":"39","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance Report/attendancestudent.js":"40","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem1filters.js":"41","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/scheduletestreport.js":"42","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/assignmentreport_student.js":"43","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/teacher_studymaterial.js":"44","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/semesterwise/Assignmentreport_semester.js":"45","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem1.js":"46","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem4filters.js":"47","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem3.js":"48","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem4.js":"49","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem1.js":"50","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/teacher_assignment_report.js":"51","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem2.js":"52","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Profile/Profile.js":"53","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Attendance_report.js":"54","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem4.js":"55","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/semesterwise/studymaterial_semester.js":"56","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem2.js":"57","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem3.js":"58","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem1Attendance.js":"59","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Navbar.js":"60","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem3Attendance.js":"61","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem2Attendance.js":"62","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem4Attendance.js":"63","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Classes_taken.js":"64","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Home.js":"65","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/login.js":"66","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/registerteacher.js":"67","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/registerstudent.js":"68","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/registermultiplestudents.js":"69","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Navbar.js":"70","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/List.js":"71","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/List.js":"72","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/List.js":"73","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/Navbar.js":"74","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/semesterwise/list.js":"75","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/List.js":"76","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/list.js":"77","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/list.js":"78","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/semesterwise/list.js":"79","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/list.js":"80","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance Report/list2.js":"81","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/list.js":"82","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/List.js":"83","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/SubmittedAssignments.js":"84","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/list2.js":"85"},{"size":255,"mtime":1671186161594,"results":"86","hashOfConfig":"87"},{"size":11302,"mtime":1671424608113,"results":"88","hashOfConfig":"87"},{"size":3203,"mtime":1671186161593,"results":"89","hashOfConfig":"87"},{"size":1336,"mtime":1671186161593,"results":"90","hashOfConfig":"87"},{"size":5715,"mtime":1671186161576,"results":"91","hashOfConfig":"87"},{"size":5629,"mtime":1671186161576,"results":"92","hashOfConfig":"87"},{"size":3252,"mtime":1671186161594,"results":"93","hashOfConfig":"87"},{"size":5697,"mtime":1671186161576,"results":"94","hashOfConfig":"87"},{"size":921,"mtime":1671186161591,"results":"95","hashOfConfig":"87"},{"size":6095,"mtime":1671424608115,"results":"96","hashOfConfig":"87"},{"size":11142,"mtime":1671186161577,"results":"97","hashOfConfig":"87"},{"size":9744,"mtime":1671186161589,"results":"98","hashOfConfig":"87"},{"size":9696,"mtime":1671186161577,"results":"99","hashOfConfig":"87"},{"size":9480,"mtime":1671186161590,"results":"100","hashOfConfig":"87"},{"size":9622,"mtime":1671186161589,"results":"101","hashOfConfig":"87"},{"size":9520,"mtime":1671186161577,"results":"102","hashOfConfig":"87"},{"size":9358,"mtime":1671186161577,"results":"103","hashOfConfig":"87"},{"size":9598,"mtime":1671186161590,"results":"104","hashOfConfig":"87"},{"size":3878,"mtime":1671186161582,"results":"105","hashOfConfig":"87"},{"size":2291,"mtime":1671186161583,"results":"106","hashOfConfig":"87"},{"size":2916,"mtime":1671186161582,"results":"107","hashOfConfig":"87"},{"size":4904,"mtime":1671186161587,"results":"108","hashOfConfig":"87"},{"size":4738,"mtime":1671186161587,"results":"109","hashOfConfig":"87"},{"size":4945,"mtime":1671186161587,"results":"110","hashOfConfig":"87"},{"size":2441,"mtime":1671186161588,"results":"111","hashOfConfig":"87"},{"size":3047,"mtime":1671186161588,"results":"112","hashOfConfig":"87"},{"size":3099,"mtime":1671186161589,"results":"113","hashOfConfig":"87"},{"size":3099,"mtime":1671186161589,"results":"114","hashOfConfig":"87"},{"size":2600,"mtime":1671186161587,"results":"115","hashOfConfig":"87"},{"size":1504,"mtime":1671186161586,"results":"116","hashOfConfig":"87"},{"size":10328,"mtime":1671186161578,"results":"117","hashOfConfig":"87"},{"size":4969,"mtime":1671444664922,"results":"118","hashOfConfig":"87"},{"size":10255,"mtime":1671186161578,"results":"119","hashOfConfig":"87"},{"size":2951,"mtime":1671186161579,"results":"120","hashOfConfig":"87"},{"size":2868,"mtime":1671186161580,"results":"121","hashOfConfig":"87"},{"size":3148,"mtime":1671424608116,"results":"122","hashOfConfig":"87"},{"size":4858,"mtime":1671186161582,"results":"123","hashOfConfig":"87"},{"size":8640,"mtime":1671186161580,"results":"124","hashOfConfig":"87"},{"size":8580,"mtime":1671186161581,"results":"125","hashOfConfig":"87"},{"size":8530,"mtime":1671424608115,"results":"126","hashOfConfig":"87"},{"size":10616,"mtime":1671186161578,"results":"127","hashOfConfig":"87"},{"size":2731,"mtime":1671186161580,"results":"128","hashOfConfig":"87"},{"size":2594,"mtime":1671186161574,"results":"129","hashOfConfig":"87"},{"size":2885,"mtime":1671186161585,"results":"130","hashOfConfig":"87"},{"size":10149,"mtime":1671442519166,"results":"131","hashOfConfig":"87"},{"size":6719,"mtime":1671186161584,"results":"132","hashOfConfig":"87"},{"size":10211,"mtime":1671186161579,"results":"133","hashOfConfig":"87"},{"size":6507,"mtime":1671186161584,"results":"134","hashOfConfig":"87"},{"size":6594,"mtime":1671186161584,"results":"135","hashOfConfig":"87"},{"size":6844,"mtime":1671186161573,"results":"136","hashOfConfig":"87"},{"size":2396,"mtime":1671424608115,"results":"137","hashOfConfig":"87"},{"size":7153,"mtime":1671186161573,"results":"138","hashOfConfig":"87"},{"size":1139,"mtime":1671186161586,"results":"139","hashOfConfig":"87"},{"size":1805,"mtime":1671186161569,"results":"140","hashOfConfig":"87"},{"size":7160,"mtime":1671186161573,"results":"141","hashOfConfig":"87"},{"size":7952,"mtime":1671186161585,"results":"142","hashOfConfig":"87"},{"size":6590,"mtime":1671186161584,"results":"143","hashOfConfig":"87"},{"size":7129,"mtime":1671186161573,"results":"144","hashOfConfig":"87"},{"size":8500,"mtime":1671186161570,"results":"145","hashOfConfig":"87"},{"size":2811,"mtime":1671186161570,"results":"146","hashOfConfig":"87"},{"size":8183,"mtime":1671186161571,"results":"147","hashOfConfig":"87"},{"size":8250,"mtime":1671186161571,"results":"148","hashOfConfig":"87"},{"size":8124,"mtime":1671186161571,"results":"149","hashOfConfig":"87"},{"size":3518,"mtime":1671186161569,"results":"150","hashOfConfig":"87"},{"size":1447,"mtime":1671186161570,"results":"151","hashOfConfig":"87"},{"size":3127,"mtime":1671186161572,"results":"152","hashOfConfig":"87"},{"size":4241,"mtime":1671186161572,"results":"153","hashOfConfig":"87"},{"size":5170,"mtime":1671186161572,"results":"154","hashOfConfig":"87"},{"size":3907,"mtime":1671186161572,"results":"155","hashOfConfig":"87"},{"size":3656,"mtime":1671186161586,"results":"156","hashOfConfig":"87"},{"size":1026,"mtime":1671186161576,"results":"157","hashOfConfig":"87"},{"size":594,"mtime":1671186161570,"results":"158","hashOfConfig":"87"},{"size":610,"mtime":1671186161578,"results":"159","hashOfConfig":"87"},{"size":4985,"mtime":1671424608116,"results":"160","hashOfConfig":"87"},{"size":583,"mtime":1671186161585,"results":"161","hashOfConfig":"87"},{"size":760,"mtime":1671186161571,"results":"162","hashOfConfig":"87"},{"size":970,"mtime":1671424608114,"results":"163","hashOfConfig":"87"},{"size":569,"mtime":1671186161580,"results":"164","hashOfConfig":"87"},{"size":1973,"mtime":1671424608114,"results":"165","hashOfConfig":"87"},{"size":627,"mtime":1671186161584,"results":"166","hashOfConfig":"87"},{"size":564,"mtime":1671186161575,"results":"167","hashOfConfig":"87"},{"size":575,"mtime":1671186161579,"results":"168","hashOfConfig":"87"},{"size":2005,"mtime":1671186161585,"results":"169","hashOfConfig":"87"},{"size":1916,"mtime":1671442241654,"results":"170","hashOfConfig":"87"},{"size":390,"mtime":1671441569909,"results":"171","hashOfConfig":"87"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"akp4bw",{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"174"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"174"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"174"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"174"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"174"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"174"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"174"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"174"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"174"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"174"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"174"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"174"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"174"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"174"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"174"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"174"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"174"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"174"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"174"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"174"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"174"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"174"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"174"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"174"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"174"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"174"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"174"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"174"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"174"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"174"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"174"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"174"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"174"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"174"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"174"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"174"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"174"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"174"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"174"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"174"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"174"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"174"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"174"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"174"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"174"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"174"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"174"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"174"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"174"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"174"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"174"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"174"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"174"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"174"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"174"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"174"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"174"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"174"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"174"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"174"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"174"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"174"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"174"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"174"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"174"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"174"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"174"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"174"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"174"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"174"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},"/Users/anassaifi/Desktop/ISD/frontend/src/index.js",[],["413","414"],"/Users/anassaifi/Desktop/ISD/frontend/src/App.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Admin from './components/Admin/Admin Dashboard/login';\nimport Register_teacher from './components/Admin/Admin Dashboard/Register/registerteacher'\nimport Register_student from './components/Admin/Admin Dashboard/Register/registerstudent'\nimport Register_Mul_student from './components/Admin/Admin Dashboard/Register/registermultiplestudents'\nimport Login from './components/login/login';\nimport Login2 from './components/login2/Login2';\nimport LoginTeacher from './components/loginteacher/loginteacher';\nimport Homepage from './components/homepage/homepage'\nimport AttendanceSem1 from './components/Attendance list/Sem_1';\nimport AttendanceSem2 from './components/Attendance list/Sem_2';\nimport AttendanceSem3 from './components/Attendance list/Sem_3';\nimport AttendanceSem4 from './components/Attendance list/Sem_4';\nimport ClassScheduleSem1 from './components/Class Schedule/Sem_1.'\nimport ClassScheduleSem2 from './components/Class Schedule/Sem_2'\nimport ClassScheduleSem3 from './components/Class Schedule/Sem_3'\nimport ClassScheduleSem4 from './components/Class Schedule/Sem_4'\nimport TestscheduleSem1 from './components/Test Schedule/Sem_1';\nimport TestscheduleSem2 from './components/Test Schedule/Sem_2';\nimport TestscheduleSem3 from './components/Test Schedule/Sem_3';\nimport TestscheduleSem4 from './components/Test Schedule/Sem_4';\nimport Student_Dashboard from './components/Student_dashboard/student_dashboard';\nimport Student_Profile from './components/Student_dashboard/Student_profile'\nimport ChangeStudentPassword from './components/Student_dashboard/change_student_password';\nimport Teacher_Dashboard from './components/Teacher_dashboard/Teacher_dashboard';\nimport Teacher_Profile from './components/Teacher_dashboard/Teacher_profile'\nimport ChangeTeacherPassword from './components/Teacher_dashboard/change_teacher_password';\nimport Sem1 from './components/Teacher_dashboard/sem1';\nimport Sem2 from './components/Teacher_dashboard/sem2';\nimport Sem3 from './components/Teacher_dashboard/sem3';\nimport Sem4 from './components/Teacher_dashboard/sem4';\nimport Sem1_Student from './components/Student_dashboard/sem1';\nimport Sem1filters from './components/Filters/Sem1filters';\nimport Sem2filters from './components/Filters/Sem2filters';\nimport Sem3filters from './components/Filters/Sem3filters';\nimport Sem4filters from './components/Filters/Sem4filters';\nimport Classreport from './components/Scheduled_Class_List/scheduleclassreport';\nimport Testreport from './components/Scheduled_test_List/scheduletestreport';\nimport Testreport_student from './components/Scheduled_test_List/testreport_student';\nimport Classreport_student from './components/Scheduled_Class_List/classreport_student';\nimport Classreport_semester from './components/Scheduled_Class_List/semesterwise/Classreport_semester';\nimport Testreport_semester from './components/Scheduled_test_List/semesterwise/Testreport_semester';\nimport Assignmentreport_semester from './components/Assignment_report/semesterwise/Assignmentreport_semester';\nimport Attendancereport_student from './components/Attendance Report/attendancestudent';\nimport Assignmentreport_student from './components/Assignment_report/assignmentreport_student';\nimport Assignmentreport_teacher from './components/Assignment_report/teacher_assignment_report';\nimport Studymaterial_teacher from './components/Study Material/teacher_studymaterial';\nimport Studymaterial_student from './components/Study Material/semesterwise/studymaterial_semester';\nimport UploadAssignmentsem1 from './components/Assignment_Upload/Upload_assignment_sem1';\nimport UploadAssignmentsem2 from './components/Assignment_Upload/Upload_assignment_sem2';\nimport UploadAssignmentsem3 from './components/Assignment_Upload/Upload_assignment_sem3';\nimport UploadAssignmentsem4 from './components/Assignment_Upload/Upload_assignment_sem4';\nimport Notifications from './components/Student_dashboard/Notifications';\nimport UploadStudyMaterialSem1 from './components/Study Material/UploadStudyMaterialSem1';\nimport UploadStudyMaterialSem2 from './components/Study Material/UploadStudyMaterialSem2';\nimport UploadStudyMaterialSem3 from './components/Study Material/UploadStudyMaterialSem3';\nimport UploadStudyMaterialSem4 from './components/Study Material/UploadStudyMaterialSem4';\nimport Teacherprofile2 from './components/Teacher_dashboard/Teacherprofile2';\nimport TeacherNotifications from './components/Teacher_dashboard/Notifications'\nimport Profile from './components/Teacher_dashboard/Profile/Profile';\nimport Attendance_report from './components/Admin Dashboard/Attendance_report';\nimport AdminSem1Attendance from './components/Admin Dashboard/Sem1Attendance';\nimport AdminSem2Attendance from './components/Admin Dashboard/Sem2Attendance';\nimport AdminSem3Attendance from './components/Admin Dashboard/Sem3Attendance';\nimport AdminSem4Attendance from './components/Admin Dashboard/Sem4Attendance';\nimport AdClasses_taken from './components/Admin Dashboard/Classes_taken';\nimport Home from './components/Admin Dashboard/Home';\nimport SubmittedAssignments from './components/Assignment_report/SubmittedAssignments';\nfunction App() {\n  const [assid,setassid]=useState(\"\")\n  useEffect(() => {\n    window.process = {\n      ...window.process,\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path='/' exact element={<Homepage />} />\n          <Route path = '/admin' element = {<Admin />} />\n          <Route path = '/registerTeacher' element = {<Register_teacher />} />\n          <Route path = '/registerStudent' element = {<Register_student />} />\n          <Route path = '/registerAllStudent' element = {<Register_Mul_student />} />\n          <Route path='/login' element={<Login />} />\n          <Route path='/login2' element={<Login2 />} />\n          <Route path='/loginteacher' element={<LoginTeacher />} />\n          <Route path='/dashboard' element={<Student_Dashboard />} />\n          <Route path='/dashboard/profile' element={<Student_Profile />} />\n          <Route path=\"/dashboard/changepassword\" element={<ChangeStudentPassword />} />\n          <Route path='/Studentdashboard/sem1' element={<Sem1_Student />} />\n          <Route path='/testschedule' element={<Testreport_student />} />\n          <Route path='/classschedule' element={<Classreport_student />} />\n          <Route path='/assignmentreportstudent' element={<Assignmentreport_student />} />\n          <Route path='/Teacherdashboard/assignmentreportteacher' element={<Assignmentreport_teacher setassid={setassid} />} />\n          <Route path='/Teacherdashboard' element={<Teacher_Dashboard />} />\n          <Route path='/Teacherdashboard/profile' element={<Teacher_Profile />} />\n          <Route path=\"/Teacherdashboard/changepassword\" element={<ChangeTeacherPassword />} />\n          <Route path='/Teacherdashboard/sem1/attendance' element={<AttendanceSem1 />} />\n          <Route path='/Teacherdashboard/sem2/attendance' element={<AttendanceSem2 />} />\n          <Route path='/Teacherdashboard/sem3/attendance' element={<AttendanceSem3 />} />\n          <Route path='/Teacherdashboard/sem4/attendance' element={<AttendanceSem4 />} />\n          <Route path='/Teacherdashboard/sem1' element={<Sem1 />} />\n          <Route path='/Teacherdashboard/sem2' element={<Sem2 />} />\n          <Route path='/Teacherdashboard/sem3' element={<Sem3 />} />\n          <Route path='/Teacherdashboard/sem4' element={<Sem4 />} />\n          <Route path='/Teacherdashboard/sem1/classschedule' element={<ClassScheduleSem1 />} />\n          <Route path='/Teacherdashboard/sem2/classschedule' element={<ClassScheduleSem2 />} />\n          <Route path='/Teacherdashboard/sem3/classschedule' element={<ClassScheduleSem3 />} />\n          <Route path='/Teacherdashboard/sem4/classschedule' element={<ClassScheduleSem4 />} />\n          <Route path=\"/Teacherdashboard/sem1/testschedule\" element={<TestscheduleSem1 />} />\n          <Route path=\"/Teacherdashboard/sem2/testschedule\" element={<TestscheduleSem2 />} />\n          <Route path=\"/Teacherdashboard/sem3/testschedule\" element={<TestscheduleSem3 />} />\n          <Route path=\"/Teacherdashboard/sem4/testschedule\" element={<TestscheduleSem4 />} />\n          <Route path='/scheduledclassreport' element={<Classreport />} />\n          <Route path='/scheduledtestreport' element={<Testreport />} />\n          <Route path='/scheduledclass' element={<Classreport_semester />} />\n          <Route path='/scheduledtests' element={<Testreport_semester />} />\n          <Route path='/assignments' element={<Assignmentreport_semester />} />\n          <Route path='/studymaterial' element={<Studymaterial_student />} />\n          <Route path='/attendancereport' element={<Attendancereport_student />} />\n          <Route path='/Teacherdashboard/studymaterial' element={<Studymaterial_teacher />} />\n          <Route path='/Teacherdashboard/sem1/assignment' element={<UploadAssignmentsem1 />} />\n          <Route path='/Teacherdashboard/sem2/assignment' element={<UploadAssignmentsem2 />} />\n          <Route path='/Teacherdashboard/sem3/assignment' element={<UploadAssignmentsem3 />} />\n          <Route path='/Teacherdashboard/sem4/assignment' element={<UploadAssignmentsem4 />} />\n          <Route path='/Teacherdashboard/sem1/studymaterial' element={<UploadStudyMaterialSem1 />} />\n          <Route path='/Teacherdashboard/sem2/studymaterial' element={<UploadStudyMaterialSem2 />} />\n          <Route path='/Teacherdashboard/sem3/studymaterial' element={<UploadStudyMaterialSem3 />} />\n          <Route path='/Teacherdashboard/sem4/studymaterial' element={<UploadStudyMaterialSem4 />} />\n          <Route path='/Notifications' element={<Notifications />} />\n          <Route path=\"/Teacherdashboard/filters/sem1\" element={<Sem1filters />} />\n          <Route path=\"/Teacherdashboard/filters/sem2\" element={<Sem2filters />} />\n          <Route path=\"/Teacherdashboard/filters/sem3\" element={<Sem3filters />} />\n          <Route path=\"/Teacherdashboard/filters/sem4\" element={<Sem4filters />} />\n          <Route path=\"/Teacherdashboard/profile2\" element={<Teacherprofile2 />} />\n          <Route path=\"/teacherNotifications\" element={<TeacherNotifications />} />\n          <Route path=\"/admindashboard/attendancereport\" element={<Attendance_report />} />\n          <Route path=\"/admindashboard/Sem1/attendance\" element={<AdminSem1Attendance />} />\n          <Route path=\"/admindashboard/Sem2/attendance\" element={<AdminSem2Attendance />} />\n          <Route path=\"/admindashboard/Sem3/attendance\" element={<AdminSem3Attendance />} />\n          <Route path=\"/admindashboard/Sem4/attendance\" element={<AdminSem4Attendance />} />\n          <Route path=\"/admindashboard/classestaken\" element={<AdClasses_taken />} />\n          <Route path=\"/admindashboard\" element={<Home />} />\n          <Route path=\"/profile3\" element={<Profile />} />\n          <Route path=\"/Teacherdashboard/submissions\" element={<SubmittedAssignments assid={assid} />} />\n          {/* <Route path=\"/admindashboard/home\" element ={<Home/>}/> */}\n\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","/Users/anassaifi/Desktop/ISD/frontend/src/components/login/login.js",["435"],"import React, { useState } from \"react\";\nimport \"./login.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\"\n\nconst Login = () => {\n\n  const [ifPasswordAndUserNameNotsame, setIfPasswordAndUserNameNotsame] = useState(false);\n\n  const navigate = useNavigate();\n\n  const [user, setUser] = useState({\n    enrollNum: \"\",\n    password: \"\"\n  })\n\n  const [loginstatus, setLoginstatus] = useState(\"\")\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setUser({\n      ...user,\n      [name]: value\n    })\n  }\n\n  const login = async (e) => {\n    e.preventDefault();\n    await fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    }).then(async (response) => {\n      let data = await response.json();\n      console.log(data);\n      if (data.student) {\n        localStorage.setItem('token', data.student)\n        navigate(\"/dashboard\");\n        setLoginstatus(data.message);\n      } else {\n        setIfPasswordAndUserNameNotsame(true);\n        setLoginstatus(data.message);\n      }\n    });\n\n  }\n\n  return (\n    <>\n      <section className=\"login2body\">\n        <div className=\"screen\">\n          <div className=\"screen__content\">\n            <form className=\"login\">\n              {/* <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Login</h3> */}\n\n              <div className=\"login__field\">\n                <input\n                  type=\"text\"\n                  className=\"login__input\"\n                  id=\"floatingInput\"\n                  name=\"enrollNum\"\n                  placeholder=\"Enrollment Number\"\n                  value={user.enrollNum}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"login__input\"\n                  id=\"floatingPassword\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={user.password}\n                  onChange={handleChange}\n                />\n              </div>\n              {ifPasswordAndUserNameNotsame && < div class=\"alertmessage\">\n                <i class='fa fa-exclamation-circle'></i> &nbsp;\n                please check your username and password!\n              </div>}\n              <button\n                type=\"submit\"\n                className=\"button login__submit\"\n                onClick={login}\n              >\n                <span className=\"button__text\">Log In Now</span>\n              </button>\n            </form>\n          </div>\n          <div class=\"screen__background\">\n            <span class=\"screen__background__shape screen__background__shape4\"></span>\n            <span class=\"screen__background__shape screen__background__shape3\"></span>\n            <span class=\"screen__background__shape screen__background__shape2\"></span>\n            <span class=\"screen__background__shape screen__background__shape1\"></span>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\n\nexport default Login;","/Users/anassaifi/Desktop/ISD/frontend/src/components/login2/Login2.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_2.js",["436","437","438","439","440","441","442"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./attendance.css\";\nimport jwt from 'jsonwebtoken' //\nimport List from \"./List\";\nimport Navbar from \"../Teacher_dashboard/Navbar.js\";\nimport { useNavigate } from \"react-router-dom\"\nconst Sem_2 = () => {\n\n  //\n  const navigate = useNavigate();\n  const [students, setstudents] = useState([]);\n  const [status, setstatus] = useState({});\n  const [subject, setsubject] = useState(\"\");\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\n  const [NitishaAgg,setNitishaAgg]=useState(false)\n  const [MKDas,setMKDas]=useState(false)\n  const [Sanjeev,setSanjeev]=useState(false)\n  const[success,setsuccess]= useState(false)\n\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendance\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    });\n    const json = await response.json();\n    console.log(json)\n    console.log(json.name)\n    if(json.name==\"Unmesh Shukla\")\n    {\n      setUnmeshShukla(true)\n    }\n    if(json.name==\"Nitisha Aggarwal\")\n    {\n      setNitishaAgg(true)\n    }\n    if(json.name==\"M.K Das\")\n    {\n      setMKDas(true)\n    }\n    if(json.name==\"Sanjeev\")\n    {\n      setSanjeev(false)\n    }\n\n    let data1 = json.data.filter((data) => data.semester == \"Sem-2\");\n    setstudents(data1);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        fetchdata();\n      }\n    }\n  }, []);\n\n  async function Submit(e) {\n    if (!subject) {\n      alert(\"Please select the subject \")\n    }\n    else {\n      e.preventDefault()\n      const response = await fetch(\"http://localhost:4000/attendance/sem2\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'), //\n        },\n        body: JSON.stringify({\n          subject,\n          status,\n        }),\n      }).then(async (response) => {\n        let dataa = await response.json();\n        setsuccess(dataa.success)\n      });\n      setTimeout(() => {\n         setsuccess(false)\n         navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n\n  }\n\n\n  \n\n  return (\n    <>\n     <div className='height100vh'>\n    <Navbar/>\n      <div className=\"attendencebody\">\n        <h1 className=\"atte1\">Sem 2 attendance</h1>\n        {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer \">\n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Computer Communication and Networks\">\n              Computer Communication and Networks\n            </option>\n            <option value=\"Operating Systems\">Operating Systems</option>\n          </select></div>}\n          \n        {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\n          \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Database Systems\">Database Systems</option>\n          </select></div>}\n          \n        {MKDas && <div className=\"mb-3 selectsubjectcontainer \">\n          \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option> \n            <option value=\"Applied Machine Learning\">\n              Applied Machine Learning\n            </option>\n          </select></div>}\n          \n        {Sanjeev && <div className=\"mb-3 selectsubjectcontainer \">\n          \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Open Elective-1\">Open Elective-1</option>\n          </select></div>}\n\n      <div className=\"table-1\">\n        <table className=\"table table-striped\">\n          <thead className=\"heading-1\">\n            <tr>\n              <th>Student</th>\n              <th>Present</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List students={students} status={status} setstatus={setstatus} />\n          </tbody>\n        </table>\n      </div>\n      <div className=\"button-1\">\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\n      </div> \n    </div>\n    {success && <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Attendance Saved</h4>\n</div>\n      </div>}\n      </div>\n    </>\n  );\n};\n\nexport default Sem_2;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_3.js",["443","444","445","446","447","448","449"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./attendance.css\";\nimport List from \"./List\";\nimport Navbar from \"../Teacher_dashboard/Navbar.js\";\nimport jwt from 'jsonwebtoken' //\nimport { useNavigate } from \"react-router-dom\"\n\nconst Sem_3 = () => {\n  //\n  const navigate = useNavigate();\n  const [students, setstudents] = useState([]);\n  const [status, setstatus] = useState({});\n  const [subject, setsubject] = useState(\"\");\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\n  const [NitishaAgg,setNitishaAgg]=useState(false)\n  const [MKDas,setMKDas]=useState(false)\n  const [Manish,setManish]=useState(false)\n  const[success,setsuccess]= useState(false)\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendance\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    });\n    const json = await response.json();\n    console.log(json)\n    console.log(json.name)\n    if(json.name==\"Unmesh Shukla\")\n    {\n      setUnmeshShukla(true)\n    }\n    if(json.name==\"Nitisha Aggarwal\")\n    {\n      setNitishaAgg(true)\n    }\n    if(json.name==\"M.K Das\")\n    {\n      setMKDas(true)\n    }\n    if(json.name==\"Manish\")\n    {\n      setManish(true)\n    }\n\n    let data1 = json.data.filter((data) => data.semester == \"Sem-3\");\n    setstudents(data1);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        fetchdata();\n      }\n    }\n  }, []);\n\n  async function Submit(e) {\n    if (!subject) {\n      alert(\"Please select the subject \")\n    }\n    else {\n      e.preventDefault()\n      const response = await fetch(\"http://localhost:4000/attendance/sem3\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'), //\n        },\n        body: JSON.stringify({\n          subject,\n          status,\n        }),\n      }).then(async (response) => {\n        let dataa = await response.json();\n        setsuccess(dataa.success)\n      });\n      setTimeout(() => {\n         setsuccess(false)\n         navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n\n  }\n\n\n  return (\n    <>\n     <div className='height100vh'>\n      <div className=\"attendencebody\">\n        <Navbar/>\n        <h1 className=\"atte1\">Sem-3 attendance</h1>\n        {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer \">\n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Information System Design\">\n              Information System Design\n            </option>\n          </select>\n        </div>}\n        {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\n          \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Cloud Computing\">Cloud Computing</option>\n          </select>\n        </div>}\n        {MKDas && <div className=\"mb-3 selectsubjectcontainer \">\n          \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Software Engineering\">Software Engineering</option>\n          </select>\n        </div>}\n        {Manish && <div className=\"mb-3 selectsubjectcontainer \">\n          \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"IT Planning and Management\">\n              IT Planning and Management\n            </option>\n          </select>\n        </div>}\n\n      <div className=\"table-1\">\n        <table className=\"table table-striped\">\n          <thead className=\"heading-1\">\n            <tr>\n              <th>Student</th>\n              <th>Present</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List students={students} status={status} setstatus={setstatus} />\n          </tbody>\n        </table>\n      </div>\n      <div className=\"button-1\">\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\n      </div> \n    </div>\n    {success && <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Attendance Saved</h4>\n</div>\n      </div>}\n      </div>\n    </>\n  );\n};\n\nexport default Sem_3;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/loginteacher/loginteacher.js",["450"],"import React, { useState } from \"react\";\nimport \"./loginteacher.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\"\n\nconst Loginteacher = () => {\n\n  const [ifPasswordAndUserNameNotsame, setIfPasswordAndUserNameNotsame] = useState(false);\n\n  const navigate = useNavigate();\n\n  const [user, setUser] = useState({\n    Teacher_id: \"\",\n    password: \"\"\n  })\n\n  const [loginstatus, setLoginstatus] = useState(\"\")\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setUser({\n      ...user,\n      [name]: value\n    })\n  }\n\n  const login = async (e) => {\n    e.preventDefault();\n    await fetch(\"http://localhost:4000/loginteacher\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    }).then(async (response) => {\n      let data = await response.json();\n      console.log(data);\n      if (data.teacher) {\n        localStorage.setItem('token', data.teacher)\n        navigate(\"/Teacherdashboard\");\n        setLoginstatus(data.message);\n      } else {\n        setIfPasswordAndUserNameNotsame(true);\n        setLoginstatus(data.message);\n      }\n    });\n\n  }\n\n  return (\n    <>\n      <section className=\"login2body\">\n        <div className=\"screen\">\n          <div className=\"screen__content\">\n            <form className=\"login\">\n              {/* <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Login for Professors</h3> */}\n\n              <div className=\"login__field\">\n                <input\n                  type=\"text\"\n                  className=\"login__input\"\n                  id=\"floatingInput\"\n                  name=\"Teacher_id\"\n                  placeholder=\"Professor ID\"\n                  value={user.Teacher_id}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"login__input\"\n                  id=\"floatingPassword\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={user.password}\n                  onChange={handleChange}\n                />\n              </div>\n              {ifPasswordAndUserNameNotsame && < div class=\"alertmessage\">\n                <i class='fa fa-exclamation-circle'></i> &nbsp;\n                please check your username and password!\n              </div>}\n              <button\n                type=\"submit\"\n                className=\"button login__submit\"\n                onClick={login}\n              >\n                <span className=\"button__text\">Log In Now</span>\n              </button>\n            </form>\n          </div>\n          <div class=\"screen__background\">\n            <span class=\"screen__background__shape screen__background__shape4\"></span>\n            <span class=\"screen__background__shape screen__background__shape3\"></span>\n            <span class=\"screen__background__shape screen__background__shape2\"></span>\n            <span class=\"screen__background__shape screen__background__shape1\"></span>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\n\nexport default Loginteacher;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_4.js",["451","452","453","454","455","456","457"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./attendance.css\";\nimport List from \"./List\";\nimport jwt from 'jsonwebtoken' //\nimport { useNavigate } from \"react-router-dom\"\nimport Navbar from \"../Teacher_dashboard/Navbar\";\n\nconst Sem_4 = () => {\n  //\n  const navigate = useNavigate();\n  const [students, setstudents] = useState([]);\n  const [status, setstatus] = useState({});\n  const [subject, setsubject] = useState(\"\");\n  const [UnmeshShukla,setUnmeshShukla]=useState(false)\n  const [NitishaAgg,setNitishaAgg]=useState(false)\n  const [MKDas,setMKDas]=useState(false)\n  const [Sanjeev,setSanjeev]=useState(false)\n  const[success,setsuccess]= useState(false)\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendance\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    });\n    const json = await response.json();\n    console.log(json)\n    console.log(json.name)\n\n    if(json.name == \"Unmesh Shukla\")\n    {\n      setUnmeshShukla(true)\n    }\n    if(json.name==\"Nitisha Aggarwal\")\n    {\n      setNitishaAgg(true)\n    }\n    if(json.name==\"M.K Das\")\n    {\n      setMKDas(true)\n    }\n    if(json.name==\"Sanjeev\")\n    {\n      setSanjeev(true)\n    }\n\n    let data1 = json.data.filter((data) => data.semester == \"Sem-4\");\n    setstudents(data1);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        fetchdata();\n      }\n    }\n  }, []);\n\n  async function Submit(e) {\n    if (!subject) {\n      alert(\"Please select the subject \")\n    }\n    else {\n      e.preventDefault()\n      const response = await fetch(\"http://localhost:4000/attendance/sem4\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'), //\n        },\n        body: JSON.stringify({\n          subject,\n          status,\n        }),\n      }).then(async (response) => {\n        let dataa = await response.json();\n        setsuccess(dataa.success)\n      });\n      setTimeout(() => {\n         setsuccess(false)\n         navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n\n  }\n\n\n  return (\n    <>\n     <div className='height100vh'>\n      <div className=\"attendencebody\">\n        <Navbar/>\n        <h1 className=\"atte1\">Sem 4 attendance</h1>\n        {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer \">\n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Internet of Things Systems, Security and Cloud\">\n              Internet of Things Systems, Security and Cloud\n            </option>\n          </select>\n        </div>}\n        {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\n            \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Health Informatics\">Health Informatics</option>\n          </select>\n        </div>}\n        {Sanjeev && <div className=\"mb-3 selectsubjectcontainer \">\n            \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Dissertation Project\">Dissertation Project</option>\n          </select>\n        </div>}\n        {MKDas && <div className=\"mb-3 selectsubjectcontainer\">\n            \n          <select\n            type=\"text\"\n            className=\"form-control\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Research Methods in Informatics\">\n              Research Methods in Informatics\n            </option>\n          </select>\n        </div>}\n\n      <div className=\"table-1\">\n        <table className=\"table table-striped\">\n          <thead className=\"heading-1\">\n            <tr>\n              <th>Student</th>\n              <th>Present</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List students={students} status={status} setstatus={setstatus} />\n          </tbody>\n        </table>\n      </div>\n      <div className=\"button-1\">\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\n      </div> \n    </div>\n    {success && <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Attendance Saved</h4>\n</div>\n      </div>}\n      </div>\n    </>\n  );\n};\n\nexport default Sem_4;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/homepage/homepage.js",["458","459","460"],"import React from \"react\";\nimport \"./homepage.css\";\nimport { Link } from \"react-router-dom\";\nimport classopedia from './classopedia.png'\nimport image1 from './image1.png'\nimport image2 from './image2.png'\nconst Homepage = () => {\n    return (\n        <div className=\"homepage\">\n            <div className=\"Clogo\">\n                <img src={classopedia} className=\"classopedialogo\" ></img>\n            </div>\n\n            <img src={image1} className=\"image1\" ></img>\n            <img src={image2} className=\"image2\" ></img>\n            <div className=\"mt-4\">\n                <h3>Choose Your Role</h3>\n                <div className=\"bttnmargin\">\n                    <Link to=\"/login\"><div className=\"button bttn-1\">Student</div></Link>\n                    <Link to=\"/loginteacher\"><div className=\"button bttn-2\">Teacher</div></Link>\n                </div>\n            </div>\n\n        </div>\n    )\n}\nexport default Homepage","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/Sem_1.js",["461","462","463","464","465","466","467"],"import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./attendance.css\";\nimport jwt from 'jsonwebtoken' //\nimport List from \"./List\";\nimport Navbar from \"../Teacher_dashboard/Navbar.js\";\nimport { useNavigate } from \"react-router-dom\"\n\nconst Sem_1 = () => {\n  //\n  const navigate = useNavigate();\n  const [students, setstudents] = useState([]);\n  const [status, setstatus] = useState({});\n  const [subject, setsubject] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [SunilKumar, setSunilKumar] = useState(false)\n  const [success, setsuccess] = useState(false)\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendance\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n\n      },\n    });\n    const json = await response.json();\n\n    if (json.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (json.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (json.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (json.name == \"Sunil Kumar\") {\n      setSunilKumar(true)\n    }\n\n    let data1 = json.data.filter((data) => data.semester == \"Sem-1\");\n    setstudents(data1);\n  };\n\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        fetchdata()\n      }\n    }\n\n  }, []);\n\n  async function Submit(e) {\n    if (!subject) {\n      alert(\"Please select the subject \")\n    }\n    else {\n      e.preventDefault()\n      const response = await fetch(\"http://localhost:4000/attendance/sem1\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'), //\n        },\n        body: JSON.stringify({\n          subject,\n          status,\n        }),\n      }).then(async (response) => {\n        let dataa = await response.json();\n        setsuccess(dataa.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n\n  }\n\n  return (\n    <>\n      <div className='height100vh'>\n        <div className=\"attendencebody\">\n          <Navbar />\n          <h1 className=\"atte1\">Sem-1 Attendance</h1>\n          {UnmeshShukla && <div className=\"mb-3 selectsubjectcontainer \">\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Algorithms And Data Structure\">\n                Algorithms and Data Structure\n              </option>\n            </select></div>}\n          {NitishaAgg && <div className=\"mb-3 selectsubjectcontainer\">\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Software Design & Programming\">\n                Software Design & Programming\n              </option>\n            </select></div>}\n          {MKDas && <div className=\"mb-3 selectsubjectcontainer\">\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Mathematical Foundation Of Computing\">\n                Mathematical Foundation of Computing\n              </option>\n            </select></div>}\n          {SunilKumar && <div className=\"mb-3 selectsubjectcontainer\">\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Computer System Architecture\">\n                Computer System Architecture\n              </option>\n            </select></div>}\n\n          <div className=\"table-1\">\n            <table className=\"table table-striped\">\n              <thead className=\"heading-1\">\n                <tr>\n                  <th>Student</th>\n                  <th>Present</th>\n                </tr>\n              </thead>\n              <tbody>\n                <List students={students} status={status} setstatus={setstatus} />\n              </tbody>\n            </table>\n          </div>\n          <div className=\"button-1\">\n            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={Submit}>Submit</button>\n          </div>\n        </div>\n        {success && <div className=\"container-fluid blacky\">\n          <div className=\"success\">\n            <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" /> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n            </svg>\n            </div>\n            <h4>Attendance Saved</h4>\n          </div>\n        </div>}\n      </div>\n    </>\n  );\n};\n\nexport default Sem_1;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_1..js",["468","469","470","471","472","473","474","475","476"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./classschedule.css\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport * as FaIcons from 'react-icons/fa';\n\n\n\nconst Sem_1 = () => {\n  //\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [SunilKumar, setSunilKumar] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n  const [isAlertVisible, setIsAlertVisible] = useState(false);\n  const [isdot, setIsdotVisible] = useState(false);\n  const[success,setsuccess] = useState(false)\n  const [empty,setempty]=useState(false)\n\n  // const handleButtonClick = () => {\n  //   setIsdotVisible(true);\n  //   setTimeout(() => {\n  //     setIsdotVisible(false);\n  //     setIsAlertVisible(true);\n  //   }, 2000);\n  // }\n\n  const sem = \"Sem-1\";\n\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduleclass', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Sunil Kumar\") {\n      setSunilKumar(true)\n    }\n  }\n\n  async function schedule(e) {\n\n    \n    if (subject && time && date) {\n      e.preventDefault() \n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        setwarning(data.warning)\n        setsuccess(data.success)\n        \n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n\n    }\n    else {\n      e.preventDefault()\n      if (!date) {\n        document.getElementById(\"date\").style.color = \"red\"\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000);\n\n\n      }\n      else {\n        document.getElementById(\"date\").style.color = \"black\"\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\n\n      }\n\n      if (!time) {\n        document.getElementById(\"time\").style.color = \"red\"\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n\n      else {\n        document.getElementById(\"time\").style.color = \"black\"\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\n      }\n\n\n      if (!subject) {\n\n        document.getElementById(\"subject\").style.borderColor = \"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n      else {\n        // document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor = \"black\"\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\n      }\n    }\n\n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate()\n\n      }\n    }\n  }, [])\n\n  return (\n    <>\n     <div className='height100vh'>\n      {/* <div>\n        {isdot && <div class=\"loader\"  >\n          <div class=\"pair p1\">\n            <div class=\"dot dot-1 \">\n\n\n            </div>\n            <div class=\"dot dot-2\">\n\n            </div>\n          </div>\n          <div class=\"pair p2\">\n            <div class=\"dot dot-1\">\n\n            </div>\n            <div class=\"dot dot-2\">\n\n            </div>\n          </div>\n        </div>}\n      </div> */}\n      <Navbar />\n      <form onSubmit={schedule}>\n        <div>\n          {/* popup */}\n          {isAlertVisible && <div className=\"popup center\">\n            <div class=\"icon\">\n              <i class=\"fa fa-check\"></i>\n            </div>\n            <div class=\"title\">\n              Success!!\n            </div>\n            <div class=\"description\">\n              class is scheduled successfully\n            </div>\n            <div class=\"dismiss-btn\">\n              <button id=\"dismiss-popup-btn\" onClick={() => setIsAlertVisible(false)}>\n                Dismiss\n              </button>\n            </div>\n          </div>}\n        </div>\n\n        {/* loading */}\n\n\n\n        <div className=\"mb-3 scheduledcontainer\" style={{ filter: isAlertVisible || isdot ? \"blur(3px)\" : \"none\", background: isAlertVisible ? \"#f1ebeb\" : \"none\" }} >\n\n\n          <div className=\" mb-3\">\n            <h1 className=\"class-1 mb-1\">Class Schedule</h1>\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Algorithms And Data Structure\">\n                  Algorithms and Data Structure\n                </option>\n              </select></div>}\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Software Design & Programming\">\n                  Software Design & Programming\n                </option>\n              </select></div>}\n            {MKDas && <div className=\"selectsubjectcontainer\">\n              <select\n                type=\"text\"\n                className=\"form-control mt-2 shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Mathematical Foundation Of Computing\">\n                  Mathematical Foundation of Computing\n                </option>\n              </select></div>}\n            {SunilKumar && <div className=\"selectsubjectcontainer\">\n              <select\n                type=\"text\"\n                className=\"form-control mt-2 shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Computer System Architecture\">\n                  Computer System Architecture\n                </option>\n              </select></div>}\n\n          </div>\n\n          <div className=\"abc-1\">\n            <div className=\"class-div\">\n              <label htmlFor=\"date\" className=\"class-form-label\" id=\"date\">Date:</label>\n              <input\n                type=\"date\"\n                className=\"class-form-control\"\n                id=\"date-1\"\n                aria-describedby=\"date\"\n                value={date}\n\n                onChange={(e) => setdate(e.target.value)}\n              />\n            </div >\n            <br />\n            <div className=\"time-div\">\n              <label htmlFor=\"time\" className=\"time-form-label \" id=\"time\">\n                Time:\n              </label>\n              <input\n                type=\"time\"\n                className=\"class-form-control\"\n                id=\"time-1\"\n                value={time}\n\n                onChange={(e) => settime(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"messagecontent\">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Message:\n            </label><br />\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Optional\"\n              value={message}\n              onChange={(e) => setmessage(e.target.value)}></textarea>\n          </div>\n\n          <div className=\"btn-class\">\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\"  >\n              Schedule Class\n            </button>\n          </div>\n         \n        </div>\n      </form>\n\n  {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Class scheduled successfully</h4>\n</div>\n      </div>}\n{warning && <><div className=\"container-fluid blacky\">\n </div>\n <div className=\"warningmain\" >\n\n <div className=\"warning\">\n    \n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\n\n    <p>{warning}</p>\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\n  </div>\n </div></>}\n </div>\n      \n    </>\n  )\n};\n\nexport default Sem_1;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_1.js",["477","478","479","480","481","482"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./testschedule.css\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport { useEffect, useState } from \"react\";\nimport jwt from 'jsonwebtoken'\nimport * as FaIcons from 'react-icons/fa';\nimport { useNavigate } from \"react-router-dom\"\nconst Sem_1 = () => {\n  //\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(false)\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [SunilKumar, setSunilKumar] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n   const[success,setsuccess] = useState(false)\n  const sem = \"Sem-1\";\n\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduletest', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    console.log(data)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Sunil Kumar\") {\n      setSunilKumar(true)\n    }\n  }\n\n\n  async function schedule(e) {\n    e.preventDefault();\n    if(subject && time && date)\n    {\n  \n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",//\n          \"Content-Type\": \"application/json\", //\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        setwarning(data.warning)\n        setsuccess(data.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    else {\n      e.preventDefault()\n       if(!date)\n       {\n        document.getElementById(\"date\").style.color=\"red\"\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000); \n      }\n      else\n      {\n        document.getElementById(\"date\").style.color=\"black\"\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\n      }\n      \n       if(!time)\n       {\n        document.getElementById(\"time\").style.color=\"red\"\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000); \n      }\n       else\n      {\n        document.getElementById(\"time\").style.color=\"black\"\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\n      }\n       \n      if (!subject )\n       {\n  \n        document.getElementById(\"subject\").style.borderColor=\"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n       }\n       else\n      {\n        document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor=\"black\"\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\n      }\n\n    \n\n  }\n\n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate()\n      }\n    }\n  }, [])\n\n  return (\n    <>\n    <div className='height100vh'>\n      <Navbar />\n      <form onSubmit={schedule}>\n        <div className=\" mb-3 scheduledcontainer\">\n          <h1 className=\"class-1\">Test Schedule</h1>\n          <div className=\" mb-3\">\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                \n                \n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Algorithms And Data Structure\">\n                  Algorithms and Data Structure\n                </option>\n              </select></div>}\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n              \n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Software Design & Programming\">\n                  Software Design & Programming\n                </option>\n              </select></div>}\n            {MKDas && <div className=\"selectsubjectcontainer\">\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n               \n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Mathematical Foundation Of Computing\">\n                  Mathematical Foundation of Computing\n                </option>\n              </select></div>}\n            {SunilKumar && <div className=\"selectsubjectcontainer\">\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n              \n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Computer System Architecture\">\n                  Computer System Architecture\n                </option>\n              </select></div>}\n\n         \n              </div>\n          <div className=\"abc-1\">\n            <div className=\"class-div\">\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\n                Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"class-form-control\"\n                id=\"date-1\"\n                aria-describedby=\"date\"\n                value={date}\n                onChange={(e) => setdate(e.target.value)}\n              />\n            </div>\n            <div className=\"time-div\">\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\n                Time:\n              </label>\n              <input\n                type=\"time\"\n                className=\"class-form-control\"\n                id=\"time-1\"\n                value={time}\n                onChange={(e) => settime(e.target.value)}\n              />\n            </div>\n          </div>\n          <div class=\"messagecontent\">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Message:\n            </label>\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Optional\"\n              value={message}\n              onChange={(e) => setmessage(e.target.value)}></textarea>\n          </div>\n          <div className=\"btn-class\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Schedule Test\n            </button>\n          </div>\n\n        </div>\n      </form>\n      {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Test scheduled successfully</h4>\n</div>\n      </div>}\n      {warning && <><div className=\"container-fluid blacky\">\n </div>\n <div className=\"warningmain\" >\n\n <div className=\"warning\">\n    \n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\n\n    <p>{warning}</p>\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\n  </div>\n </div></>}\n </div>\n    </>\n  );\n};\n\n\nexport default Sem_1;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_4.js",["483","484","485","486","487","488"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jwt from 'jsonwebtoken'\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport { useNavigate } from \"react-router-dom\"\nimport \"./classschedule.css\";\nimport * as FaIcons from 'react-icons/fa';\n\nconst Sem_4 = () => {\n  //\n  const navigate = useNavigate();\n\n  //\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Sanjeev, setSanjeev] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n  const [success, setsuccess] = useState(false)\n  const sem = \"Sem-4\";\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduleclass', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(true)\n    }\n\n  }\n\n  async function schedule(e) {\n\n    if (subject && time && date) {\n      e.preventDefault()\n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        setwarning(data.warning)\n        setsuccess(data.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    else {\n      e.preventDefault()\n      if (!date) {\n        document.getElementById(\"date\").style.color = \"red\"\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000);\n\n\n      }\n      else {\n        document.getElementById(\"date\").style.color = \"black\"\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\n\n      }\n\n      if (!time) {\n        document.getElementById(\"time\").style.color = \"red\"\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n\n      else {\n        document.getElementById(\"time\").style.color = \"black\"\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\n      }\n\n\n      if (!subject) {\n\n        document.getElementById(\"subject\").style.borderColor = \"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n      else {\n        // document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor = \"black\"\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\n      }\n    }\n\n  }\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate()\n\n      }\n    }\n  }, [])\n  return (\n    <>\n     <div className='height100vh'>\n      <Navbar />\n      <form onSubmit={schedule}>\n        <div className=\" mb-3 scheduledcontainer\">\n          <div className=\" mb-3\">\n            <h1 className=\"class-1\">Class Schedule</h1>\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Internet of Things Systems, Security and Cloud\">\n                  Internet of Things Systems, Security and Cloud\n                </option>\n              </select>\n            </div>}\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Health Informatics\">Health Informatics</option>\n              </select>\n            </div>}\n            {Sanjeev && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Dissertation Project\">Dissertation Project</option>\n              </select>\n            </div>}\n            {MKDas && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Research Methods in Informatics\">\n                  Research Methods in Informatics\n                </option>\n              </select>\n            </div>}\n\n          </div>\n\n          <div className=\"abc-1\">\n            <div className=\"class-div\">\n              <label htmlFor=\"date\" className=\"class-form-label\" id=\"date\">\n                Date\n              </label>\n              <input\n                type=\"date\"\n                className=\"class-form-control \"\n                id=\"date-1\"\n                aria-describedby=\"date\"\n                value={date}\n                onChange={(e) => setdate(e.target.value)}\n              />\n            </div>\n            <div className=\"time-div\">\n              <label htmlFor=\"time\" className=\"time-form-label\" id=\"time\">\n                time\n              </label>\n              <input\n                type=\"time\"\n                className=\"class-form-control\"\n                id=\"time-1\"\n                value={time}\n                onChange={(e) => settime(e.target.value)}\n              />\n            </div>\n          </div>\n          <div class=\"messagecontent\">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Message:\n            </label>\n            <textarea\n              type=\"text\"\n              class=\"class-form-control-1\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Optional\"\n              value={message}\n              onChange={(e) => setmessage(e.target.value)}></textarea>\n          </div>\n          <div className=\"btn-class\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Schedule Class\n            </button>\n          </div>\n\n        </div>\n      </form>\n      {success && <div className=\"container-fluid blacky\">\n        <div className=\"success\">\n          <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" /> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n          </svg>\n          </div>\n          <h4>Class scheduled successfully</h4>\n        </div>\n      </div>}\n      {warning && <><div className=\"container-fluid blacky\">\n      </div>\n        <div className=\"warningmain\" >\n\n          <div className=\"warning\">\n\n            <FaIcons.FaExclamationTriangle size={70} color='red' />\n\n            <p>{warning}</p>\n            <button className=\"okay\" onClick={() => setwarning(false)} >Okay</button>\n          </div>\n        </div></>}\n        </div>\n    </>\n  );\n};\n\nexport default Sem_4;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_3.js",["489","490","491","492","493","494"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./testschedule.css\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport { useEffect, useState } from \"react\";\nimport jwt from 'jsonwebtoken'\nimport * as FaIcons from 'react-icons/fa';\nimport { useNavigate } from \"react-router-dom\"\nconst Sem_3 = () => {\n  //\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Manish, setManish] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n   const[success,setsuccess] = useState(false)\n  const sem = \"Sem-3\";\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduletest', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    console.log(data)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Manish\") {\n      setManish(true)\n    }\n  }\n\n\n\n  async function schedule(e) {\n    e.preventDefault();\n    if(subject && time && date)\n    {\n  \n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",//\n          \"Content-Type\": \"application/json\", //\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        setwarning(data.warning)\n        setsuccess(data.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    else {\n      e.preventDefault()\n       if(!date)\n       {\n        document.getElementById(\"date\").style.color=\"red\"\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000);\n\n       }\n      else\n      {\n        document.getElementById(\"date\").style.color=\"black\"\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\n      }\n      \n       if(!time)\n       {\n        document.getElementById(\"time\").style.color=\"red\"\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n       else\n      {\n        document.getElementById(\"time\").style.color=\"black\"\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\n      }\n       \n      if (!subject )\n       {\n  \n        document.getElementById(\"subject\").style.borderColor=\"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n         setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n       }\n       else\n      {\n        // document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor=\"black\"\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\n      }\n\n    \n\n  }\n\n  }\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate()\n      }\n    }\n  }, [])\n\n  return (\n    <>\n    <div className='height100vh'>\n          <Navbar />\n      <form onSubmit={schedule}>\n        <div className=\" mb-3 scheduledcontainer\">\n        <h1 className=\"class-1\">Test Schedule</h1>\n          <div className=\" mb-3\">\n          {NitishaAgg && <div className=\"selectsubjectcontainer\">\n            \n            <select\n              type=\"text\"\n                className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value= \"\">Select Subject</option>\n              <option value=\"Information System Design\">\n                Information System Design\n              </option>\n            </select>\n          </div>}\n          {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n            \n            <select\n              type=\"text\"\n                className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value= \"\">Select Subject</option>\n              <option value=\"Cloud Computing\">Cloud Computing</option>\n            </select>\n          </div>}\n          {MKDas && <div className=\"selectsubjectcontainer\">\n            \n            <select\n              type=\"text\"\n                className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value= \"\">Select Subject</option>\n              <option value=\"Software Engineering\">Software Engineering</option>\n            </select>\n          </div>}\n          {Manish && <div className=\"selectsubjectcontainer\">\n            \n            <select\n              type=\"text\"\n                className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value= \"\">Select Subject</option>\n              <option value=\"IT Planning and Management\">\n                IT Planning and Management\n              </option>\n            </select>\n          </div>}\n        </div>\n          <div className=\"abc-1\">\n            <div className=\"class-div\">\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\n                Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"class-form-control\"\n                id=\"date-1\"\n                aria-describedby=\"date\"\n                value={date}\n                onChange={(e) => setdate(e.target.value)}\n              />\n            </div>\n            <div className=\"time-div\">\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\n                Time:\n              </label>\n              <input\n                type=\"time\"\n                className=\"class-form-control\"\n                id=\"time-1\"\n                value={time}\n                onChange={(e) => settime(e.target.value)}\n              />\n            </div>\n          </div>\n          <div class=\"messagecontent\">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Message:\n            </label>\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Optional\"\n              value={message}\n              onChange={(e) => setmessage(e.target.value)}></textarea>\n          </div>\n        <div className=\"btn-class\">\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Schedule Test\n        </button>\n        </div>\n    \n        </div>\n      </form>\n      {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Test scheduled successfully</h4>\n</div>\n      </div>}\n      {warning && <><div className=\"container-fluid blacky\">\n </div>\n <div className=\"warningmain\" >\n\n <div className=\"warning\">\n    \n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\n\n    <p>{warning}</p>\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\n  </div>\n </div></>}\n </div>\n    </>\n  );\n};\n\nexport default Sem_3;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_2.js",["495","496","497","498","499","500"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport \"./testschedule.css\";\nimport * as FaIcons from 'react-icons/fa';\n\nconst Sem_2 = () => {\n  //\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Sanjeev, setSanjeev] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n   const[success,setsuccess] = useState(false)\n  const sem = \"Sem-2\";\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduletest', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    console.log(data)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(false)\n    }\n  }\n\n  async function schedule(e) {\n    e.preventDefault();\n    if(subject && time && date)\n    {\n  \n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",//\n          \"Content-Type\": \"application/json\", //\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        setwarning(data.warning)\n        setsuccess(data.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    else {\n      e.preventDefault()\n       if(!date)\n       {\n        document.getElementById(\"date\").style.color=\"red\"\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000);\n        \n\n       }\n      else\n      {\n        document.getElementById(\"date\").style.color=\"black\"\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\n        \n      }\n      \n       if(!time)\n       {\n        document.getElementById(\"time\").style.color=\"red\"\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000);\n    \n      }\n       \n       else\n      {\n        document.getElementById(\"time\").style.color=\"black\"\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\n      }\n\n       \n      if (!subject )\n       {\n  \n        document.getElementById(\"subject\").style.borderColor=\"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n        \n       }\n       else\n      {\n        // document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor=\"black\"\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\n      }\n\n    \n\n  }\n\n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate()\n      }\n    }\n  }, [])\n\n  return (\n    <>\n    <div className='height100vh'>\n      <Navbar />\n      <form onSubmit={schedule}>\n        <div className=\" mb-3 scheduledcontainer\">\n          <h1 className=\"class-1\">Test Schedule</h1>\n          <div className=\" mb-3\">\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Computer Communication and Networks\">\n                  Computer Communication and Networks\n                </option>\n                <option value=\"Operating Systems\">Operating Systems</option>\n              </select></div>}\n\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Database Systems\">Database Systems</option>\n              </select></div>}\n\n            {MKDas && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Applied Machine Learning\">\n                  Applied Machine Learning\n                </option>\n              </select></div>}\n\n            {Sanjeev && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Open Elective-1\">Open Elective-1</option>\n              </select></div>}\n\n          </div>\n          <div className=\"abc-1\">\n            <div className=\"class-div\">\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\n                Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"class-form-control\"\n                id=\"date-1\"\n                aria-describedby=\"date\"\n                value={date}\n                onChange={(e) => setdate(e.target.value)}\n              />\n            </div>\n            <div className=\"time-div\">\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\n                Time:\n              </label>\n              <input\n                type=\"time\"\n                className=\"class-form-control\"\n                id=\"time-1\"\n                value={time}\n                onChange={(e) => settime(e.target.value)}\n              />\n            </div>\n          </div>\n          <div class=\"messagecontent\">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Message:\n            </label>\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Optional\"\n              value={message}\n              onChange={(e) => setmessage(e.target.value)}></textarea>\n          </div>\n          <div className=\"btn-class\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Schedule Test\n            </button>\n          </div>\n\n        </div>\n      </form>\n      {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Test scheduled successfully</h4>\n</div>\n      </div>}\n      {warning && <><div className=\"container-fluid blacky\">\n </div>\n <div className=\"warningmain\" >\n\n <div className=\"warning\">\n    \n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\n\n    <p>{warning}</p>\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\n  </div>\n </div></>}\n </div>\n    </>\n  );\n};\n\nexport default Sem_2;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_3.js",["501","502","503","504","505","506"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jwt from 'jsonwebtoken'\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport { useNavigate } from \"react-router-dom\"\nimport \"./classschedule.css\";\nimport * as FaIcons from 'react-icons/fa';\nconst Sem_3 = () => {\n  //\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Manish, setManish] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n   const[success,setsuccess] = useState(false)\n  const sem = \"Sem-3\";\n\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduleclass', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Manish\") {\n      setManish(true)\n    }\n  }\n\n  async function schedule(e) {\n\n\n    if (subject && time && date) {\n      e.preventDefault()\n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        setwarning(data.warning)\n        setsuccess(data.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    else {\n      e.preventDefault()\n      if (!date) {\n        document.getElementById(\"date\").style.color = \"red\"\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000);\n\n\n      }\n      else {\n        document.getElementById(\"date\").style.color = \"black\"\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\n\n      }\n\n      if (!time) {\n        document.getElementById(\"time\").style.color = \"red\"\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n\n      else {\n        document.getElementById(\"time\").style.color = \"black\"\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\n      }\n\n\n      if (!subject) {\n\n        document.getElementById(\"subject\").style.borderColor = \"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n      else {\n        // document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor = \"black\"\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\n      }\n    }\n  }\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate()\n\n      }\n    }\n  }, [])\n\n  return (\n    <>\n     <div className='height100vh'>\n      <Navbar />\n      <form onSubmit={schedule}>\n        <div className=\" mb-3 scheduledcontainer\">\n          <div className=\" mb-3\">\n            <h1 className=\"class-1\">Class Schedule</h1>\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Information System Design\">\n                  Information System Design\n                </option>\n              </select>\n            </div>}\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"Cloud Computing\">Cloud Computing</option>\n              </select>\n            </div>}\n            {MKDas && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option>Select Subject</option>\n                <option value=\"Software Engineering\">Software Engineering</option>\n              </select>\n            </div>}\n            {Manish && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value=\"\">Select Subject</option>\n                <option value=\"IT Planning and Management\">\n                  IT Planning and Management\n                </option>\n              </select>\n            </div>}\n\n          </div>\n          <div className=\"abc-1\">\n            <div className=\"class-div\">\n              <label htmlFor=\"date\" className=\"class-form-label\" id = \"date\">\n                Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"class-form-control\"\n                id=\"date-1\"\n                aria-describedby=\"date\"\n                value={date}\n                onChange={(e) => setdate(e.target.value)}\n              />\n            </div>\n            <div className=\"time-div\">\n              <label htmlFor=\"time\" className=\"time-form-label\" id = \"time\">\n                Time:\n              </label>\n              <input\n                type=\"time\"\n                className=\"class-form-control\"\n                id=\"time-1\"\n                value={time}\n                onChange={(e) => settime(e.target.value)}\n              />\n            </div>\n          </div>\n          <div class=\"messagecontent\">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Message:\n            </label>\n            <textarea\n              type=\"text\"\n              class=\"class-form-control-1\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Optional\"\n              value={message}\n              onChange={(e) => setmessage(e.target.value)}></textarea>\n          </div>\n\n          <div className=\"btn-class\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Schedule Class\n            </button>\n          </div>\n        </div>\n      </form>\n      {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Class scheduled successfully</h4>\n</div>\n      </div>}\n         {warning && <><div className=\"container-fluid blacky\">\n </div>\n <div className=\"warningmain\" >\n\n <div className=\"warning\">\n    \n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\n\n    <p>{warning}</p>\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\n  </div>\n </div></>}\n </div>\n    </>\n    \n  );\n};\n\nexport default Sem_3;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Class Schedule/Sem_2.js",["507","508","509","510","511","512"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport jwt from 'jsonwebtoken'\nimport \"./classschedule.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport { useNavigate } from \"react-router-dom\"\nimport * as FaIcons from 'react-icons/fa';\n\nconst Sem_2 = () => {\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Sanjeev, setSanjeev] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n  const [success, setsuccess] = useState(false)\n  const sem = \"Sem-2\";\n\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduleclass', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(false)\n    }\n  }\n\n\n  async function schedule(e) {\n\n    e.preventDefault();\n    if (subject && time && date) {\n\n      const req = await fetch(\"http://localhost:4000/scheduleclass\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        console.log(data);\n        setwarning(data.warning)\n        setsuccess(data.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    else {\n      e.preventDefault()\n      if (!date) {\n        document.getElementById(\"date\").style.color = \"red\"\n        document.getElementById(\"date-1\").style.borderColor = \"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000);\n\n\n      }\n      else {\n        document.getElementById(\"date\").style.color = \"black\"\n        document.getElementById(\"date-1\").style.borderColor = \"black\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"white\"\n\n      }\n\n      if (!time) {\n        document.getElementById(\"time\").style.color = \"red\"\n        document.getElementById(\"time-1\").style.borderColor = \"red\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n\n      else {\n        document.getElementById(\"time\").style.color = \"black\"\n        document.getElementById(\"time-1\").style.borderColor = \"black\"\n        document.getElementById(\"time-1\").style.backgroundColor = \"white\"\n      }\n\n\n      if (!subject) {\n\n        document.getElementById(\"subject\").style.borderColor = \"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n\n      }\n      else {\n        // document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor = \"black\"\n        document.getElementById(\"subject\").style.backgroundColor = \"white\"\n      }\n\n    }\n}\n//--------------------\nuseEffect(() => {\n  const token = localStorage.getItem('token')\n  if (token) {\n    const user = jwt.decode(token)\n    console.log(user)\n    if (!user) {\n      localStorage.removeItem('token')\n      navigate(\"/Teacherdashboard\");\n    } else {\n      populate()\n    }\n  }\n}, [])\n\nreturn (\n  <>\n   <div className='height100vh'>\n    <Navbar />\n    <form onSubmit={schedule}>\n      <div className=\" mb-3 scheduledcontainer\">\n        <div className=\"mb-3\">\n          <h1 className=\"class-1\">Class Schedule</h1>\n          {NitishaAgg && <div className=\"selectsubjectcontainer\">\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value=\"\">Select Subject</option>\n              <option value=\"Computer Communication and Networks\">\n                Computer Communication and Networks\n              </option>\n              <option value=\"Operating Systems\">Operating Systems</option>\n            </select></div>}\n\n          {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value=\"\">Select Subject</option>\n              <option value=\"Database Systems\">Database Systems</option>\n            </select></div>}\n\n          {MKDas && <div className=\"selectsubjectcontainer\">\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value=\"\">Select Subject</option>\n              <option value=\"Applied Machine Learning\">\n                Applied Machine Learning\n              </option>\n            </select></div>}\n\n          {Sanjeev && <div className=\"selectsubjectcontainer\">\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              onChange={(e) => setsubject(e.target.value)}>\n              <option value=\"\">Select Subject</option>\n              <option value=\"Open Elective-1\">Open Elective-1</option>\n            </select></div>}\n\n        </div>\n\n        <div className=\"abc-1\">\n          <div className=\"class-div\">\n            <label htmlFor=\"date\" className=\"class-form-label\" id = \"date\">\n              Date:\n            </label>\n            <input\n              type=\"date\"\n              className=\"class-form-control\"\n              id=\"date-1\"\n              aria-describedby=\"date\"\n              value={date}\n              onChange={(e) => setdate(e.target.value)}\n            />\n          </div>\n\n          <div className=\"time-div\">\n            <label htmlFor=\"time\" className=\"time-form-label\" id = \"time\">\n              Time:\n            </label>\n            <input\n              type=\"time\"\n              className=\"class-form-control\"\n              id=\"time-1\"\n              value={time}\n              onChange={(e) => settime(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div class=\"messagecontent\">\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n            Message:\n          </label>\n          <br />\n          <textarea\n            type=\"text\"\n            class=\"class-form-control-1\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"Optional\"\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}></textarea>\n        </div>\n\n        <div className=\"btn-class\">\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Schedule Class\n          </button>\n        </div>\n      </div>\n    </form>\n    {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Class scheduled successfully</h4>\n</div>\n      </div>}\n    {warning && <><div className=\"container-fluid blacky\">\n </div>\n <div className=\"warningmain\" >\n\n <div className=\"warning\">\n    \n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\n\n    <p>{warning}</p>\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\n  </div>\n </div></>}\n </div>\n  </>\n);\n};\n\nexport default Sem_2;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Test Schedule/Sem_4.js",["513","514","515","516","517","518"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./testschedule.css\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport { useEffect, useState } from \"react\";\nimport jwt from 'jsonwebtoken'\nimport * as FaIcons from 'react-icons/fa';\nimport { useNavigate } from \"react-router-dom\"\nconst Sem_4 = () => {\n  //\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [time, settime] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [warning, setwarning] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Sanjeev, setSanjeev] = useState(false)\n  const [teacher, setTeacher] = useState(\"\")\n   const[success,setsuccess] = useState(false)\n  const sem = \"Sem-4\";\n\n  //-----------\n  async function populate(e) {\n    const req = await fetch('http://localhost:4000/scheduletest', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'), //\n      },\n    })\n    const data = await req.json();\n    setTeacher(data.name)\n    console.log(data)\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(true)\n    }\n  }\n\n  async function schedule(e) {\n    e.preventDefault();\n    if (subject && time && date) {\n\n      const response = await fetch(\"http://localhost:4000/scheduletest\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",//\n          \"Content-Type\": \"application/json\", //\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          subject,\n          sem,\n          date,\n          time,\n          message,\n          teacher\n        }),\n      }).then(async (response) => {\n        let data = await response.json();\n        setwarning(data.warning)\n        setsuccess(data.success)\n      });\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    else {\n      e.preventDefault()\n       if(!date)\n       {\n        document.getElementById(\"date\").style.color=\"red\"\n        document.getElementById(\"date-1\").style.borderColor=\"red\"\n        document.getElementById(\"date-1\").style.backgroundColor = \"pink\"\n        document.getElementById(\"date-1\").classList.add(\"shaking\")\n        document.getElementById(\"date\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"date-1\").classList.remove(\"shaking\")\n          document.getElementById(\"date\").classList.remove(\"shaking\")\n        }, 1000);\n\n       }\n      else\n      {\n        document.getElementById(\"date\").style.color=\"black\"\n        document.getElementById(\"date-1\").style.borderColor=\"black\"\n        document.getElementById(\"date-1\").style.backgroundColor= \"white\"\n      }\n      \n       if(!time)\n       {\n        document.getElementById(\"time\").style.color=\"red\"\n        document.getElementById(\"time-1\").style.borderColor=\"red\"\n        document.getElementById(\"time-1\").style.backgroundColor=\"pink\"\n        document.getElementById(\"time-1\").classList.add(\"shaking\")\n        document.getElementById(\"time\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"time-1\").classList.remove(\"shaking\")\n          document.getElementById(\"time\").classList.remove(\"shaking\")\n        }, 1000);\n      }\n       else\n      {\n        document.getElementById(\"time\").style.color=\"black\"\n        document.getElementById(\"time-1\").style.borderColor=\"black\"\n        document.getElementById(\"time-1\").style.backgroundColor= \"white\"\n      }\n       \n      if (!subject )\n       {\n  \n        document.getElementById(\"subject\").style.borderColor=\"red\"\n        document.getElementById(\"subject\").style.backgroundColor = \"pink\"\n        document.getElementById(\"subject\").classList.add(\"shaking\")\n        setTimeout(() => {\n          document.getElementById(\"subject\").classList.remove(\"shaking\")\n        }, 1000);\n       }\n       else\n      {\n        // document.getElementById(\"subject\").style.color=\"black\"\n        document.getElementById(\"subject\").style.borderColor=\"black\"\n        document.getElementById(\"subject\").style.backgroundColor= \"white\"\n      }\n\n    \n\n  }\n\n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate()\n      }\n    }\n  }, [])\n\n  return (\n    <>\n      <Navbar />\n      <div className='height100vh'>\n      <form onSubmit={schedule}>\n        <div className=\" mb-3 scheduledcontainer\">\n          <h1 className=\"class-1\">Test Schedule</h1>\n          <div className=\" mb-3\">\n            {NitishaAgg && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Internet of Things Systems, Security and Cloud\">\n                  Internet of Things Systems, Security and Cloud\n                </option>\n              </select>\n            </div>}\n            {UnmeshShukla && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Health Informatics\">Health Informatics</option>\n              </select>\n            </div>}\n            {Sanjeev && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Dissertation Project\">Dissertation Project</option>\n              </select>\n            </div>}\n            {MKDas && <div className=\"selectsubjectcontainer\">\n\n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                <option value= \"\">Select Subject</option>\n                <option value=\"Research Methods in Informatics\">\n                  Research Methods in Informatics\n                </option>\n              </select>\n            </div>}\n          </div>\n          <div className=\"abc-1\">\n            <div className=\"class-div\">\n              <label htmlFor=\"date\" id=\"date\" className=\"class-form-label\">\n                Date:\n              </label>\n              <input\n                type=\"date\"\n                className=\"class-form-control\"\n                id=\"date-1\"\n                aria-describedby=\"date\"\n                value={date}\n                onChange={(e) => setdate(e.target.value)}\n              />\n            </div>\n            <div className=\"time-div\">\n              <label htmlFor=\"time\" id=\"time\" className=\"time-form-label\">\n                Time:\n              </label>\n              <input\n                type=\"time\"\n                className=\"class-form-control\"\n                id=\"time-1\"\n                value={time}\n                onChange={(e) => settime(e.target.value)}\n              />\n            </div>\n          </div>\n          <div class=\"messagecontent\">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Message:\n            </label>\n            <textarea type=\"text\" class=\"class-form-control-1\" id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              placeholder=\"Optional\"\n              value={message}\n              onChange={(e) => setmessage(e.target.value)}></textarea>\n          </div>\n          <div className=\"btn-class\">\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Schedule Test\n            </button>\n          </div>\n\n        </div>\n      </form>\n      {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Test scheduled successfully</h4>\n</div>\n      </div>}\n      {warning && <><div className=\"container-fluid blacky\">\n </div>\n <div className=\"warningmain\" >\n\n <div className=\"warning\">\n    \n        <FaIcons.FaExclamationTriangle size={70}  color='red'  />\n\n    <p>{warning}</p>\n    <button className=\"okay\" onClick={()=>setwarning(false)} >Okay</button>\n  </div>\n </div></>}\n </div>\n    </>\n  );\n};\n\nexport default Sem_4;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/Student_profile.js",["519","520"],"import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport \"./Student_profile.css\"\nimport Navbar from './Navbar'\nimport { useNavigate } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\n\nconst Profile = () => {\n\n    const navigate = useNavigate();\n    const [name, setName] = useState([])\n    const [rollNum, setRollNum] = useState([])\n    const [contactNum, setContactNum] = useState([])\n    const [email, setEmail] = useState([])\n    const [enrollNum, setEnrollNum] = useState([])\n\n    async function populatedashboard() {\n        const req = await fetch('http://localhost:4000/dashboard/profile', {\n            headers: {\n                'x-access-token': localStorage.getItem('token'),\n\n            },\n        })\n\n        const json = await req.json()\n\n        console.log(json)\n        if (json.status === 'ok') {\n            setName(json.name)\n            setEmail(json.email)\n            setEnrollNum(json.enrollNum)\n            setRollNum(json.rollNum)\n            setContactNum(json.contactNum)\n        }\n        else {\n            // alert(data.error)\n        }\n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const user = jwt.decode(token)\n            if (!user) {\n                localStorage.removeItem('token')\n                navigate(\"/\");\n            } else {\n                populatedashboard()\n            }\n        }\n    }, [name], [email])\n\n    return (\n        <div className='height100percent'>\n            <Navbar />\n            <h1 className='Teacherheading'>Student Profile</h1>\n            <div class=\"emp-profile\">\n                <div className='pblock'>\n                    <form method=\"post\">\n                        <div className='photo_block'>\n                            <div class=\"profile-img\">\n                                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog\" alt=\"\" />\n                            </div>\n                            <div class=\"profile-head\">\n                                <h2>\n                                    {name}\n                                </h2>\n                                <h4>\n                                    {enrollNum}\n                                </h4>\n                            </div>\n                        </div>\n                        <div class=\"teacherInfo\">\n                            <div className='keys'>\n                                <p>DOB </p>\n                                <p>Email: </p>\n                                <p>Phone: </p>\n                            </div>\n                            <div className='values'>\n                                <p>28/11/2000</p>\n                                <p>{email}</p>\n                                <p>123 456 7890</p>\n                            </div>\n                            <div className='teacherinfo2'>\n                                <p>DOB </p>\n                                <h6>28/11/2000</h6>\n                                <p>Email: </p>\n                                <h6>{email}</h6>\n                                <p>Phone: </p>\n                                <h6>{contactNum}</h6>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div className='text-center' id='prof_block'>\n                    <button id='butn' class=\"btn btn-primary\" onClick={() => {\n                        localStorage.removeItem('token')\n                        navigate(\"/\")\n                    }}>Logout</button>\n                    <Link to=\"/dashboard/changepassword\"><button id='butn' class=\"btn btn-primary-1\" >Reset Password</button></Link>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Profile","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/sem1.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/Notifications.js",["521","522"],"import React, { useEffect, useState } from 'react'\nimport './notifications.css'\nimport Navbar from './Navbar'\nconst Notifications = () => {\n    const [assignmentnotifications,setassignmentnotifications]=useState([])\n    const [classnotifications,setclassnotifications]=useState([])\n    const [testnotifications,settestnotifications]=useState([])\n    const [studymaterial,setstudymaterial]=useState([])\n\n    // const [testnotifications,settestnotifications]=useState([])\n    const fetchdata=async()=>{\n        const response1=await fetch(\"http://localhost:4000/notifications/assignment\", {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            }})\n            const json1 = await response1.json()\n            const array1= json1.data.reverse();\n            setassignmentnotifications(array1)\n        const response2=await fetch(\"http://localhost:4000/notifications/classes\", {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            }})\n            const json2 = await response2.json()\n            console.log(json2);\n              const array2= json2.data.reverse();\n            setclassnotifications(array2)\n        const response3=await fetch(\"http://localhost:4000/notifications/tests\", {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            }})\n            const json3 = await response3.json()\n            const array3= json3.data.reverse();\n            settestnotifications(array3)\n        }\n        useEffect(()=>{\n            fetchdata()\n        },[])\n  return (\n    <>\n    <Navbar/>\n    <div className='\"container notification\"'>\n     {assignmentnotifications.map((notification)=>{\n        const {teacher,subject,date} = notification\n         return(\n            <>\n            <div className='container noti'>\n                <h4>{teacher} has posted an assignment of {subject}</h4>\n                <p>{date}</p>\n            </div>\n            </>\n         )\n     })}\n     {classnotifications.map((notification)=>{\n        const {name,subject,date} = notification\n         return(\n            <>\n            <div className='container noti'>\n                <h4>{name} has scheduled a class of {subject} on {date}</h4>\n                <p>{date}</p>\n            </div>\n            </>\n         )\n     })}\n     {testnotifications.map((notification)=>{\n        const {name,subject,date} = notification\n         return(\n            <>\n            <div className='container noti'>\n                <h4>{name} has scheduled a test of {subject} on {date}</h4>\n                <p>{date}</p>\n            </div>\n            </>\n         )\n     })}\n    </div>\n    \n    </>\n  )\n}\n\nexport default Notifications\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Teacher_dashboard.js",["523","524"],"import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"./Navbar.js\";\nimport logo from \"./image.png\"\nimport \"./Teacher_dashboard.css\";\n\n\nconst Teacher_Dashboard = (props) => {\n    const [totalClasstaken, setTotalClasstaken] = useState([])\n    const [totalClassScheduled, setTotalClassScheduled] = useState([])\n    const [totalTestScheduled, setTotalTestScheduled] = useState([])\n    const [totalAssignments, setTotalAssignments] = useState([])\n    const [totalStudymaterial, setTotalStudymaterial] = useState([])\n    const navigate = useNavigate();\n    const [name, setName] = useState([])\n    const [email, setEmail] = useState([])\n\n    async function populatedashboard() {\n        const req = await fetch('http://localhost:4000/Teacherdashboard', {\n            headers: {\n                'x-access-token': localStorage.getItem('token'),\n\n            },\n        })\n\n        const json = await req.json()\n\n        console.log(json)\n        if (json.status === 'ok') {\n            setName(json.name)\n            setEmail(json.email)\n            setTotalClassScheduled(json.Classes_Scheduled)\n            setTotalClasstaken(json.Classes_taken_count)\n            setTotalTestScheduled(json.Test_Scheduled)\n            setTotalAssignments(json.Assignments_posted)\n            setTotalStudymaterial(json.Study_Material_posted)\n        }\n        else {\n            // alert(data.error)\n        }\n\n    }\n\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const user = jwt.decode(token)\n            if (!user) {\n                localStorage.removeItem('token')\n                navigate(\"/\");\n            } else {\n                populatedashboard()\n            }\n        }\n    }, [name], [email])\n\n    return (\n        <>\n            <div className='height100percent'>\n                <Navbar />\n                <div>\n                    <div className=\"flex dashboardcontent\">\n                        <div class=\"col main pt-5  dashboardbackground\">\n                            <div class=\"row mb-3 dashblockteacher\">\n                                <Link to='/scheduledclassreport'><div class=\"col-xl-3 col-sm-6 blockcolour\">\n                                    <h5 class=\"text-uppercase pt-3\">CLASS SCHEDULED</h5>\n                                    <h1 class=\"display-4\">{totalClassScheduled}</h1>\n                                </div></Link>\n                                <Link to='/scheduledtestreport'><div class=\"col-xl-3 col-sm-6 blockcolour\">\n                                    <h5 class=\"text-uppercase pt-3\">TEST SCHEDULED</h5>\n                                    <h1 class=\"display-4\">{totalTestScheduled}</h1>\n                                </div></Link>\n                                <Link to='/Teacherdashboard/assignmentreportteacher'><div class=\"col-xl-3 col-sm-6 blockcolour\">\n                                    <h5 class=\"text-uppercase pt-3\">ASSIGNMENTS POSTED</h5>\n                                    <h1 class=\"display-4\">{totalAssignments}</h1>\n                                </div></Link>\n                                <Link to='/Teacherdashboard/studymaterial'><div class=\"col-xl-3 col-sm-6 blockcolour\">\n                                    <h5 class=\"text-uppercase pt-3\">STUDY MATERIAL POSTED</h5>\n                                    <h1 class=\"display-4\">{totalStudymaterial}</h1>\n                                </div></Link>\n                                 \n                            </div>\n\n                            <div class=\"row overviewdatacontent\">\n                                <div class=\"col-lg-7 col-md-6 col-sm-12 datacontent flex\">\n\n                                    <div class=\"classinfo\">\n                                        <h5>Total classes Held</h5>\n                                        <h5>Total Tests</h5>\n                                        <h5>Total Study Material Uploaded</h5>\n                                    </div>\n                                    <div class=\"classinfoval\">\n                                        <h5>{totalClasstaken}</h5>\n                                        <h5>{totalTestScheduled}</h5>\n                                        <h5>{totalStudymaterial}</h5>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"profilecontent\"\n                            style={{\n                                display: props.show ? \"block\" : \"none\"\n                            }}>\n                            <br /><br />\n\n                        </div>\n                    </div>\n                </div >\n            </div>\n        </>\n    );\n\n}\n\nexport default Teacher_Dashboard\n\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Teacher_profile.js",["525","526"],"import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport \"./teacherprofile2.css\"\nimport Navbar from './Navbar'\nimport { useNavigate } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\nimport logo from './image.png'\n\nconst Teacher_Profile = () => {\n\n    const navigate = useNavigate();\n    const [name, setName] = useState([])\n    const [email, setEmail] = useState([])\n    const [teacher_id, setTeacher_id] = useState([])\n    const [contactNum, setContactNum] = useState([])\n\n    async function populatedashboard() {\n        const req = await fetch('http://localhost:4000/Teacherdashboard/profile', {\n            headers: {\n                'x-access-token': localStorage.getItem('token'),\n\n            },\n        })\n\n        const json = await req.json()\n\n        console.log(json)\n        if (json.status === 'ok') {\n            setName(json.name)\n            setEmail(json.email)\n            setTeacher_id(json.Teacher_id)\n            setContactNum(json.contactNum)\n        }\n        else {\n            // alert(data.error)\n        }\n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const user = jwt.decode(token)\n            if (!user) {\n                localStorage.removeItem('token')\n                navigate(\"/\");\n            } else {\n                populatedashboard()\n            }\n        }\n    }, [name], [email])\n\n    return (\n        <>\n            <div className=\"height100vh\">\n                <Navbar />\n                <h1 className='Teacherheading'>Teacher Profile</h1>\n                <div class=\"emp-profile\">\n                    <div className='pblock'>\n                        <form method=\"post\">\n                            <div className='photo_block'>\n                                <div class=\"profile-img\">\n                                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS52y5aInsxSm31CvHOFHWujqUx_wWTS9iM6s7BAm21oEN_RiGoog\" alt=\"\" />\n                                </div>\n                                <div class=\"profile-head\">\n                                    <h2>\n                                        {name}\n                                    </h2>\n                                    <h4>\n                                        {teacher_id}\n                                    </h4>\n                                </div>\n                            </div>\n                            <div class=\"teacherInfo\">\n                                <div className='keys'>\n                                    <p>User Id: </p>\n                                    <p>DOB </p>\n                                    <p>Email: </p>\n                                    <p>Phone: </p>\n                                </div>\n                                <div className='values'>\n                                    <p> {teacher_id}</p>\n                                    <p>28/11/2000</p>\n                                    <p>{email}</p>\n                                    <p>123 456 7890</p>\n                                </div>\n                                <div className='teacherinfo2'>\n                                    <p>User Id: </p>\n                                    <h6>{teacher_id}</h6>\n                                    <p>DOB </p>\n                                    <h6>28/11/2000</h6>\n                                    <p>Email: </p>\n                                    <h6>{email}</h6>\n                                    <p>Phone: </p>\n                                    <h6>{contactNum}</h6>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div className='text-center' id='prof_block'>\n                        <button id='butn' class=\"btn btn-primary\" onClick={() => {\n                            localStorage.removeItem('token')\n                            navigate(\"/\")\n                        }}>Logout</button>\n                        <Link to=\"/Teacherdashboard/changepassword\"><button id='butn' class=\"btn btn-primary-1\" >Reset Password</button></Link>\n                    </div>\n                </div>\n                {/* <div className='buttons'>\n                            <button onClick={() => {\n                                localStorage.removeItem('token')\n                                navigate(\"/\")\n                            }}>Logout</button>\n                            <button className=\"resetpass\"><Link to=\"/Teacherdashboard/changepassword\"><div>Reset Password</div></Link></button>\n                        </div> */}\n\n\n            </div>\n        </>\n    );\n\n}\n\nexport default Teacher_Profile","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/change_teacher_password.js",["527","528","529"],"import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\nimport \"./change_teach_password.css\"\nimport { FaIcons } from 'react-icons/fa';\n\n\nconst ChangeTeacherPassword = () => {\n\n  const [ifpasswordsame, setIfpasswordsame] = useState(false);\n  const [ifconfirmpassworddifferent, setIfconfirmpassworddifferent] = useState(false);\n\n  const navigate = useNavigate();\n  const [teacher_id, setTeacher_id] = useState([])\n  const [allpasswords, setAllpasswords] = useState({\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\"\n  })\n  const [errmsg, setErrmsg] = useState(\"\")\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setAllpasswords({\n      ...allpasswords,\n      [name]: value\n    })\n  }\n\n\n  async function updatepassword(e) {\n    e.preventDefault()\n\n    if (allpasswords.oldpassword === allpasswords.newpassword) {\n      setIfpasswordsame(true);\n      setIfconfirmpassworddifferent(false);\n      // setErrmsg(\"Old password and New password cannot be same\");\n    } else if (allpasswords.newpassword !== allpasswords.confirmpassword) {\n      // setErrmsg(\"Confirm password and new password must be same\");\n      setIfpasswordsame(false);\n      setIfconfirmpassworddifferent(true);\n    } else {\n      const req = await fetch('http://localhost:4000/Teacherdashboard/changepassword', {\n        method: \"PATCH\",\n        headers: {\n\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify(allpasswords),\n      }\n      )\n      const json = await req.json()\n      console.log(json)\n      if (json.status === 'ok') {\n        setTeacher_id(json.Teacher_id)\n      }\n      // console.log(teacher_id)\n      if (json) {\n        setErrmsg(\"\")\n        alert(\"Password updated successful\")\n        navigate(\"/loginteacher\");\n      }\n    }\n\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      }\n    }\n  }, [teacher_id])\n\n  return (\n    <>\n      <section className=\"wrapper \">\n\n        <div className=\"container pt-10\">\n          <div className=\"col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4 text-center\">\n            <form className=\"rounded bg-white shadow p-5\" >\n              <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Change Password</h3>\n\n              <label htmlFor=\"floatingInput\">Old Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  name=\"oldpassword\"\n                  placeholder=\"Old Password\"\n                  value={allpasswords.oldpassword}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingPassword\">New Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingPassword\"\n                  name=\"newpassword\"\n                  placeholder=\"New Password\"\n                  value={allpasswords.newpassword}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingConfirmPassword\">Confirm Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingConfirmPassword\"\n                  name=\"confirmpassword\"\n                  placeholder=\"Confirm Password\"\n                  value={allpasswords.confirmpassword}\n                  onChange={handleChange}\n\n                />\n              </div>\n              {\n                errmsg ? <h3 className='text-danger'>{errmsg}</h3> : \"\"\n              }\n\n              {ifpasswordsame && <div class=\"alertmessage\">\n                <i class='fa fa-exclamation-circle'></i> &nbsp;\n                Old password and New password cannot be same!\n              </div>}\n\n              {ifconfirmpassworddifferent && < div class=\"alertmessage\">\n                <i class='fa fa-exclamation-circle'></i> &nbsp;\n                Confirm password and new password must be same\n              </div>}\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary submi_btn w-100 my-4\"\n                onClick={updatepassword}\n              >\n                Update Password\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n\n}\n\nexport default ChangeTeacherPassword","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem1.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem2.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem3.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/sem4.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Teacherprofile2.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Notifications.js",["530"],"import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport List from './List'\nimport Navbar from './Navbar'\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\n\nconst Notifications = () => {\n    const navigate = useNavigate();\n    const[notification,setnotification]=useState(\"\")\n    const [teacher, setTeacher] = useState(\"\")\n\n\n    console.log(notification)\n    const fetchdata=async()=>{\n        const response = await fetch(\"http://localhost:4000/assignmentsubmit\", {\n      \n            method: \"GET\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n              'x-access-token': localStorage.getItem('token'), //\n            }})\n            const json = await response.json()\n            setnotification(json.data.reverse())\n            setTeacher(json.name)\n    }\n\n\n        useEffect(() => {\n     \n          const token = localStorage.getItem('token')\n          if (token) {\n            const user = jwt.decode(token)\n            console.log(user)\n            if (!user) {\n              localStorage.removeItem('token')\n              navigate(\"/Teacherdashboard\");\n            } else {\n              fetchdata()\n            }\n          }        \n        },[])\n        \n  return (\n    <>\n    <Navbar/>\n    <div className=\"container notification\">\n     {notification && <List notification={notification} teacher={teacher} />} \n     </div>\n    </>\n  )\n}\n\n\n\nexport default Notifications","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem2filters.js",["531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './List'\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport Navbar from '../Teacher_dashboard/Navbar';\nvar XLSX = require(\"xlsx\");\nconst Sem2filters = () => {\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(false)\n  const [date, setdate] = useState(false)\n  const [month, setmonth] = useState(false)\n  const [button, setbutton] = useState(false)\n  const [filter, setfilter] = useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const [monthval, setmonthval] = useState(\"\")\n  const [overall, setoverall] = useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const [report, setreport] = useState(false)\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Sanjeev, setSanjeev] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n\n  console.log(\"subject value :\", subject);\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem2\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    if (json.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (json.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (json.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (json.name == \"Sanjeev\") {\n      setSanjeev(true)\n    }\n    setstudent(json.data)\n\n    if (json.data.length != 0) {\n      setVisible(true)\n    }\n    else {\n      setString(\"No Attendance Report Available !\")\n    }\n    if (monthval) {\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      });\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n\n    else if (subjectval) {\n      let data1 = json.data.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data)\n    }\n\n  }\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  function handlechange(e) {\n\n    var val = e.target.value\n    setfilter(val)\n\n    if (val == \"overall\") {\n\n      setdate(false)\n      setmonth(false)\n      setsubject(false)\n   \n      setoverall(true)\n      setreport(false)\n      setdateval(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"date\") {\n      setdate(true)\n      setmonth(false)\n      setsubject(false)\n      setbutton(true)\n      setoverall(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"month\") {\n      setdate(false)\n      setmonth(true)\n      setsubject(false)\n      setbutton(true)\n      setoverall(\"\")\n      setdateval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"subject\") {\n      setdate(false)\n      setmonth(false)\n      setsubject(true)\n      setbutton(true)\n      setoverall(\"\")\n      setdateval(\"\")\n      setmonthval(\"\")\n    }\n  }\n \n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(student);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n    doc.text(heading, 20, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n\n  return (\n    <>\n       <div className='height100vh'>\n      <Navbar />\n      <div className=\" mb-3\">\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n        <div className=\"mb-3\" id='date_block1'>\n          {/* <label className=\"form-label\">Enter Date</label> */}\n          <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e) => setdateval(e.target.value)} />\n        </div>\n\n      </form>}\n      {month && <form>\n        <div className=\" mb-3\" id='date_block1'>\n          {/* <label className=\"form-label\">Select Month</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control-12\"\n            id=\"month\"\n            name=\"month\"\n            value={monthval}\n            onChange={(e) => setmonthval(e.target.value)}>\n            <option required>Select Month</option>\n            <option value=\"01\">\n              January\n            </option>\n            <option value=\"02\">\n              February\n            </option>\n            <option value=\"03\">\n              March\n            </option>\n            <option value=\"04\">\n              April\n            </option>\n            <option value=\"05\">\n              May\n            </option>\n            <option value=\"06\">\n              June\n            </option>\n          </select>\n        </div>\n      </form>}\n      {subject && NitishaAgg && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Computer Communication and Networks\">\n              Computer Communication and Networks\n            </option>\n            <option value=\"Operating Systems\">Operating Systems</option>\n\n          </select>\n        </div>\n      </form>}\n      {subject && UnmeshShukla && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option required>Select Subject</option>\n            <option value=\"Database Systems\">Database Systems</option>\n          </select>\n        </div>\n      </form>}\n      {subject && MKDas && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Applied Machine Learning\">\n              Applied Machine Learning\n            </option>\n\n          </select>\n        </div>\n      </form>}\n      {subject && Sanjeev && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Open Elective-1\">Open Elective-1</option>\n          </select>\n        </div>\n      </form>}\n\n\n      <div className='text-center'>\n        {button && <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\n      </div>\n      {visible && <div>\n        <h3 className='overall-1'>{heading}</h3>\n      </div>}\n      <div>{string}</div>\n      {visible && <div className='table-24 overflowxauto'>\n        <table className='table table-striped overflowxauto '>\n          <thead className='heading-2'>\n            <tr>\n              <th>Student</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Attendance Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List student={student} />\n          </tbody>\n        </table>\n      </div>}\n      {visible && <div className='text-center'>\n        <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n        <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n      </div>}\n      </div>\n    </>\n  )\n}\n\nexport default Sem2filters","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/student_dashboard.js",["547","548","549"],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem3filters.js",["550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './List'\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport Navbar from '../Teacher_dashboard/Navbar';\nvar XLSX = require(\"xlsx\");\nconst Sem3filters = () => {\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(false)\n  const [date, setdate] = useState(false)\n  const [month, setmonth] = useState(false)\n  const [button, setbutton] = useState(false)\n  const [filter, setfilter] = useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const [monthval, setmonthval] = useState(\"\")\n  const [overall, setoverall] = useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const [report, setreport] = useState(false)\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Manish, setManish] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem3\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    if (json.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (json.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (json.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (json.name == \"Manish\") {\n      setManish(true)\n    }\n    setstudent(json.data)\n\n    if (json.data.length != 0) {\n      setVisible(true)\n    }\n    else {\n      setString(\"No Attendance Report Available !\")\n\n    }\n\n    if (monthval) {\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      });\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n\n    else if (subjectval) {\n      let data1 = json.data.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data)\n    }\n\n  }\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  function handlechange(e) {\n    var val = e.target.value\n    setfilter(val)\n\n    if (val == \"overall\") {\n\n      setdate(false)\n      setmonth(false)\n      setsubject(false)\n      \n      setoverall(true)\n      setreport(false)\n      setdateval(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"date\") {\n      setdate(true)\n      setmonth(false)\n      setsubject(false)\n      setbutton(true)\n      setoverall(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"month\") {\n      setdate(false)\n      setmonth(true)\n      setsubject(false)\n      setbutton(true)\n      setoverall(\"\")\n      setdateval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"subject\") {\n      setdate(false)\n      setmonth(false)\n      setsubject(true)\n      setbutton(true)\n      setoverall(\"\")\n      setdateval(\"\")\n      setmonthval(\"\")\n    }\n  }\n  \n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(student);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n    doc.text(heading, 20, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n  return (\n    <>\n       <div className='height100vh'>\n      <Navbar />\n      <div className=\" mb-3\" >\n\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n        <div className=\"mb-3\" id='date_block1'>\n          {/* <label className=\"form-label\">Enter Date</label> */}\n          <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e) => setdateval(e.target.value)} />\n        </div>\n\n      </form>}\n      {month && <form>\n        <div className=\" mb-3\" id='date_block1'>\n          {/* <label className=\"form-label\">Select Month</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control-12 shadow-none\"\n            id=\"month\"\n            name=\"month\"\n            value={monthval}\n            onChange={(e) => setmonthval(e.target.value)}>\n            <option required>Select Month</option>\n            <option value=\"07\">\n              July\n            </option>\n            <option value=\"08\">\n              August\n            </option>\n            <option value=\"09\">\n              September\n            </option>\n            <option value=\"10\">\n              October\n            </option>\n            <option value=\"11\">\n              November\n            </option>\n            <option value=\"12\">\n              December\n            </option>\n          </select>\n        </div>\n      </form>}\n      {subject && NitishaAgg && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Information System Design\">\n              Information System Design\n            </option>\n\n\n          </select>\n        </div>\n      </form>}\n      {subject && UnmeshShukla && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Cloud Computing\">Cloud Computing</option>\n          </select>\n        </div>\n      </form>}\n      {subject && MKDas && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Software Engineering\">Software Engineering</option>\n\n          </select>\n        </div>\n      </form>}\n      {subject && Manish && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"IT Planning and Management\">\n              IT Planning and Management\n            </option>\n          </select>\n        </div>\n      </form>}\n\n      <div className='text-center'>\n        {button && <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\n      </div>\n      <div>{string}</div>\n      {visible && <>\n        <h3 className='overall-1'>{heading}</h3>\n      </>}\n      {visible && <>\n        <div className='table-24 overflowxauto'>\n          <table className='table table-striped overflowxauto'>\n            <thead className='heading-2'>\n              <tr>\n                <th>Student</th>\n                <th>Subject</th>\n                <th>Date</th>\n                <th>Attendance Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              <List student={student} />\n            </tbody>\n          </table>\n        </div>\n        <div className='text-center'>\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>\n      </>}\n      </div>\n    </>\n  )\n}\n\nexport default Sem3filters","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/classreport_student.js",["566","567","568","569","570"],"import React from 'react'\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport './scheduledclass.css';\nimport autoTable from 'jspdf-autotable';\nimport '../Student_dashboard/Navbar';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './list';\nimport Navbar from '../Student_dashboard/Navbar';\nvar XLSX = require(\"xlsx\");\n\nconst Classreport = () => {\n    const navigate = useNavigate();\n    const [classes,setClasses]=useState([]);\n    const newdate = new Date()\n    const monthval = newdate.getMonth()+1;\n    const day = newdate.getDate()\n    const year = newdate.getFullYear()\n    const fetchdata=async()=>{\n        const response=await fetch(\"http://localhost:4000/classschedule\", {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                'x-access-token': localStorage.getItem('token'), //\n            }})\n            const json = await response.json()\n            let data = json.data.filter((data)=>{\n              if((data.date.slice(8,10)>=day &&  data.date.slice(5,7)==monthval) || data.date.slice(5,7)>monthval || data.date.slice(0,5)>year  )\n              {\n                  return data\n              }\n             \n            })\n\n                setClasses(data.reverse())\n      }\n      useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n          const user = jwt.decode(token)\n          console.log(user)\n          if (!user) {\n            localStorage.removeItem('token')\n            navigate(\"/Teacherdashboard\");\n          } else {\n            fetchdata()\n    \n          }\n        }\n      }, [])\n  \n  const exporttoexcelhandler= () =>{\n     var wb = XLSX.utils.book_new(),\n     ws = XLSX.utils.json_to_sheet(classes);\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () =>{\n    const doc = new jsPDF()\n    doc.text(\"Overall Classes Scheduled\",70,10)\n    autoTable(doc, { html: '#mytable'})\n    doc.save('table.pdf')\n  };\n  return (\n   <>\n  <Navbar/>\n {<h1 className='text-center'>Overall Scheduled Classes </h1>}\n \n  <div className='tableblock'>\n    <table className='table table-striped overflowxauto' id='mytable'>\n      <thead className='heading-2'>\n        <tr>\n          <th>Professor</th>\n          <th>Subject</th>\n          <th>Date</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <tbody>\n      <List classes={classes} />\n      </tbody>\n    </table>\n  </div>\n  <div className='text-center'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>\n   </>\n  )\n}\n\nexport default Classreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/scheduleclassreport.js",["571","572","573","574"],"import React from 'react'\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport './scheduledclass.css';\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './list';\nimport Navbar from '../Teacher_dashboard/Navbar'\nvar XLSX = require(\"xlsx\");\n\nconst Classreport = () => {\n    const navigate = useNavigate();\n    const [classes, setClasses]=useState([]);\n    const [visible, setVisible] = useState(false)\n    const [string, setString] = useState(\"\")\n    const fetchdata=async()=>{\n        const response=await fetch(\"http://localhost:4000/scheduledclassreport\", {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                'x-access-token': localStorage.getItem('token'), //\n            }})\n            const json = await response.json()\n                setClasses(json.data.reverse())\n                if(json.data.length != 0)\n                {\n                  setVisible(true)\n                  setString(\"Overall Scheduled Classes \")\n                }else {\n                  setString(\"No Classes Scheduled !\")\n                }\n\n\n      }\n      useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n          const user = jwt.decode(token)\n          console.log(user)\n          if (!user) {\n            localStorage.removeItem('token')\n            navigate(\"/Teacherdashboard\");\n          } else {\n            fetchdata()\n    \n          }\n        }\n      }, [])\n  \n  const exporttoexcelhandler= () =>{\n     var wb = XLSX.utils.book_new(),\n     ws = XLSX.utils.json_to_sheet(classes);\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () =>{\n    const doc = new jsPDF()\n    doc.text(\"Overall Classes Scheduled\",70,10)\n    autoTable(doc, { html: '#mytable'})\n    doc.save('table.pdf')\n  };\n  return (\n   <div className='height100percent'>\n<Navbar />\n {<h1 className='text-center pt-3'>{string}</h1>}\n \n {visible && <div className='tableblock'>\n    <table className='table table-striped' id='mytable'>\n      <thead className='heading-2'>\n        <tr>\n          <th>Professor</th>\n          <th>Subject</th>\n          <th>Date</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <tbody>\n      <List classes={classes} />\n      </tbody>\n    </table>\n  </div>}\n  {visible && <div className='text-center'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>}\n   </div>\n  )\n}\n\nexport default Classreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/testreport_student.js",["575","576","577","578","579","580"],"import React from 'react'\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport './scheduletest.css';\nimport '../Student_dashboard/Navbar';\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './list';\nimport Navbar from '../Student_dashboard/Navbar';\nvar XLSX = require(\"xlsx\");\n\nconst Testreport = () => {\n  const navigate = useNavigate();\n  const [tests, setTests] = useState([]);\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const newdate = new Date()\n  const monthval = newdate.getMonth() + 1;\n  const day = newdate.getDate()\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/testschedule\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    let data = json.data.filter((data) => {\n      if (data.date.slice(5, 7) == monthval && data.date.slice(8, 10) >= day) {\n        return data\n      }\n      else if (data.date.slice(5, 7) > monthval) {\n        return data\n        \n      }\n    })\n\n    setTests(data.reverse())\n  }\n\nuseEffect(() => {\n  if(tests.length !=0){\n    setVisible(true)\n    setString(\"Overall Tests Scheduled\")\n  }else{\n    setString(\" No Tests Scheduled !\")\n  }\n},[tests])\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n\n      }\n    }\n  }, [])\n\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(tests);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    doc.text(\"Overall Tests Scheduled\", 70, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n  return (\n    <>\n     <div className='height100vh'>\n      <Navbar />\n\n      {<h1 className='text-center'>{string}</h1>}\n\n      {visible && <div className='tableblock overflowxauto'>\n        <table className='table table-striped overflow' id='mytable'>\n          <thead className='heading-2'>\n            <tr>\n              <th>Professor</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List tests={tests} />\n          </tbody>\n        </table>\n      </div>}\n      {visible && <div className='text-center'>\n        <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n        <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n      </div>}\n      </div>\n    </>\n  )\n}\n\nexport default Testreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/change_student_password.js",["581","582","583"],"import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport { Link } from \"react-router-dom\";\n\n\nconst ChangePassword = () => {\n\n  const [ifpasswordsame, setIfpasswordsame] = useState(false);\n  const [ifconfirmpassworddifferent, setIfconfirmpassworddifferent] = useState(false);\n\n  const navigate = useNavigate();\n  const [enrollNum, setEnrollNum] = useState([])\n  const [allpasswords, setAllpasswords] = useState({\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\"\n  })\n  // const [oldpassword, setOldpassword] = useState(\"\")\n  // const [newpassword, setNewpassword] = useState(\"\")\n  // const [confirmpassword, setConfirmpassword] = useState(\"\")\n  const [errmsg, setErrmsg] = useState(\"\")\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setAllpasswords({\n      ...allpasswords,\n      [name]: value\n    })\n  }\n\n\n  async function updatepassword(e) {\n    e.preventDefault()\n    if (allpasswords.oldpassword === allpasswords.newpassword) {\n      setIfpasswordsame(true);\n      setIfconfirmpassworddifferent(false);\n    } else if (allpasswords.newpassword !== allpasswords.confirmpassword) {\n      setIfpasswordsame(false);\n      setIfconfirmpassworddifferent(true);\n    } else {\n      const req = await fetch('http://localhost:4000/dashboard/changepassword', {\n        method: \"PATCH\",\n        headers: {\n\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'x-access-token': localStorage.getItem('token'),\n        },\n        body: JSON.stringify(allpasswords),\n      }\n      )\n      const json = await req.json()\n      console.log(json)\n      if (json.status === 'ok') {\n        setEnrollNum(json.enrollNum)\n      }\n      console.log(enrollNum)\n      if (json) {\n        setErrmsg(\"\")\n        alert(\"Password updated successful\")\n        navigate(\"/login\");\n      }\n    }\n\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      }\n    }\n  }, [enrollNum])\n\n  return (\n    <>\n      <section className=\"wrapper\">\n        <div className=\"container\">\n          <div className=\"col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4 text-center\">\n            <form className=\"rounded bg-white shadow p-5\">\n              <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Change Password</h3>\n\n              <label htmlFor=\"floatingInput\">Old Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  name=\"oldpassword\"\n                  placeholder=\"Old Password\"\n                  value={allpasswords.oldpassword}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingPassword\">New Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingPassword\"\n                  name=\"newpassword\"\n                  placeholder=\"New Password\"\n                  value={allpasswords.newpassword}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingConfirmPassword\">Confirm Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingConfirmPassword\"\n                  name=\"confirmpassword\"\n                  placeholder=\"Confirm Password\"\n                  value={allpasswords.confirmpassword}\n                  onChange={handleChange}\n\n                />\n              </div>\n              {/* {\n                errmsg ? <h3 className='text-danger'>{errmsg}</h3> : \"\"\n              } */}\n\n              {ifpasswordsame && <div class=\"alertmessage\">\n                <i class='fa fa-exclamation-circle'></i> &nbsp;\n                Old password and New password cannot be same!\n              </div>}\n\n              {ifconfirmpassworddifferent && < div class=\"alertmessage\">\n                <i class='fa fa-exclamation-circle'></i> &nbsp;\n                Confirm password and new password must be same\n              </div>}\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary submi_btn w-100 my-4\"\n                onClick={updatepassword}\n              >\n                Update Password\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n\n}\n\nexport default ChangePassword","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/semesterwise/Classreport_semester.js",["584","585","586","587","588","589","590","591","592","593","594","595","596"],"import React from 'react'\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport \"../Scheduledcommon.css\"\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from '../list';\nimport Navbar from \"../../Student_dashboard/Navbar\";\n\nvar XLSX = require(\"xlsx\");\n\nconst Classreport = () => {\n    const navigate = useNavigate();\n    const [classes,setClasses]=useState([]);\n    const newdate= new Date()\n    const monthval= newdate.getMonth()+1;\n    const day =newdate.getDate()\n    const [subject, setSubject] = useState(\"\")\n    const [sem1, setSem1] = useState(false)\n    const [sem2, setSem2] = useState(false)\n    const [sem3, setSem3] = useState(false)\n    const [sem4, setSem4] = useState(false)\n    const [report, setReport] = useState({})\n    const [visible, setVisible] = useState(false)\n    const [string, setString] = useState(\"\")\n    \n    const fetchdata=async()=>{\n        const response=await fetch(\"http://localhost:4000/classschedule\", {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                'x-access-token': localStorage.getItem('token'), //\n            }})\n            const json = await response.json()\n            setReport(json)\n      }\n\n      async function subjectupdate(e) {\n        setVisible(false)\n        setString(\"\")\n        e.preventDefault();\n    \n        console.log(subject)\n        console.log(report)\n\n        let data = report.data.filter((data)=>{\n          if(data.date.slice(5,7)==monthval && data.date.slice(8,10)>=day)\n          {\n              return data\n          }\n          else if(data.date.slice(5,7)>monthval)\n          {\n            return data\n          }\n        })\n        let data2 = data.filter((data) => {\n          if(data.subject == subject)\n          {\n            return data\n          }\n        })\n        console.log(data2)\n        if(data2.length!=0)\n        {\n          setVisible(true)\n        }\n        else{\n          setString(\"No Classes are scheduled !\")\n\n        }\n\n            setClasses(data2.reverse())    \n      }\n\n      useEffect(() =>{\n        if(report.sem == 'Sem-1')\n            {\n                setSem1(true)\n                console.log(\"This is sem1\",sem1)\n                \n            }\n\n            else if(report.sem == \"Sem-2\")\n            {\n                setSem2(true)\n                console.log(sem2)\n            }\n            else if(report.sem == \"Sem-3\")\n            {\n                setSem3(true)\n                console.log(sem3)\n            }\n            \n            else if(report.sem == \"Sem-4\")\n            {\n                setSem4(true)\n                console.log(sem4)\n            }\n          \n      },[report])\n\n      useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n          const user = jwt.decode(token)\n          console.log(user)\n          if (!user) {\n            localStorage.removeItem('token')\n            navigate(\"/Teacherdashboard\");\n          } else {\n            fetchdata()\n    \n          }\n        }\n      }, [])\n  \n  const exporttoexcelhandler= () =>{\n     var wb = XLSX.utils.book_new(),\n     ws = XLSX.utils.json_to_sheet(classes);\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () =>{\n    const doc = new jsPDF()\n    doc.text(\"Classes Scheduled\",70,10)\n    autoTable(doc, { html: '#mytable'})\n    doc.save('table.pdf')\n  };\n  return (\n   <div className='height100vh'>\n<Navbar />\n {<h1 className='text-center-1'>Scheduled Classes </h1>}\n <div className='rep_1 '>\n {sem1 && <div className='classrepcontainer'>\n  <form className='repform1' onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Algorithms And Data Structure\">\n                  Algorithms and Data Structure\n                </option>\n                <option value=\"Software Design & Programming\">\n                  Software Design & Programming\n                </option>\n                <option value=\"Mathematical Foundation Of Computing\">\n                  Mathematical Foundation of Computing\n                </option>\n                <option value=\"Computer System Architecture\">\n                  Computer System Architecture\n                </option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\n              Search\n            </button>\n    </form>\n  \n  </div>}\n  {sem2 && <div className='classrepcontainer'>\n    <form className='repform1' onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\n                <option value=\"Operating Systems\">Operating Systems</option>\n                <option value=\"Database Systems\">Database Systems</option>\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\n                <option value=\"Open Elective-1\">Open Elective-1</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n             Search\n            </button>\n    </form>\n  </div>}\n  {sem3 && <div className='classrepcontainer'>\n    <form className='repform1' onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Information System Design\">Information System Design</option>\n                <option value=\"Cloud Computing\">Cloud Computing</option>\n                <option value=\"Software Engineering\">Software Engineering</option>\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\n              Search\n            </button>\n    </form>\n  </div>}\n  {sem4 && <div className='classrepcontainer'>\n    <form className='repform1' onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\n                <option value=\"Health Informatics\">Health Informatics</option>\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n    </form>\n  </div>}\n  </div>\n  <div className='nothing_block'>{string}</div>\n  {visible && <div className='overflowxauto'>\n    <table className='table table-striped overflowxauto' id='mytable-1'>\n      <thead className='heading_1'>\n        <tr>\n          <th>Professor</th>\n          <th>Subject</th>\n          <th>Date</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <tbody>\n      <List classes={classes} />\n      </tbody>\n    </table>\n  </div>}\n  {visible && <div className='text-center  button_block8'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>}\n   </div>\n  )\n}\n\nexport default Classreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/semesterwise/Testreport_semester.js",["597","598","599","600","601","602","603","604","605","606","607","608","609"],"import React from 'react'\nimport { useState,useEffect,useRef,useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from '../list.js';\nimport \"../../Scheduled_Class_List/Scheduledcommon.css\";\nimport Navbar from \"../../Student_dashboard/Navbar\";\nvar XLSX = require(\"xlsx\");\n\nconst Testreport = () => {\n    const navigate = useNavigate();\n    const [tests,setTests]=useState([]);\n    const newdate= new Date()\n    const monthval= newdate.getMonth()+1;\n    const day =newdate.getDate()\n    const [subject, setSubject] = useState(\"\")\n    const [sem1, setSem1] = useState(false)\n    const [sem2, setSem2] = useState(false)\n    const [sem3, setSem3] = useState(false)\n    const [sem4, setSem4] = useState(false)\n    const [report, setReport] = useState({})\n    const [visible, setVisible] = useState(false)\n    const [string, setString] = useState(\"\")\n\n    const fetchdata=async()=>{\n        const response=await fetch(\"http://localhost:4000/testschedule\", {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                'x-access-token': localStorage.getItem('token'), //\n            }})\n            const json = await response.json()\n            setReport(json)\n      }\n\n      async function subjectupdate(e) {\n        setVisible(false)\n        setString(\"\")\n        e.preventDefault();\n        console.log(report)\n        let data = report.data.filter((data)=>{\n          if(data.date.slice(5,7)==monthval && data.date.slice(8,10)>=day)\n          {\n              return data\n          }\n          else if(data.date.slice(5,7)>monthval)\n          {\n            return data\n          }\n        })\n        let data2 = data.filter((data) => {\n          if(data.subject == subject)\n          {\n            return data\n          }\n        })\n        console.log(data2)\n\n            setTests(data2.reverse())\n            if(data2.length != 0)\n            {\n              setVisible(true)\n            }\n            else{\n              setString(\"No Tests are scheduled !\")\n\n            }\n    \n      }\n\n      useEffect(() =>{\n        if(report.sem == 'Sem-1')\n            {\n                setSem1(true)\n                console.log(\"This is sem1\",sem1)\n                \n            }\n\n            else if(report.sem == \"Sem-2\")\n            {\n                setSem2(true)\n                console.log(sem2)\n            }\n            else if(report.sem == \"Sem-3\")\n            {\n                setSem3(true)\n                console.log(sem3)\n            }\n            \n            else if(report.sem == \"Sem-4\")\n            {\n                setSem4(true)\n                console.log(sem4)\n            }\n          \n      },[report])\n\n      useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n          const user = jwt.decode(token)\n          console.log(user)\n          if (!user) {\n            localStorage.removeItem('token')\n            navigate(\"/dashboard\");\n          } else {\n            fetchdata()\n    \n          }\n        }\n      }, [])\n  \n  const exporttoexcelhandler= () =>{\n     var wb = XLSX.utils.book_new(),\n     ws = XLSX.utils.json_to_sheet(tests);\n     XLSX.utils.book_append_sheet(wb,ws,\"MySheet1\");\n     XLSX.writeFile(wb,\"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () =>{\n    const doc = new jsPDF()\n    doc.text(\"Tests Scheduled\",70,10)\n    autoTable(doc, { html: '#mytable'})\n    doc.save('table.pdf')\n  };\n  return (\n   <>\n    <div className='height100vh'>\n<Navbar />\n {<h1 className='text-center-1'>Scheduled Tests </h1>}\n <div className='rep_1 '>\n {sem1 && <div className='classrepcontainer'>\n  <form className='repform1' onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Algorithms And Data Structure\">\n                  Algorithms and Data Structure\n                </option>\n                <option value=\"Software Design & Programming\">\n                  Software Design & Programming\n                </option>\n                <option value=\"Mathematical Foundation Of Computing\">\n                  Mathematical Foundation of Computing\n                </option>\n                <option value=\"Computer System Architecture\">\n                  Computer System Architecture\n                </option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\n              Search\n            </button>\n    </form>\n  </div>}\n  {sem2 && <div className='classrepcontainer'>\n    <form onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n              className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\n                <option value=\"Operating Systems\">Operating Systems</option>\n                <option value=\"Database Systems\">Database Systems</option>\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\n                <option value=\"Open Elective-1\">Open Elective-1</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\n              Search\n            </button>\n    </form>\n  </div>}\n  {sem3 && <div className='classrepcontainer'>\n    <form onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n              className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Information System Design\">Information System Design</option>\n                <option value=\"Cloud Computing\">Cloud Computing</option>\n                <option value=\"Software Engineering\">Software Engineering</option>\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\n              Search\n            </button>\n    </form>\n  </div>}\n  {sem4 && <div className='classrepcontainer'>\n    <form onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n              className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\n                <option value=\"Health Informatics\">Health Informatics</option>\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\n              Search\n            </button>\n    </form>\n  </div>}\n  </div>\n  <div  className='nothing_block'>{string}</div>\n {visible && <div className='main overflowxauto'>\n    <table className='table table-striped overflowxauto' id='mytable-1'>\n      <thead className='heading_1'>\n        <tr>\n          <th>Professor</th>\n          <th>Subject</th>\n          <th>Date</th>\n          <th>Time</th>\n        </tr>\n      </thead>\n      <tbody>\n      <List tests={tests} />\n      </tbody>\n    </table>\n  </div>}\n\n{visible &&  <div className='text-center button_block8'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>}\n   </div>\n   </>\n  )\n}\n\nexport default Testreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance Report/attendancestudent.js",["610","611","612","613","614","615","616","617","618","619","620","621","622"],"import React from 'react'\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport './attendance_report.css'\nimport List from './list2';\nimport Navbar from \"../Student_dashboard/Navbar\";\n\nvar XLSX = require(\"xlsx\");\n\nconst Attendancereport = () => {\n  const navigate = useNavigate();\n  const [student, setstudent] = useState([]);\n  const [attendmaterial,setAttendmaterial]=useState([]);\n  var [string, setString] = useState(\"Overall Attendance Report\")\n  const [sem1, setSem1] = useState(false)\n  const [sem2, setSem2] = useState(false)\n  const [sem3, setSem3] = useState(false)\n  const [sem4, setSem4] = useState(false)\n  const [subject, setSubject] = useState(\"\")\n  const [semester, setSemester] = useState(\"\")\n  const [visible, setVisible] = useState(true)\n\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/dashboard\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n        setSemester(json.semester)\n        setstudent(json.attend.reverse())\n        setAttendmaterial(json.attend)\n  }\n\n  async function subjectupdate(e) {\n    e.preventDefault();\n    setVisible(false)\n    console.log(student)\n    if(subject != \"overall\")\n      setString(\"Subject-wise Attendance Report : \"+ subject)\n\n    let data = student.filter((data) => {\n      if(data.subject == subject)\n      {\n        return data\n      }\n    })\n    console.log(data)\n\n    setAttendmaterial(data)\n    if(data.length!=0)\n    {\n      setVisible(true)\n    }else{\n      setString(\"No Attendance Report Available\")\n    }\n    if(subject == \"overall\")\n    {\n      setAttendmaterial(student)\n      setVisible(true)\n      setString(\"Overall Attendance Report\")\n    }\n\n  }\n  useEffect(() =>{\n    if(semester == 'Sem-1')\n        {\n            setSem1(true)\n            console.log(\"This is sem1\",sem1)\n            \n        }\n\n        else if(semester == \"Sem-2\")\n        {\n            setSem2(true)\n            console.log(sem2)\n        }\n        else if(semester == \"Sem-3\")\n        {\n            setSem3(true)\n            console.log(sem3)\n        }\n        \n        else if(semester == \"Sem-4\")\n        {\n            setSem4(true)\n            console.log(sem4)\n        }\n      \n  },[student])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n\n      }\n    }\n  }, [])\n\n  console.log(attendmaterial);\n\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(attendmaterial);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    doc.text(\"Overall Attendance\", 70, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n\n  return (\n    <>\n       <div className='height100vh'>\n    <Navbar />\n      {sem1 && <div className='classrepcontainer' id='sem-23'>\n  <form className='repform1' onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n            className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value='overall'>Overall</option>\n                <option value=\"Algorithms And Data Structure\">\n                  Algorithms and Data Structure\n                </option>\n                <option value=\"Software Design & Programming\">\n                  Software Design & Programming\n                </option>\n                <option value=\"Mathematical Foundation Of Computing\">\n                  Mathematical Foundation of Computing\n                </option>\n                <option value=\"Computer System Architecture\">\n                  Computer System Architecture\n                </option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n             Search\n            </button>\n    </form>\n  </div>}\n  {sem2 && <div className='classrepcontainer'>\n    <form onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n            className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value='overall'>Overall</option>\n                <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\n                <option value=\"Operating Systems\">Operating Systems</option>\n                <option value=\"Database Systems\">Database Systems</option>\n                <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\n                <option value=\"Open Elective-1\">Open Elective-1</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n             Search\n            </button>\n    </form>\n  </div>}\n  {sem3 && <div className='classrepcontainer'>\n    <form onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n            className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value='overall'>Overall Attendance</option>\n                <option value=\"Information System Design\">Information System Design</option>\n                <option value=\"Cloud Computing\">Cloud Computing</option>\n                <option value=\"Software Engineering\">Software Engineering</option>\n                <option value=\"IT Planning and Management\">IT Planning and Management</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n    </form>\n  </div>}\n  {sem4 && <div className='classrepcontainer'>\n    <form onSubmit={subjectupdate}>\n    <select\n                type=\"text\"\n            className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                required\n                onChange={(e) => setSubject(e.target.value)}>\n                <option required>Select Subject</option>\n                <option value='overall'>Overall</option>\n                <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\n                <option value=\"Health Informatics\">Health Informatics</option>\n                <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\n              </select>\n              <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n    </form>\n  </div>}\n    {<h3 className='text-center' id='string-12'>{string}</h3>}\n    \n     {visible && <div className='overflowxauto'>\n        <table className='table table-striped overflowxauto' id='mytable-2'>\n          <thead className='heading-2'>\n            <tr>\n                    \n                <th>subject</th>\n                <th>Date</th>\n                <th>Attendance Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List attendmaterial={attendmaterial} />\n          </tbody>\n        </table>\n      </div>}\n\n    {visible && <div className='text-center  button_block8'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>}\n   </div>\n    </>\n  )\n}\n\nexport default Attendancereport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem1filters.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './List'\nimport jsPDF from \"jspdf\";\nimport Navbar from '../Teacher_dashboard/Navbar';\nimport autoTable from 'jspdf-autotable';\nimport './filters.css'\n\nvar XLSX = require(\"xlsx\");\nconst Sem1filters = () => {\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(false)\n  const [date, setdate] = useState(false)\n  const [month, setmonth] = useState(false)\n  const [button, setbutton] = useState(false)\n  const [filter, setfilter] = useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const [monthval, setmonthval] = useState(\"\")\n  const [overall, setoverall] = useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const [report, setreport] = useState(false)\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [SunilKumar, setSunilKumar] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n\n  console.log(\"subject status :\", subject);\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem1\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    console.log(json.name);\n    if (json.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (json.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (json.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (json.name == \"Sunil Kumar\") {\n      setSunilKumar(true)\n    }\n    setstudent(json.data)\n\n    if (json.data.length != 0) {\n      setVisible(true)\n    }\n    else {\n      setString(\"No Attendance Report Available !\")\n    }\n\n    if (monthval) {\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      });\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n\n    else if (subjectval) {\n      let data1 = json.data.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data)\n    }\n\n  }\n \n  function handlechange(e) {\n    var val = e.target.value\n    setfilter(val)\n\n    if (val == \"overall\") {\n\n      setdate(false)\n      setmonth(false)\n      setsubject(false)\n      setbutton(true)\n      setoverall(true)\n      setreport(false)\n      setdateval(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"date\") {\n      setdate(true)\n      setmonth(false)\n      setsubject(false)\n      setbutton(true)\n      setreport(false)\n      setoverall(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"month\") {\n      setdate(false)\n      setmonth(true)\n      setsubject(false)\n      setbutton(true)\n      setreport(false)\n      setoverall(\"\")\n      setdateval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"subject\") {\n      setdate(false)\n      setmonth(false)\n      setsubject(true)\n      setbutton(true)\n      setreport(false)\n      setoverall(\"\")\n      setdateval(\"\")\n      setmonthval(\"\")\n    }\n  }\n\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(student);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n    doc.text(heading, 20, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n\n  return (\n    <>\n       <div className='height100vh'>\n      <div className=\" mb-3\" >\n        <Navbar />\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n        <div className=\"mb-3\" id='date_block1' >\n          {/* <label className=\"form-label\">Enter Date</label> */}\n          <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e) => setdateval(e.target.value)} />\n        </div>\n\n      </form>}\n      {month && <form>\n        <div className=\" mb-3\" id='date_block1'>\n          {/* <label className=\"form-label\">Select Month</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control-12\"\n            id=\"month\"\n            name=\"month\"\n            value={monthval}\n            onChange={(e) => setmonthval(e.target.value)}>\n            <option required>Select Month</option>\n            <option value=\"07\">\n              July\n            </option>\n            <option value=\"08\">\n              August\n            </option>\n            <option value=\"09\">\n              September\n            </option>\n            <option value=\"10\">\n              October\n            </option>\n            <option value=\"11\">\n              November\n            </option>\n            <option value=\"12\">\n              December\n            </option>\n          </select>\n        </div>\n      </form>}\n      {subject && NitishaAgg && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option required>Select Subject</option>\n            <option value=\"Software Design & Programming\">\n              Software Design & Programming\n            </option>\n          </select>\n        </div>\n      </form>}\n      {subject && UnmeshShukla && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option required>Select Subject</option>\n            <option value=\"Algorithms And Data Structure\">\n              Algorithms and Data Structure\n            </option>\n          </select>\n        </div>\n      </form>}\n      {subject && MKDas && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option required>Select Subject</option>\n\n            <option value=\"Mathematical Foundation Of Computing\">\n              Mathematical Foundation of Computing\n            </option>\n\n          </select>\n        </div>\n      </form>}\n      {subject && SunilKumar && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option required>Select Subject</option>\n            <option value=\"Computer System Architecture\">\n              Computer System Architecture\n            </option>\n          </select>\n        </div>\n      </form>}\n\n      <div className='text-center'>\n        {button && <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\n      </div>\n      {visible && <div>\n        <h3 className='overall-1'>{heading}</h3>\n\n      </div>}\n      <div>{string}</div>\n      {visible && <>\n        <div className='table-24 overflowxauto'>\n          <table className='table table-striped overflowxauto'>\n            <thead className='heading-2'>\n              <tr>\n                <th>Student</th>\n                <th>Subject</th>\n                <th>Date</th>\n                <th>Attendance Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              <List student={student} />\n            </tbody>\n          </table>\n        </div>\n        <div className='text-center'>\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>\n      </>}\n      </div>\n    </>\n  )\n}\n\nexport default Sem1filters","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/scheduletestreport.js",["639","640","641","642"],"import React from 'react'\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport './scheduletest.css';\nimport { useNavigate } from \"react-router-dom\"\nimport List from './list';\nimport Navbar from \"../Teacher_dashboard/Navbar\";\n\nvar XLSX = require(\"xlsx\");\n\nconst Testreport = () => {\n  const navigate = useNavigate();\n  const [tests, setTests] = useState([]);\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  console.log(tests);\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/scheduledtestreport\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    setTests(json.data)\n    if (json.data.length != 0) {\n      setVisible(true)\n      setString(\"Overall Scheduled Tests \")\n    }else{\n      setString(\"No Tests Scheduled ! \")\n    }\n\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        fetchdata()\n\n      }\n    }\n  }, [])\n\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(tests);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    doc.text(\"Overall Tests Scheduled\", 70, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n  return (\n    <>\n      <Navbar />\n      {<h1 className='text-center'>{string}</h1>}\n\n     {visible && <div className='tableblock overflowxauto'>\n        <table className='table table-striped overflowxauto' id='mytable'>\n          <thead className='heading-2'>\n            <tr>\n              <th>Professor</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List tests={tests} />\n          </tbody>\n        </table>\n        <div className='text-center'>\n          <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>\n      </div>}\n    </>\n  )\n}\n\nexport default Testreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/assignmentreport_student.js",["643","644","645"],"import React from 'react'\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport '../Scheduled_Class_List/Scheduledcommon.css';\nimport './assignment_report.css'\nimport List from './list';\nimport Navbar from \"../Student_dashboard/Navbar\";\n\n\nvar XLSX = require(\"xlsx\");\n\nconst Assignmentreport = () => {\n  const navigate = useNavigate();\n  const [assignments, setAssignments] = useState([]);\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/assignmentreportstudent\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n        setAssignments(json.data.reverse())\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n\n      }\n    }\n  }, [])\n\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(assignments);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    doc.text(\"Overall Assignments Posted\", 70, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n  return (\n    <>\n<Navbar />\n      {<h1 className='text-center-1'>Overall Assignments Posted </h1>}\n\n      <div className='overflowxauto'>\n        <table className='table table-striped overflowxauto' id='mytable-5'>\n          <thead className='heading_1'>\n            <tr>\n              <th>Date</th>\n              <th>Professor</th>\n              <th>Subject</th>\n              <th>Deadline</th>\n              <th>Assignment</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List assignments={assignments}  />\n          </tbody>\n        </table>\n      </div>\n\n      <div className='text-center'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>\n    </>\n  )\n}\n\nexport default Assignmentreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/teacher_studymaterial.js",["646","647","648","649"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport autoTable from 'jspdf-autotable';\nimport '../Scheduled_Class_List/scheduledclass.css'\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './list';\nvar XLSX = require(\"xlsx\");\n\nconst Studymaterial_report = () => {\n  const navigate = useNavigate();\n  const [material, setMaterial] = useState([]);\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  console.log(material);\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/studymaterial_teacher\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    setMaterial(json.data)\n    console.log(json)\n    if (json.data.length != 0) {\n      setVisible(true)\n      setString(\"Study Material Posted \")\n    } else {\n      setString(\"No Study Material Posted !\")\n    }\n\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        fetchdata()\n\n      }\n    }\n  }, [])\n\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(material);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    doc.text(\"Overall Tests Scheduled\", 70, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n  return (\n    <>\n      <div className='height100vh'>\n        <Navbar />\n        {<h1 className='text-center pt-3'>{string} </h1>}\n        {visible && <div className='overflowxauto'>\n          <table className='table table-striped overflowxauto' id='mytable-5'>\n            <thead className='heading-2'>\n              <tr>\n                <th>Professor</th>\n                <th>Subject</th>\n                <th>Semester</th>\n                <th>File</th>\n              </tr>\n            </thead>\n            <tbody>\n              <List material={material} />\n            </tbody>\n          </table>\n        </div>}\n\n        {/* {visible && <div className='text-center'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>} */}\n      </div>\n    </>\n  )\n}\n\nexport default Studymaterial_report","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/semesterwise/Assignmentreport_semester.js",["650","651","652","653","654","655","656","657","658","659","660","661","662"],"import React from 'react'\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport \"../../Scheduled_Class_List/Scheduledcommon.css\";\nimport List from './list';\nimport Navbar from \"../../Student_dashboard/Navbar\";\n\nvar XLSX = require(\"xlsx\");\nlet user;\nconst Assignmentreport = () => {\n  const navigate = useNavigate();\n  const [assignments, setAssignments] = useState([]);\n  const [subject, setSubject] = useState(\"\")\n  const [sem1, setSem1] = useState(false)\n  const [sem2, setSem2] = useState(false)\n  const [sem3, setSem3] = useState(false)\n  const [sem4, setSem4] = useState(false)\n  const [report, setReport] = useState({})\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [success,setsuccess]=useState(false)\n  const newdate = new Date()\n  const monthval = newdate.getMonth() + 1;\n  const day = newdate.getDate()\n  const year = newdate.getFullYear()\n  const [files, setfile] = useState({_id: \"\", name: \"\"})\n  const [removefileid, setremovefileid] = useState(\"\")\n  const [temp, setTemp] = React.useState({id: \"\", name: \"\"})\n  const [assignment_id,setassignment_id]=useState(\"\")\n  const [check,setcheck]=useState([])\n  // console.log(\"check value : \",check)\n  const fetchdata = async () => {\n\n    const response1 = await fetch(\"http://localhost:4000/assignmentreportstudent\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json1 = await response1.json()\n    console.log(\"json 1 : \",json1.data)\n    setReport(json1)\n      fetchd()\n    \n\n  }\n\n  \n\n    const fetchd = async()=>{\n const response2 = await fetch(\"http://localhost:4000/assignmentsubmited\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n     const json2 = await response2.json()\n     setcheck(json2.data)\n    }\n    console.log(\"check data\",check)\n    if(check)\n    {\n       check.map((x)=> {\n       if(document.getElementById(x.assignment_id))\n       {\n                document.getElementById(x.assignment_id).innerHTML=\"Submitted ✅\" \n              document.getElementById(x.assignment_id).style.backgroundColor=\"#abffab\"\n         \n       }\n      }\n       )\n            \n    }\n\n\n\n  async function subjectupdate(e) {\n    setVisible(false)\n    setString(\"\")\n    e.preventDefault();\n\n    let data = report.data.filter((data) => {\n      if (((data.deadline.slice(8, 10) >= day && data.deadline.slice(5, 7) == monthval) || data.deadline.slice(5, 7) > monthval || data.deadline.slice(0, 5) > year) && (data.subject == subject)) {\n        return data\n      }\n\n    })\n\n    setAssignments(data.reverse())\n    if (data.length != 0) {\n      setVisible(true)\n    }\n    else {\n      setString(\"No Assignments Posted !\")\n\n    }\n\n  }\n\n  useEffect(() => {\n    if (report.sem == 'Sem-1') {\n      setSem1(true)\n\n    }\n\n    else if (report.sem == \"Sem-2\") {\n      setSem2(true)\n    }\n    else if (report.sem == \"Sem-3\") {\n      setSem3(true)\n    }\n\n    else if (report.sem == \"Sem-4\") {\n      setSem4(true)\n    }\n\n  }, [report])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    }\n  }, [])\n  const AssignmentSubmit = async (e, _id) => {\n    e.preventDefault()\n    console.log(\"this is user\", user);\n    const response = await fetch(\"http://localhost:4000/assignmentsubmit\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        assignment_id,\n        files: localStorage.getItem(_id),\n        enrollNum: user.enrollNum,\n        subject\n      })\n    })\n     const data = await response.json();\n     if(data.success)\n     {\n      fetchd()\n      document.getElementById(_id).innerHTML=\"Submitted ✅\";\n      document.getElementById(_id).style.backgroundColor=\"#81ffc487\";\n      localStorage.removeItem(_id)\n      setremovefileid(_id)\n      setTemp(\"\")\n     }\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n      }, 2500);\n  }\n\n  return (\n    <>\n      <div className='height100vh'>\n        <Navbar />\n        {<h1 className='text-center-1'>Assignments Posted </h1>}\n        {sem1 && <div className='classrepcontainer'>\n          <form className='repform1' onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              // onClick={()=>fetchd()}\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Algorithms And Data Structure\">\n                Algorithms and Data Structure\n              </option>\n              <option value=\"Software Design & Programming\">\n                Software Design & Programming\n              </option>\n              <option value=\"Mathematical Foundation Of Computing\">\n                Mathematical Foundation of Computing\n              </option>\n              <option value=\"Computer System Architecture\">\n                Computer System Architecture\n              </option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n          </form>\n        </div>}\n        {sem2 && <div className='classrepcontainer'>\n          <form className='repform1' onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              // onClick={()=>fetchd()}\n              value={subject}\n              required\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\n              <option value=\"Operating Systems\">Operating Systems</option>\n              <option value=\"Database Systems\">Database Systems</option>\n              <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\n              <option value=\"Open Elective-1\">Open Elective-1</option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n          </form>\n        </div>}\n        {sem3 && <div className='classrepcontainer'>\n          <form className='repform1' onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Information System Design\">Information System Design</option>\n              <option value=\"Cloud Computing\">Cloud Computing</option>\n              <option value=\"Software Engineering\">Software Engineering</option>\n              <option value=\"IT Planning and Management\">IT Planning and Management</option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12' >\n              Search\n            </button>\n          </form>\n        </div>}\n        {sem4 && <div className='classrepcontainer'>\n          <form className='repform1' onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\n              <option value=\"Health Informatics\">Health Informatics</option>\n              <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n          </form>\n        </div>}\n        <div className='nothing_block'>{string}</div>\n        {visible && <div classname=\"main\" id=\"mytableblock-1\">\n          <table className='table table-striped' id='mytable-1'>\n            <thead className='heading_1'>\n              <tr>\n                <th>Date</th>\n                <th>Professor</th>\n                <th>Subject</th>\n                <th>Deadline</th>\n                <th>Assignment</th>\n                <th>Upload</th>\n              </tr>\n            </thead>\n            <tbody>\n              <List key={assignments.id} assignments={assignments} files={files} setfile={setfile} AssignmentSubmit={AssignmentSubmit} removefileid={removefileid} setremovefileid={setremovefileid} temp={temp} setTemp={setTemp} setassignment_id={setassignment_id} />\n            </tbody>\n          </table>\n        </div>}\n      </div>\n      {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Assignment Submitted</h4>\n</div>\n      </div>}\n    </>\n  )\n}\n\nexport default Assignmentreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem1.js",["663","664","665","666","667","668","669"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport './study.css'\n\nfunction UploadStudyMaterialSem1() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [deadline, setdeadline] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [SunilKumar, setSunilKumar] = useState(false);\n  const[success,setsuccess]=useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Sunil Kumar\") {\n      setSunilKumar(true);\n    }\n  }\n\n  async function Upload() {\n    if(!subject)\n    {\n      alert(\"Please select the subject\")\n    }\n    else if(!file)\n    {\n      alert(\"Please upload a file\")\n    }\n    else\n    {\n\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          semester: \"Sem-1\",\n          teacher,\n          description,\n        }),\n      });\n  \n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      },2500);\n    }\n   \n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n    <div className=\"uploadassignmentbody\">\n      <Navbar />\n      <div className=\"uploadheading\">\n        <h1>Upload Studymaterial</h1>\n      </div>\n      <div className=\"uploadassignmentcontent\">\n        {UnmeshShukla && (\n          <div>\n            \n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Algorithms And Data Structure\">\n                Algorithms and Data Structure\n              </option>\n            </select>\n          </div>\n        )}\n        {NitishaAgg && (\n          <div>\n            \n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Software Design & Programming\">\n                Software Design & Programming\n              </option>\n            </select>\n          </div>\n        )}\n        {MKDas && (\n          <div>\n            <label className=\"form-label\">Select Subject</label>\n            <select\n              type=\"text\"\n              className=\"form-control mt-2 shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Mathematical Foundation Of Computing\">\n                Mathematical Foundation of Computing\n              </option>\n            </select>\n          </div>\n        )}\n        {SunilKumar && (\n          <div>\n            <label className=\"form-label\">Select Subject</label>\n            <select\n              type=\"text\"\n              className=\"form-control mt-2 shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Computer System Architecture\">\n                Computer System Architecture\n              </option>\n            </select>\n          </div>\n        )}\n\n        {/* upload file */}\n\n        <div className=\"file-card\">\n          <div className=\"file-inputs\">\n            <input\n              type=\"file\"\n              value={file}\n              onChange={(e) => setFile(e.target.value)}\n            />\n            <button>Select File</button>\n          </div>\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\n          <div className=\"infocontent\">\n            <p className=\"main\">Supported files</p>\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\n          </div>\n        </div>\n\n        \n\n        {/* text box */}\n\n        <div class=\"mb-3 mt-4\">\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n            Discription\n          </label>\n          <textarea\n            class=\"form-control\"\n            placeholder=\"optional\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}></textarea>\n        </div>\n\n        {/* submit button */}\n\n        <div className=\"text-center\">\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\n            Post\n          </button>\n        </div>\n      </div>\n    </div>\n   {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Study Material Posted</h4>\n</div>\n      </div>}\n    </>\n  );\n}\n\nexport default UploadStudyMaterialSem1;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/Sem4filters.js",["670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685"],"import React from 'react'\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './List'\nimport jsPDF from \"jspdf\";\nimport Navbar from '../Teacher_dashboard/Navbar';\nimport autoTable from 'jspdf-autotable';\n\nvar XLSX = require(\"xlsx\");\nconst Sem4filters = () => {\n  const navigate = useNavigate();\n  const [subject, setsubject] = useState(false)\n  const [date, setdate] = useState(false)\n  const [month, setmonth] = useState(false)\n  const [button, setbutton] = useState(false)\n  const [filter, setfilter] = useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const [monthval, setmonthval] = useState(\"\")\n  const [overall, setoverall] = useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const [report, setreport] = useState(false)\n  const [UnmeshShukla, setUnmeshShukla] = useState(false)\n  const [NitishaAgg, setNitishaAgg] = useState(false)\n  const [MKDas, setMKDas] = useState(false)\n  const [Sanjeev, setSanjeev] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem4\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    if (json.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true)\n    }\n    if (json.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true)\n    }\n    if (json.name == \"M.K Das\") {\n      setMKDas(true)\n    }\n    if (json.name == \"Sanjeev\") {\n      setSanjeev(true)\n    }\n    setstudent(json.data)\n    if (json.data.length != 0) {\n      setVisible(true)\n    }\n    else {\n      setString(\"No Attendance Report Available !\")\n    }\n\n    if (monthval) {\n      let data1 = json.data.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      });\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n\n    else if (subjectval) {\n      let data1 = json.data.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data)\n    }\n\n  }\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  function handlechange(e) {\n    var val = e.target.value\n    setfilter(val)\n\n    if (val == \"overall\") {\n\n      setdate(false)\n      setmonth(false)\n      setsubject(false)\n      \n      setoverall(true)\n      setreport(false)\n      setdateval(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"date\") {\n      setdate(true)\n      setmonth(false)\n      setsubject(false)\n      setbutton(true)\n      setoverall(\"\")\n      setmonthval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"month\") {\n      setdate(false)\n      setmonth(true)\n      setsubject(false)\n      setbutton(true)\n      setoverall(\"\")\n      setdateval(\"\")\n      setsubjectval(\"\")\n    }\n    if (val == \"subject\") {\n      setdate(false)\n      setmonth(false)\n      setsubject(true)\n      setbutton(true)\n      setoverall(\"\")\n      setdateval(\"\")\n      setmonthval(\"\")\n    }\n  }\n \n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(student);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n    doc.text(heading, 20, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n  return (\n    <>\n       <div className='height100vh'>\n      <Navbar />\n      <div className=\" mb-3\" >\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n        <div className=\"mb-3\" id='date_block1'>\n          {/* <label className=\"form-label\">Enter Date</label> */}\n          <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e) => setdateval(e.target.value)} />\n        </div>\n\n      </form>}\n      {month && <form>\n        <div className=\" mb-3\" id='date_block1'>\n          {/* <label className=\"form-label\">Select Month</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control-12\"\n            id=\"month\"\n            name=\"month\"\n            value={monthval}\n            onChange={(e) => setmonthval(e.target.value)}>\n            <option required>Select Month</option>\n            <option value=\"01\">\n              January\n            </option>\n            <option value=\"02\">\n              February\n            </option>\n            <option value=\"03\">\n              March\n            </option>\n            <option value=\"04\">\n              April\n            </option>\n            <option value=\"05\">\n              May\n            </option>\n            <option value=\"06\">\n              June\n            </option>\n          </select>\n        </div>\n      </form>}\n      {subject && NitishaAgg && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Internet of Things Systems, Security and Cloud\">\n              Internet of Things Systems, Security and Cloud\n            </option>\n\n\n          </select>\n        </div>\n      </form>}\n      {subject && UnmeshShukla && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Health Informatics\">Health Informatics</option>\n          </select>\n        </div>\n      </form>}\n      {subject && MKDas && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Software Engineering\">Software Engineering</option>\n\n          </select>\n        </div>\n      </form>}\n      {subject && Sanjeev && <form>\n        <div className=\"selectsubjectcontainer\">\n          {/* <label className=\"form-label\">Select Subject</label> */}\n          <select\n            type=\"text\"\n            className=\"form-control shadow-none\"\n            id=\"subject\"\n            name=\"subject\"\n            value={subjectval}\n            onChange={(e) => setsubjectval(e.target.value)}>\n            <option>Select Subject</option>\n            <option value=\"Dissertation Project\">Dissertation Project</option>\n          </select>\n        </div>\n      </form>}\n\n      <div className='text-center'>\n        {button && <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\n      </div>\n      <div>{string}</div>\n      {visible && <>\n        <h3 className='overall-1'>{heading}</h3>\n        <div className='table-24 overflowxauto'>\n          <table className='table table-striped overflowxauto'>\n            <thead className='heading-2'>\n              <tr>\n                <th>Student</th>\n                <th>Subject</th>\n                <th>Date</th>\n                <th>Attendance Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              <List student={student} />\n            </tbody>\n          </table>\n        </div>\n        <div className='text-center'>\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>\n      </>}\n      </div>\n    </>\n  )\n}\n\nexport default Sem4filters","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem3.js",["686","687","688","689","690"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport './study.css'\n\nfunction UploadStudyMaterialSem3() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [Manish, setManish] = useState(false);\n  const[success,setsuccess]=useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Manish\") {\n      setManish(true);\n    }\n  }\n\n  async function Upload() {\n    if(!subject)\n    {\n      alert(\"Please select the subject\")\n    }\n    else if(!file)\n    {\n      alert(\"Please upload a file\")\n    }\n    else\n    {\n\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          semester: \"Sem-3\",\n          teacher,\n          description,\n        }),\n      });\n  \n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      },2500);\n    }\n   \n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n    <div className=\"uploadassignmentbody\">\n      <Navbar />\n      <div className=\"uploadheading\">\n        <h1>Upload Studymaterial</h1>\n      </div>\n      <div className=\"uploadassignmentcontent\">\n        <div className=\" mb-3\">\n          {NitishaAgg && (\n            <div>\n             \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"Information System Design\">\n                  Information System Design\n                </option>\n              </select>\n            </div>\n          )}\n          {UnmeshShukla && (\n            <div>\n             \n              <select\n                type=\"text\"\n                className=\"form-control\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"Cloud Computing\">Cloud Computing</option>\n              </select>\n            </div>\n          )}\n          {MKDas && (\n            <div>\n             \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"Software Engineering\">\n                  Software Engineering\n                </option>\n              </select>\n            </div>\n          )}\n          {Manish && (\n            <div>\n             \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"IT Planning and Management\">\n                  IT Planning and Management\n                </option>\n              </select>\n            </div>\n          )}\n        </div>\n\n        {/* upload file */}\n\n        <div className=\"file-card\">\n          <div className=\"file-inputs\">\n            <input\n              type=\"file\"\n              value={file}\n              onChange={(e) => setFile(e.target.value)}\n            />\n            <button>Select File</button>\n          </div>\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\n          <div className=\"infocontent\">\n            <p className=\"main\">Supported files</p>\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\n          </div>\n        </div>\n\n        {/* text box */}\n\n        <div class=\"mb-3 mt-4\">\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n            Discription\n          </label>\n          <textarea\n            class=\"form-control\"\n            placeholder=\"optional\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}></textarea>\n        </div>\n\n        {/* submit button */}\n\n        <div className=\"text-center\">\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\n            Post\n          </button>\n        </div>\n      </div>\n    </div>\n    {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Study Material Posted</h4>\n</div>\n      </div>}\n      </>\n  );\n}\n\nexport default UploadStudyMaterialSem3;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem4.js",["691","692","693","694","695"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport './study.css'\n\nfunction UploadStudyMaterialSem4() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [Sanjeev, setSanjeev] = useState(false);\n  const[success,setsuccess]=useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(true);\n    }\n  }\n\n  async function Upload() {\n    if(!subject)\n    {\n      alert(\"Please select the subject\")\n    }\n    else if(!file)\n    {\n      alert(\"Please upload a file\")\n    }\n    else\n    {\n\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          semester: \"Sem-4\",\n          teacher,\n          description,\n        }),\n      });\n  \n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      },2500);\n    }\n   \n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n    <div className=\"uploadassignmentbody\">\n      <Navbar />\n      <div className=\"uploadheading\">\n        <h1>Upload Studymaterial</h1>\n      </div>\n      <div className=\"uploadassignmentcontent\">\n        <div className=\" mb-3\">\n          {NitishaAgg && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                     <option>Select Subject</option>\n                <option value=\"Internet of Things Systems, Security and Cloud\">\n                  Internet of Things Systems, Security and Cloud\n                </option>\n              </select>\n            </div>\n          )}\n          {UnmeshShukla && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                     <option>Select Subject</option>\n                <option value=\"Health Informatics\">Health Informatics</option>\n              </select>\n            </div>\n          )}\n          {Sanjeev && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                     <option>Select Subject</option>\n                <option value=\"Dissertation Project\">\n                  Dissertation Project\n                </option>\n              </select>\n            </div>\n          )}\n          {MKDas && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                     <option>Select Subject</option>\n                <option value=\"Research Methods in Informatics\">\n                  Research Methods in Informatics\n                </option>\n              </select>\n            </div>\n          )}\n        </div>\n\n        {/* upload file */}\n\n        <div className=\"file-card\">\n          <div className=\"file-inputs\">\n            <input\n              type=\"file\"\n              value={file}\n              onChange={(e) => setFile(e.target.value)}\n            />\n            <button>Select File</button>\n          </div>\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\n          <div className=\"infocontent\">\n            <p className=\"main\">Supported files</p>\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\n          </div>\n        </div>\n\n        {/* text box */}\n\n        <div class=\"mb-3 mt-4\">\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n            Discription\n          </label>\n          <textarea\n            class=\"form-control\"\n            placeholder=\"optional\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}></textarea>\n        </div>\n\n        {/* submit button */}\n\n        <div className=\"text-center\">\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\n            Post\n          </button>\n        </div>\n      </div>\n    </div>\n    {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Study Material Posted</h4>\n</div>\n      </div>}\n      </>\n  );\n}\n\nexport default UploadStudyMaterialSem4;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem1.js",["696","697","698","699","700"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport \"./upload_assignment.css\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UploadAssignmentsem1() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [deadline, setdeadline] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [SunilKumar, setSunilKumar] = useState(false);\n  const[success,setsuccess]=useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Sunil Kumar\") {\n      setSunilKumar(true);\n    }\n  }\n\n  async function Upload(e) {\n    if (!subject) {\n      alert(\"Please select the subject\")\n    }\n    else if (!file) {\n      alert(\"Please upload a file\")\n    }\n    else {\n      e.preventDefault()\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          deadline,\n          semester: \"Sem-1\",\n          teacher,\n          description,\n        }),\n      });\n\n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n    \n\n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n    <div className=\"uploadassignmentbody\">\n      <Navbar />\n      <div className=\"uploadheading\">\n        <h1>Upload Assignment</h1>\n      </div>\n\n      <div className=\"uploadassignmentcontent\">\n        {UnmeshShukla && (\n          <div>\n\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Algorithms And Data Structure\">\n                Algorithms and Data Structure\n              </option>\n            </select>\n          </div>\n        )}\n        {NitishaAgg && (\n          <div>\n\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Software Design & Programming\">\n                Software Design & Programming\n              </option>\n            </select>\n          </div>\n        )}\n        {MKDas && (\n          <div>\n\n            <select\n              type=\"text\"\n              className=\"form-control mt-2 shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Mathematical Foundation Of Computing\">\n                Mathematical Foundation of Computing\n              </option>\n            </select>\n          </div>\n        )}\n        {SunilKumar && (\n          <div>\n\n            <select\n              type=\"text\"\n              className=\"form-control mt-2 shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setsubject(e.target.value)}>\n              <option>Select Subject</option>\n              <option value=\"Computer System Architecture\">\n                Computer System Architecture\n              </option>\n            </select>\n          </div>\n        )}\n\n        <div className=\"mb-3 \" id=\"deadline_block\">\n          <label className=\"form-label deadline\">Deadline</label>\n          <input\n            type=\"date\"\n            className=\"time_block12\"\n            value={deadline}\n            onChange={(e) => setdeadline(e.target.value)}\n          />\n        </div>\n        {/* upload file */}\n\n        <div className=\"file-card\">\n          <div className=\"file-inputs\">\n            <input type=\"file\" value={file} onChange={(e) => setFile(e.target.value)} />\n            <button>Select File</button>\n          </div>\n          {file && <div className=\"fileuploaddisplay\">{file}</div>}\n          <div className=\"infocontent\">\n            <p className=\"main\">Supported files</p>\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\n          </div>\n        </div>\n\n\n        {/* text box */}\n\n        <div class=\"mb-3 mt-4 descriptionbody\">\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n            Discription\n          </label>\n          <textarea\n            class=\"form-control\"\n            placeholder=\"optional\"\n            id=\"text-area\"\n            rows=\"3\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}></textarea>\n        </div>\n        <div className=\"text-center\">\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\n            Submit\n          </button>\n        </div>\n\n        {/* submit button */}\n\n\n      </div>\n    </div>\n{success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Assignment Posted</h4>\n</div>\n      </div>}\n    </>\n  );\n}\n\nexport default UploadAssignmentsem1;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/teacher_assignment_report.js",["701","702","703","704","705","706","707","708","709"],"import React from 'react'\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport \"../Scheduled_Class_List/scheduledclass.css\";\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport { Navigate, useNavigate } from \"react-router-dom\"\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport List from './list';\nimport { Link } from \"react-router-dom\";\nvar XLSX = require(\"xlsx\");\n\nconst Assignmentreport = ({setassid}) => {\n  const navigate = useNavigate();\n  const [assignments, setAssignments] = useState([]);\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/assignmentreportteacher\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    setAssignments(json.data.reverse())\n    if (json.data.length != 0) {\n      setVisible(true)\n      setString(\"Assignments Posted \")\n    }else{\n      setString(\"No Assignments Posted !\")\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/Teacherdashboard\");\n      } else {\n        fetchdata()\n      }\n    }\n  }, [])\n  \n  function handleclick(e){\n    setassid(e.target.value)\n    navigate(\"/Teacherdashboard/submissions\")\n  }\n  return (\n    <>\n    <div className='height100vh'>\n  <Navbar />\n      {<h1 className='text-center pt-3'>{string}</h1>}\n\n    {visible && <div className='tableblock'>\n        <table className='table table-striped' id='mytable'>\n          <thead className='heading-2'>\n            <tr>\n              <th>Date</th>\n              <th>Professor</th>\n              <th>Subject</th>\n              <th>Deadline</th>\n              <th>Assignment</th>\n              <th>Submissions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List assignments={assignments} handleclick={handleclick} />\n          </tbody>\n        </table>\n      </div>}\n      </div>\n    </>\n  )\n}\n\nexport default Assignmentreport","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem2.js",["710","711","712","713","714"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport \"./upload_assignment.css\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UploadAssignmentsem2() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [deadline, setdeadline] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [Sanjeev, setSanjeev] = useState(false);\n  const [success, setsuccess] = useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(false);\n    }\n  }\n\n  async function Upload() {\n    if (!subject) {\n      alert(\"Please select the subject\")\n    }\n    else if (!file) {\n      alert(\"Please upload a file\")\n    }\n    else {\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          deadline,\n          semester: \"Sem-2\",\n          teacher,\n          description,\n        }),\n      });\n\n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n\n  }\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n      <div className=\"uploadassignmentbody\">\n        <Navbar />\n        <div className=\"uploadheading\">\n          <h1>Upload Assignment</h1>\n        </div>\n\n        <div className=\"uploadassignmentcontent\">\n          <div className=\" mb-3\">\n            {NitishaAgg && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Computer Communication and Networks\">\n                    Computer Communication and Networks\n                  </option>\n                  <option value=\"Operating Systems\">Operating Systems</option>\n                </select>\n              </div>\n            )}\n\n            {UnmeshShukla && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Database Systems\">Database Systems</option>\n                </select>\n              </div>\n            )}\n\n            {MKDas && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Applied Machine Learning\">\n                    Applied Machine Learning\n                  </option>\n                </select>\n              </div>\n            )}\n\n            {Sanjeev && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Open Elective-1\">Open Elective-1</option>\n                </select>\n              </div>\n            )}\n          </div>\n\n          {/* upload file */}\n\n          <div className=\"mb-3 mt-3\" id=\"deadline_block\">\n            <label className=\"form-label deadline\">Deadline</label>\n            <input\n              type=\"date\"\n              className=\"time_block12\"\n              value={deadline}\n              onChange={(e) => setdeadline(e.target.value)}\n            />\n          </div>\n\n          <div className=\"file-card\">\n            <div className=\"file-inputs\">\n              <input\n                type=\"file\"\n                value={file}\n                onChange={(e) => setFile(e.target.value)}\n              />\n              <button>Upload</button>\n            </div>\n            {file && <div className=\"fileuploaddisplay\">{file}</div>}\n            <div className=\"infocontent\">\n              <p className=\"main\">Supported files</p>\n              <p className=\"info\">PDF,Doc, JPG, PNG</p>\n            </div>\n          </div>\n\n          {/* text box */}\n\n          <div class=\"mb-3 \">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Discription\n            </label>\n            <textarea\n              class=\"form-control\"\n              placeholder=\"optional\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              value={description}\n              onChange={(e) => setdescription(e.target.value)}></textarea>\n          </div>\n\n          {/* submit button */}\n\n          <div className=\"text-center\">\n            <button className=\"submitbutton mt-3 \" onClick={Upload}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n      {success && <div className=\"container-fluid blacky\">\n        <div className=\"success\">\n          <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" /> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n          </svg>\n          </div>\n          <h4>Assignment Posted</h4>\n        </div>\n      </div>}\n    </>\n  );\n}\n\nexport default UploadAssignmentsem2;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Profile/Profile.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Attendance_report.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem4.js",["715","716","717","718","719"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport \"./upload_assignment.css\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UploadAssignmentsem4() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [deadline, setdeadline] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [Sanjeev, setSanjeev] = useState(false);\n  const [success, setsuccess] = useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(true);\n    }\n  }\n\n  async function Upload() {\n    if (!subject) {\n      alert(\"Please select the subject\")\n    }\n    else if (!file) {\n      alert(\"Please upload a file\")\n    }\n    else {\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          deadline,\n          semester: \"Sem-4\",\n          teacher,\n          description,\n        }),\n      });\n\n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n\n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n      <div className=\"uploadassignmentbody\">\n        <Navbar />\n        <div className=\"uploadheading\">\n          <h1>Upload Assignment</h1>\n        </div>\n\n        <div className=\"uploadassignmentcontent\">\n          <div className=\" mb-3\">\n            {NitishaAgg && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Internet of Things Systems, Security and Cloud\">\n                    Internet of Things Systems, Security and Cloud\n                  </option>\n                </select>\n              </div>\n            )}\n            {UnmeshShukla && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Health Informatics\">Health Informatics</option>\n                </select>\n              </div>\n            )}\n            {Sanjeev && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Dissertation Project\">\n                    Dissertation Project\n                  </option>\n                </select>\n              </div>\n            )}\n            {MKDas && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Research Methods in Informatics\">\n                    Research Methods in Informatics\n                  </option>\n                </select>\n              </div>\n            )}\n          </div>\n\n          {/* upload file */}\n          <div className=\"mb-3 mt-3\" id=\"deadline_block\">\n            <label className=\"form-label deadline\">Deadline</label>\n            <input\n              type=\"date\"\n              className=\"time_block12\"\n              value={deadline}\n              onChange={(e) => setdeadline(e.target.value)}\n            />\n          </div>\n\n          <div className=\"file-card\">\n            <div className=\"file-inputs\">\n              <input\n                type=\"file\"\n                value={file}\n                onChange={(e) => setFile(e.target.value)}\n              />\n              <button>Upload</button>\n            </div>\n            {file && <div className=\"fileuploaddisplay\">{file}</div>}\n            <div className=\"infocontent\">\n              <p className=\"main\">Supported files</p>\n              <p className=\"info\">PDF,Doc, JPG, PNG</p>\n            </div>\n          </div>\n\n          {/* text box */}\n\n          <div class=\"mb-3 \">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Discription\n            </label>\n            <textarea\n              class=\"form-control\"\n              placeholder=\"optional\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              value={description}\n              onChange={(e) => setdescription(e.target.value)}></textarea>\n          </div>\n\n          {/* submit button */}\n\n          <div className=\"text-center\">\n            <button className=\"submitbutton mt-3 \" onClick={Upload}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n      {success && <div className=\"container-fluid blacky\">\n        <div className=\"success\">\n          <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" /> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n          </svg>\n          </div>\n          <h4>Assignment Posted</h4>\n        </div>\n      </div>}\n    </>\n  );\n}\n\nexport default UploadAssignmentsem4;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/semesterwise/studymaterial_semester.js",["720","721","722","723","724","725","726","727","728","729","730","731","732"],"import React from 'react'\nimport { useState, useEffect, useRef, useReactToPrint } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from './list';\nimport Navbar from \"../../Student_dashboard/Navbar\";\n\nvar XLSX = require(\"xlsx\");\n\nconst Classreport = () => {\n  const navigate = useNavigate();\n  const [material, setMaterial] = useState([]);\n  const [subject, setSubject] = useState(\"\")\n  const [sem1, setSem1] = useState(false)\n  const [sem2, setSem2] = useState(false)\n  const [sem3, setSem3] = useState(false)\n  const [sem4, setSem4] = useState(false)\n  const [study, setStudy] = useState({})\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/studymaterial_student\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'),\n      }\n    })\n    const json = await response.json()\n    console.log(json.sem)\n    setStudy(json)\n  }\n\n  console.log(sem1)\n  console.log(study)\n  async function subjectupdate(e) {\n    setVisible(false)\n    setString(\"\")\n    e.preventDefault();\n    console.log(study)\n    let data = study.data.filter((data) => {\n      if (data.subject == subject) {\n        return data\n      }\n    })\n    console.log(data)\n\n    setMaterial(data.reverse())\n\n    if (data.length != 0) {\n      setVisible(true)\n    }\n    else {\n      setString(\"No Study Material Posted !\")\n\n    }\n\n  }\n\n  useEffect(() => {\n    if (study.sem == 'Sem-1') {\n      setSem1(true)\n      console.log(\"This is sem1\", sem1)\n\n    }\n\n    else if (study.sem == \"Sem-2\") {\n      setSem2(true)\n      console.log(sem2)\n    }\n    else if (study.sem == \"Sem-3\") {\n      setSem3(true)\n      console.log(sem3)\n    }\n\n    else if (study.sem == \"Sem-4\") {\n      setSem4(true)\n      console.log(sem4)\n    }\n\n  }, [study])\n\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    console.log('useeffect called')\n    if (token) {\n      const user = jwt.decode(token)\n      console.log(user)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n\n      } else {\n        fetchdata()\n        console.log('useeffect called !!!!!')\n\n      }\n    }\n  }, [])\n\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(material);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    doc.text(\"Classes Scheduled\", 70, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n  return (\n    <>\n      <div className='height100vh'>\n        <Navbar />\n        {<h1 className='text-center-1'>Study Material Uploaded</h1>}\n        {sem1 && <div className='classrepcontainer'>\n          <form className='repform1' onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Algorithms And Data Structure\">\n                Algorithms and Data Structure\n              </option>\n              <option value=\"Software Design & Programming\">\n                Software Design & Programming\n              </option>\n              <option value=\"Mathematical Foundation Of Computing\">\n                Mathematical Foundation of Computing\n              </option>\n              <option value=\"Computer System Architecture\">\n                Computer System Architecture\n              </option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n          </form>\n        </div>}\n        {sem2 && <div className='classrepcontainer'>\n          <form onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Computer Communication and Networks\">Computer Communication and Networks</option>\n              <option value=\"Operating Systems\">Operating Systems</option>\n              <option value=\"Database Systems\">Database Systems</option>\n              <option value=\"Applied Machine Learning\">Applied Machine Learning</option>\n              <option value=\"Open Elective-1\">Open Elective-1</option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n          </form>\n        </div>}\n        {sem3 && <div className='classrepcontainer'>\n          <form onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Information System Design\">Information System Design</option>\n              <option value=\"Cloud Computing\">Cloud Computing</option>\n              <option value=\"Software Engineering\">Software Engineering</option>\n              <option value=\"IT Planning and Management\">IT Planning and Management</option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n          </form>\n        </div>}\n        {sem4 && <div className='classrepcontainer'>\n          <form onSubmit={subjectupdate}>\n            <select\n              type=\"text\"\n              className=\"form-control shadow-none\"\n              id=\"subject\"\n              name=\"subject\"\n              value={subject}\n              required\n              onChange={(e) => setSubject(e.target.value)}>\n              <option required>Select Subject</option>\n              <option value=\"Internet of Things Systems, Security and Cloud\">Internet of Things Systems, Security and Cloud</option>\n              <option value=\"Health Informatics\">Health Informatics</option>\n              <option value=\"Research Methods in Informatics\">Research Methods in Informatics</option>\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary submit-btn\" id='btn-12'>\n              Search\n            </button>\n          </form>\n        </div>}\n        <div className='nothing_block'>{string}</div>\n        {visible && <div className='overflowxauto'>\n          <table className='table table-striped overflowxauto' id='mytable-1'>\n            <thead className='heading_1'>\n              <tr>\n                <th>Professor</th>\n                <th>Subject</th>\n                <th>File</th>\n                <th>Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              <List material={material} />\n            </tbody>\n          </table>\n        </div>}\n\n\n        {/* {visible && <div className='text-center  button_block8'>\n   <button id='butn' class=\"btn btn-primary\" onClick={exporttoexcelhandler}>Download in excel</button>\n   <button id='butn' class=\"btn btn-primary-1\" onClick={exporttopdfhandler}>Download in pdf</button>\n   </div>} */}\n      </div>\n    </>\n  )\n}\n\nexport default Classreport\n\n\n\n\n\n\n\n\n\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/UploadStudyMaterialSem2.js",["733","734","735","736","737"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\nimport './study.css'\n\nfunction UploadStudyMaterialSem2() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [Sanjeev, setSanjeev] = useState(false);\n  const[success,setsuccess]=useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Sanjeev\") {\n      setSanjeev(false);\n    }\n  }\n\n  async function Upload() {\n    if(!subject)\n    {\n      alert(\"Please select the subject\")\n    }\n    else if(!file)\n    {\n      alert(\"Please upload a file\")\n    }\n    else\n    {\n\n      const response = await fetch(\"http://localhost:4000/upload/studymaterial\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          semester: \"Sem-2\",\n          teacher,\n          description,\n        }),\n      });\n  \n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      },2500);\n    }\n   \n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n    <div className=\"uploadassignmentbody\">\n      <Navbar />\n      <div className=\"uploadheading\">\n        <h1>Upload Studymaterial</h1>\n      </div>\n      <div className=\"uploadassignmentcontent\">\n        <div className=\" mb-3\">\n          {NitishaAgg && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"Computer Communication and Networks\">\n                  Computer Communication and Networks\n                </option>\n                <option value=\"Operating Systems\">Operating Systems</option>\n              </select>\n            </div>\n          )}\n\n          {UnmeshShukla && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"Database Systems\">Database Systems</option>\n              </select>\n            </div>\n          )}\n\n          {MKDas && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"Applied Machine Learning\">\n                  Applied Machine Learning\n                </option>\n              </select>\n            </div>\n          )}\n\n          {Sanjeev && (\n            <div>\n              \n              <select\n                type=\"text\"\n                className=\"form-control shadow-none\"\n                id=\"subject\"\n                name=\"subject\"\n                value={subject}\n                onChange={(e) => setsubject(e.target.value)}>\n                   <option>Select Subject</option>\n                <option value=\"Open Elective-1\">Open Elective-1</option>\n              </select>\n            </div>\n          )}\n        </div>\n\n        {/* upload file */}\n\n        <div className=\"file-card\">\n          <div className=\"file-inputs\">\n            <input\n              type=\"file\"\n              value={file}\n              onChange={(e) => setFile(e.target.value)}\n            />\n            <button>Select File</button>\n          </div>\n         {file && <div className=\"fileuploaddisplay\">{file}</div>}\n          <div className=\"infocontent\">\n            <p className=\"main\">Supported files</p>\n            <p className=\"info\">PDF,Doc, JPG, PNG</p>\n          </div>\n        </div>\n          \n        {/* text box */}\n\n        <div class=\"mb-3 mt-4\">\n          <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n            Discription\n          </label>\n          <textarea\n            class=\"form-control\"\n            placeholder=\"optional\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            value={description}\n            onChange={(e) => setdescription(e.target.value)}></textarea>\n        </div>\n\n        {/* submit button */}\n\n        <div className=\"text-center\">\n          <button className=\"submitbutton mt-3 \" onClick={Upload}>\n            Post\n          </button>\n        </div>\n      </div>\n    </div>\n    {success &&  <div className=\"container-fluid blacky\">\n    <div className=\"success\">\n   <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\"/> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"/>\n</svg>\n</div>\n<h4>Study Material Posted</h4>\n</div>\n      </div>}\n      </>\n  );\n}\n\nexport default UploadStudyMaterialSem2;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_Upload/Upload_assignment_sem3.js",["738","739","740","741","742"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../Teacher_dashboard/Navbar\";\nimport \"./upload_assignment.css\";\nimport jwt from \"jsonwebtoken\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UploadAssignmentsem3() {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [deadline, setdeadline] = useState(\"\");\n  const [teacher, setTeacher] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [UnmeshShukla, setUnmeshShukla] = useState(false);\n  const [NitishaAgg, setNitishaAgg] = useState(false);\n  const [MKDas, setMKDas] = useState(false);\n  const [Manish, setManish] = useState(false);\n  const [success, setsuccess] = useState(false)\n  async function populate(e) {\n    const req = await fetch(\"http://localhost:4000/upload/assignment\", {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"), //\n      },\n    });\n    const data = await req.json();\n    setTeacher(data.name);\n    if (data.name == \"Unmesh Shukla\") {\n      setUnmeshShukla(true);\n    }\n    if (data.name == \"Nitisha Aggarwal\") {\n      setNitishaAgg(true);\n    }\n    if (data.name == \"M.K Das\") {\n      setMKDas(true);\n    }\n    if (data.name == \"Manish\") {\n      setManish(true);\n    }\n  }\n\n  async function Upload() {\n    if (!subject) {\n      alert(\"Please select the subject\")\n    }\n    else if (!file) {\n      alert(\"Please upload a file\")\n    }\n    else {\n      const response = await fetch(\"http://localhost:4000/upload/assignment\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({\n          file,\n          subject,\n          deadline,\n          semester: \"Sem-3\",\n          teacher,\n          description,\n        }),\n      });\n\n      const data = await response.json();\n      setsuccess(data.success)\n      setTimeout(() => {\n        setsuccess(false)\n        navigate(\"/Teacherdashboard\");\n      }, 2500);\n    }\n\n  }\n\n  //--------------------\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = jwt.decode(token);\n      console.log(user);\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        navigate(\"/Teacherdashboard\");\n      } else {\n        populate();\n      }\n    }\n  }, []);\n  return (\n    <>\n      <div className=\"uploadassignmentbody\">\n        <Navbar />\n        <div className=\"uploadheading\">\n          <h2>Upload Assignment</h2>\n        </div>\n\n        <div className=\"uploadassignmentcontent\">\n          <div className=\" mb-3\">\n            {NitishaAgg && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option> <option>Select Subject</option>\n                  <option value=\"Information System Design\">\n                    Information System Design\n                  </option>\n                </select>\n              </div>\n            )}\n            {UnmeshShukla && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Cloud Computing\">Cloud Computing</option>\n                </select>\n              </div>\n            )}\n            {MKDas && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"Software Engineering\">\n                    Software Engineering\n                  </option>\n                </select>\n              </div>\n            )}\n            {Manish && (\n              <div>\n\n                <select\n                  type=\"text\"\n                  className=\"form-control shadow-none\"\n                  id=\"subject\"\n                  name=\"subject\"\n                  value={subject}\n                  onChange={(e) => setsubject(e.target.value)}>\n                  <option>Select Subject</option>\n                  <option value=\"IT Planning and Management\">\n                    IT Planning and Management\n                  </option>\n                </select>\n              </div>\n            )}\n          </div>\n\n          {/* upload file */}\n          <div className=\"mb-3 mt-3\" id=\"deadline_block\">\n            <label className=\"form-label deadline\">Deadline</label>\n            <input\n              type=\"date\"\n              className=\"time_block12\"\n              value={deadline}\n              onChange={(e) => setdeadline(e.target.value)}\n            />\n          </div>\n\n          <div className=\"file-card\">\n            <div className=\"file-inputs\">\n              <input\n                type=\"file\"\n                value={file}\n                onChange={(e) => setFile(e.target.value)}\n              />\n              <button>Upload</button>\n            </div>\n            {file && <div className=\"fileuploaddisplay\">{file}</div>}\n            <div className=\"infocontent\">\n              <p className=\"main\">Supported files</p>\n              <p className=\"info\">PDF,Doc, JPG, PNG</p>\n            </div>\n          </div>\n\n          {/* text box */}\n\n          <div class=\"mb-3 \">\n            <label for=\"exampleFormControlTextarea1\" class=\"form-label\">\n              Discription\n            </label>\n            <textarea\n              class=\"form-control\"\n              placeholder=\"optional\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n              value={description}\n              onChange={(e) => setdescription(e.target.value)}></textarea>\n          </div>\n\n          {/* submit button */}\n\n          <div className=\"text-center\">\n            <button className=\"submitbutton mt-3 \" onClick={Upload}>\n              Submit\n            </button>\n          </div>\n        </div>\n      </div>\n      {success && <div className=\"container-fluid blacky\">\n        <div className=\"success\">\n          <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" /> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n          </svg>\n          </div>\n          <h4>Assignment Posted</h4>\n        </div>\n      </div>}\n    </>\n  );\n}\n\nexport default UploadAssignmentsem3;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem1Attendance.js",["743","744","745","746","747","748","749","750","751","752","753","754"],"import React from 'react'\nimport { useState,useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from '../Filters/List'\nimport jsPDF from \"jspdf\";\nimport Navbar from './Navbar';\nimport autoTable from 'jspdf-autotable';\n// import './filters.css'\n\nvar XLSX = require(\"xlsx\");\nconst Sem1Attendance = () => {\n  const navigate = useNavigate();\n  const [subject,setsubject]=useState(false)\n  const [date,setdate]=useState(false)\n  const [month,setmonth]=useState(false)\n  const[button,setbutton]=useState(false)\n  const[filter,setfilter]=useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const[monthval,setmonthval]=useState(\"\")\n  const[overall,setoverall]=useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const[report,setreport]=useState(false)\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem1\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), \n      }\n    })\n    const json = await response.json()\n    setstudent(json.data2)\n\n    if(json.data2.length != 0)\n    {\n      setVisible(true)\n    }\n    else{\n      setString(\"No Attendance Report Available !\")\n    }\n\n    if (monthval) {\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      })\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data2.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n     \n    else if (subjectval) {\n       console.log(\"subject value : \",subjectval)\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data2)\n    }\n\n  }\n  \n\n  function handlechange(e){\n       var val= e.target.value\n      setfilter(val)\n      \n      if(val==\"overall\")\n      {   \n          \n          setdate(false)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setoverall(true)\n          setreport(false)\n          setdateval(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"date\")\n      {\n          setdate(true)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setreport(false)\n          setoverall(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"month\")\n      {\n          setdate(false)\n          setmonth(true)\n          setsubject(false)\n          setbutton(true)\n          setreport(false)\n          setoverall(\"\")\n          setdateval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"subject\")\n      {\n          setdate(false)\n          setmonth(false)\n          setsubject(true)\n          setbutton(true)\n          setreport(false)\n          setoverall(\"\")\n          setdateval(\"\")\n          setmonthval(\"\")\n      }\n  }\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  const exporttoexcelhandler = () => {\n        var wb = XLSX.utils.book_new(),\n          ws = XLSX.utils.json_to_sheet(student);\n        XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n        XLSX.writeFile(wb, \"MyExcel.xlsx\")\n      };\n    \n      const exporttopdfhandler = () => {\n        const doc = new jsPDF()\n        let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n        doc.text(heading, 20, 10)\n        autoTable(doc, { html: '#mytable' })\n        doc.save('table.pdf')\n      };\nreturn (\n  <>\n   <div className=\" mb-3\" >\n    <Navbar/>\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n<div className=\"mb-3\" id='date_block1' >\n  {/* <label className=\"form-label\">Enter Date</label> */}\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\n</div>\n\n</form>}\n{month &&    <form>\n  <div className=\" mb-3\" id='date_block1'>\n        {/* <label className=\"form-label\">Select Month</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-12\"\n          id=\"month\"\n          name=\"month\"\n          value={monthval}\n          onChange={(e) => setmonthval(e.target.value)}>\n          <option required>Select Month</option>\n          <option value=\"07\">\n            July\n          </option>\n          <option value=\"08\">\n           August\n          </option>\n          <option value=\"09\">\n            September\n          </option>\n          <option value=\"10\">\n          October\n          </option>\n          <option value=\"11\">\n           November\n          </option>\n          <option value=\"12\">\n           December\n          </option>\n        </select>\n      </div>\n</form>}\n{subject && <form>\n  <div className=\"selectsubjectcontainer\">\n        {/* <label className=\"form-label\">Select Subject</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control shadow-none\"\n          id=\"subject\"\n          name=\"subject\"\n          value={subjectval}\n          onChange={(e) => setsubjectval(e.target.value)}>\n        <option required>Select Subject</option>\n              <option value=\"Software Design & Programming\">\n                Software Design & Programming\n              </option>\n              <option value=\"Algorithms And Data Structure\">\n                Algorithms and Data Structure\n              </option>\n              <option value=\"Mathematical Foundation Of Computing\">\n                Mathematical Foundation of Computing\n              </option>\n              <option value=\"Computer System Architecture\">\n                Computer System Architecture\n              </option>\n        </select>\n      </div>\n</form>} \n\n\n \n<div className='text-center'>\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\n</div>\n{visible && <div>\n  <h3 className='overall-1'>{heading}</h3>\n\n  </div>}\n  <div>{string}</div>\n{visible && <>\n  <div className='table-24'>\n        <table className='table table-striped' >\n          <thead className='heading-2'>\n            <tr>\n              <th>Student</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Attendance Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List student={student} />\n          </tbody>\n        </table>\n      </div>\n      <div className='text-center'>\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>\n</>}\n  </>\n)\n}\n\nexport default Sem1Attendance","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Navbar.js",["755"],"import React from \"react\";\n// import './Navbar.css';\nimport { useNavigate } from \"react-router-dom\"\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\n// import logo from './Teacher_Dashboard/image.png'\n\n\nfunction Navbar() {\n    const navigate = useNavigate();\n    const [sidebar, setSidebar] = React.useState(false);\n    const [sem, setsem] = React.useState(false);\n    const showsemesterhandler = () => setsem(!sem);\n    const showSidebar = () => setSidebar(!sidebar);\n\n\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#fff' }}>\n                <div className='navbar'>\n                    <Link to='#' className='menu-bars'>\n                        <FaIcons.FaBars onClick={showSidebar} />\n                    </Link>\n                    <div className=\"heading\">\n                       {/* <Link to=\"/teacherNotifications\"><i class=\"fa fa-bell mt-1 fa-2x\"></i></Link>  */}\n                        {/* <Link to=\"/Teacherdashboard/profile\"><div className=\"button\"><img src={logo} alt=\"...\" class=\"profilePic\"></img></div></Link> */}\n\n                    </div>\n                </div>\n                <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n                    <ul className='nav-menu-items' >\n                        <li className='navbar-toggle'>\n                            < FaIcons.FaCaretLeft size={40} onClick={showSidebar} />\n                            <span>Classopedia</span>\n                        </li>\n                        <li className=\"nav-text\">\n                            <AiIcons.AiFillHome color='rgb(0, 104, 74)' />\n                            <Link to=\"/admindashboard\"><span>Home</span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaBook color='rgb(0, 104, 74)' />\n                            <Link to=\"/admindashboard/attendancereport\"><span>Attendance Report</span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaPen color='rgb(0, 104, 74)' />\n                            <Link to=\"/admindashboard/classestaken\"><span>Classes Taken</span></Link>\n                        </li>\n                        <li className=\"nav-text\" onClick={() => {\n                            localStorage.removeItem('token')\n                            navigate(\"/\")\n                        }}>\n                            <FaIcons.FaSignInAlt color='rgb(0, 104, 74)' />\n                            <span>Logout</span>\n                        </li>\n                    </ul>\n                </nav>\n            </IconContext.Provider>\n        </>\n    );\n}\n\nexport default Navbar;","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem3Attendance.js",["756","757","758","759","760","761","762","763","764","765","766","767"],"import React from 'react'\nimport { useState,useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from '../Filters/List'\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport Navbar from './Navbar';\nvar XLSX = require(\"xlsx\");\nconst Sem3Attendance = () => {\n  const navigate = useNavigate();\n  const [subject,setsubject]=useState(false)\n  const [date,setdate]=useState(false)\n  const [month,setmonth]=useState(false)\n  const[button,setbutton]=useState(false)\n  const[filter,setfilter]=useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const[monthval,setmonthval]=useState(\"\")\n  const[overall,setoverall]=useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const[report,setreport]=useState(false)\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem3\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    setstudent(json.data2)\n    console.log(\"student data : \",json.data2);\n    if(json.data2.length != 0)\n    {\n      setVisible(true)\n    }\n    else{\n      setString(\"No Attendance Report Available !\")\n\n    }\n\n    if (monthval) {\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      });\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data2.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n     \n    else if (subjectval) {\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data2)\n    }\n\n  }\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  function handlechange(e){\n      var val=e.target.value\n      setfilter(val)\n      \n      if(val==\"overall\")\n      {   \n          \n          setdate(false)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setoverall(true)\n          setreport(false)\n          setdateval(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"date\")\n      {\n          setdate(true)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setoverall(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"month\")\n      {\n          setdate(false)\n          setmonth(true)\n          setsubject(false)\n          setbutton(true)\n          setoverall(\"\")\n          setdateval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"subject\")\n      {\n          setdate(false)\n          setmonth(false)\n          setsubject(true)\n          setbutton(true)\n          setoverall(\"\")\n          setdateval(\"\")\n          setmonthval(\"\")\n      }\n  }\n  \n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(student);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n    doc.text(heading, 20, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\nreturn (\n  <>\n   <Navbar/>\n   <div className=\" mb-3\" >\n   \n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n<div className=\"mb-3\"  id='date_block1'>\n  {/* <label className=\"form-label\">Enter Date</label> */}\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\n</div>\n\n</form>}\n{month &&    <form>\n  <div className=\" mb-3\" id='date_block1'>\n        {/* <label className=\"form-label\">Select Month</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-12 shadow-none\"\n          id=\"month\"\n          name=\"month\"\n          value={monthval}\n          onChange={(e) => setmonthval(e.target.value)}>\n          <option required>Select Month</option>\n          <option value=\"07\">\n            July\n          </option>\n          <option value=\"08\">\n           August\n          </option>\n          <option value=\"09\">\n            September\n          </option>\n          <option value=\"10\">\n          October\n          </option>\n          <option value=\"11\">\n           November\n          </option>\n          <option value=\"12\">\n           December\n          </option>\n        </select>\n      </div>\n</form>}\n{subject && <form>\n  <div className=\"selectsubjectcontainer\">\n        {/* <label className=\"form-label\">Select Subject</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control shadow-none\"\n          id=\"subject\"\n          name=\"subject\"\n          value={subjectval}\n          onChange={(e) => setsubjectval(e.target.value)}>\n        <option>Select Subject</option>\n            <option value=\"Information System Design\">\n              Information System Design\n            </option>\n             <option value=\"Cloud Computing\">Cloud Computing</option>\n             <option value=\"Software Engineering\">Software Engineering</option>\n              <option value=\"IT Planning and Management\">\n              IT Planning and Management\n            </option>\n        </select>\n      </div>\n</form> }\n\n \n<div className='text-center'>\n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5'  onClick={Print}  >Print Attendance</button>}\n</div>\n<div>{string}</div>\n{visible && <>\n <h3 className='overall-1'>{heading}</h3>\n</>}\n{visible && <>\n  <div className='table-24'>\n        <table className='table table-striped'>\n          <thead className='heading-2'>\n            <tr>\n              <th>Student</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Attendance Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List student={student} />\n          </tbody>\n        </table>\n      </div>\n      <div className='text-center'>\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>\n</>}\n  </>\n)\n}\n\nexport default Sem3Attendance","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem2Attendance.js",["768","769","770","771","772","773","774","775","776","777","778","779"],"import React from 'react'\nimport { useState,useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from '../Filters/List'\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport Navbar from './Navbar';\nvar XLSX = require(\"xlsx\");\nconst Sem2Attendance = () => {\n  const navigate = useNavigate();\n  const [subject,setsubject]=useState(false)\n  const [date,setdate]=useState(false)\n  const [month,setmonth]=useState(false)\n  const[button,setbutton]=useState(false)\n  const[filter,setfilter]=useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const[monthval,setmonthval]=useState(\"\")\n  const[overall,setoverall]=useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const[report,setreport]=useState(false)\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n  \n  const fetchdata = async () => {\n      const response = await fetch(\"http://localhost:4000/attendancereport/sem2\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    setstudent(json.data2)\n    \n    if(json.data2.length != 0)\n    {\n      setVisible(true)\n    }\n    else{\n      setString(\"No Attendance Report Available !\")\n    }\n    if (monthval) {\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      });\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data2.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n     \n    else if (subjectval) {\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data2)\n    }\n\n  }\n  function handlechange(e){\n    \n      var val=e.target.value\n      setfilter(val)\n      \n      if(val==\"overall\")\n      {   \n          \n          setdate(false)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setoverall(true)\n          setreport(false)\n          setdateval(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"date\")\n      {\n          setdate(true)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setoverall(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"month\")\n      {\n          setdate(false)\n          setmonth(true)\n          setsubject(false)\n          setbutton(true)\n          setoverall(\"\")\n          setdateval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"subject\")\n      {\n          setdate(false)\n          setmonth(false)\n          setsubject(true)\n          setbutton(true)\n          setoverall(\"\")\n          setdateval(\"\")\n          setmonthval(\"\")\n      }\n  }\n\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(student);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n    doc.text(heading, 20, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\n\nreturn (\n  <>\n  <Navbar/>\n   <div className=\" mb-3\">\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n<div className=\"mb-3\"  id='date_block1'>\n  {/* <label className=\"form-label\">Enter Date</label> */}\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\n</div>\n\n</form>}\n{month &&    <form>\n  <div className=\" mb-3\" id='date_block1'>\n        {/* <label className=\"form-label\">Select Month</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-12\"\n          id=\"month\"\n          name=\"month\"\n          value={monthval}\n          onChange={(e) => setmonthval(e.target.value)}>\n          <option required>Select Month</option>\n            <option value=\"01\">\n              January\n            </option>\n            <option value=\"02\">\n             February\n            </option>\n            <option value=\"03\">\n              March\n            </option>\n            <option value=\"04\">\n             April\n            </option>\n            <option value=\"05\">\n             May\n            </option>\n            <option value=\"06\">\n             June\n            </option>\n        </select>\n      </div>\n</form>}\n{subject && <form>\n  <div className=\"selectsubjectcontainer\">\n        {/* <label className=\"form-label\">Select Subject</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control shadow-none\"\n          id=\"subject\"\n          name=\"subject\"\n          value={subjectval}\n          onChange={(e) => setsubjectval(e.target.value)}>\n        <option>Select Subject</option>\n            <option value=\"Computer Communication and Networks\">\n              Computer Communication and Networks\n            </option>\n            <option value=\"Operating Systems\">Operating Systems</option>\n             <option value=\"Database Systems\">Database Systems</option>\n             <option value=\"Applied Machine Learning\">\n              Applied Machine Learning\n            </option>\n             <option value=\"Open Elective-1\">Open Elective-1</option>\n        </select>\n      </div>\n</form> }\n\n \n \n<div className='text-center'> \n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\n</div>\n{visible && <div>\n  <h3 className='overall-1'>{heading}</h3>\n  </div>}\n<div>{string}</div>\n{visible && <div className='table-24'>\n        <table className='table table-striped'>\n          <thead className='heading-2'>\n            <tr>\n              <th>Student</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Attendance Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List student={student} />\n          </tbody>\n        </table>\n      </div>}\n     {visible && <div className='text-center'>\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>}\n  </>\n)\n}\n\nexport default Sem2Attendance","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Sem4Attendance.js",["780","781","782","783","784","785","786","787","788","789","790","791"],"import React from 'react'\nimport { useState,useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from \"react-router-dom\"\nimport List from '../Filters/List'\nimport jsPDF from \"jspdf\";\nimport Navbar from './Navbar';\nimport autoTable from 'jspdf-autotable';\n\nvar XLSX = require(\"xlsx\");\nconst Sem4Attendance = () => {\n  const navigate = useNavigate();\n  const [subject,setsubject]=useState(false)\n  const [date,setdate]=useState(false)\n  const [month,setmonth]=useState(false)\n  const[button,setbutton]=useState(false)\n  const[filter,setfilter]=useState(\"\")\n  const [subjectval, setsubjectval] = useState(\"\")\n  const [dateval, setdateval] = useState(\"\")\n  const[monthval,setmonthval]=useState(\"\")\n  const[overall,setoverall]=useState(false)\n  const[report,setreport]=useState(false)\n  const [val, setval] = useState(\"\")\n  const [student, setstudent] = useState([]);\n  const [visible, setVisible] = useState(false)\n  const [string, setString] = useState(\"\")\n  const [heading, setHeading] = useState(\"Overall Attendance Report\")\n\n  const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/attendancereport/sem4\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'x-access-token': localStorage.getItem('token'), //\n      }\n    })\n    const json = await response.json()\n    setstudent(json.data2)\n    if(json.data2.length != 0)\n    {\n      setVisible(true)\n    }\n    else{\n      setString(\"No Attendance Report Available !\")\n    }\n\n    if (monthval) {\n      let data1 = json.data2.filter((data) => data.date.slice(5, 7) == monthval)\n      setstudent(data1)\n      const date = new Date();\n      date.setMonth(monthval - 1);\n\n      var month = date.toLocaleString('en-US', {\n        month: 'long',\n      });\n      setval(month)\n    }\n\n    else if (dateval) {\n      let data1 = json.data2.filter((data) => data.date == dateval)\n      setstudent(data1)\n      setval(dateval)\n    }\n     \n    else if (subjectval) {\n      let data1 = json.data2.filter((data) => data.subject == subjectval)\n      setstudent(data1)\n      setval(subjectval)\n    }\n    else {\n      setstudent(json.data2)\n    }\n\n  }\nuseEffect(()=>{\n    const token = localStorage.getItem('token')\n    if (token) {\n      const user = jwt.decode(token)\n      if (!user) {\n        localStorage.removeItem('token')\n        navigate(\"/dashboard\");\n      } else {\n        fetchdata()\n      }\n    } \n  },[])\nuseEffect(()=>{\n  if(overall && val)\n  {\n    setHeading(\"Overall Attendance Report\")\n  }\n  else if(subjectval&& val)\n  {\n    setHeading(\"Attendance Report of \"+ val)\n  }\n  else if(dateval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n  else if(monthval&& val)\n  {\n    setHeading(\"Attendance Report of \" + val)\n  }\n\n},[Print])\n\n  function Print()\n  {\n    fetchdata()\n  \n  }\n  function handlechange(e){\n      var val=e.target.value\n      setfilter(val)\n      \n      if(val==\"overall\")\n      {   \n          \n          setdate(false)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setoverall(true)\n          setreport(false)\n          setdateval(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"date\")\n      {\n          setdate(true)\n          setmonth(false)\n          setsubject(false)\n          setbutton(true)\n          setoverall(\"\")\n          setmonthval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"month\")\n      {\n          setdate(false)\n          setmonth(true)\n          setsubject(false)\n          setbutton(true)\n          setoverall(\"\")\n          setdateval(\"\")\n          setsubjectval(\"\")\n      }\n      if(val==\"subject\")\n      {\n          setdate(false)\n          setmonth(false)\n          setsubject(true)\n          setbutton(true)\n          setoverall(\"\")\n          setdateval(\"\")\n          setmonthval(\"\")\n      }\n  }\n\n  const exporttoexcelhandler = () => {\n    var wb = XLSX.utils.book_new(),\n      ws = XLSX.utils.json_to_sheet(student);\n    XLSX.utils.book_append_sheet(wb, ws, \"MySheet1\");\n    XLSX.writeFile(wb, \"MyExcel.xlsx\")\n  };\n\n  const exporttopdfhandler = () => {\n    const doc = new jsPDF()\n    let heading = val ? \"Attendance Report of \" + val : \"Overall Attendance Report of Semester1\";\n    doc.text(heading, 20, 10)\n    autoTable(doc, { html: '#mytable' })\n    doc.save('table.pdf')\n  };\nreturn (\n  <>\n  <Navbar/>\n   <div className=\" mb-3\" >\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={filter}\n          onChange={handlechange}>\n          <option value=\"overall\">\n            Overall\n          </option>\n          <option value=\"date\">\n            Date\n          </option>\n          <option value=\"month\">\n            Month\n          </option>\n          <option value=\"subject\">\n            Subject\n          </option>\n        </select>\n      </div>\n      {date && <form>\n<div className=\"mb-3\" id='date_block1'>\n  {/* <label className=\"form-label\">Enter Date</label> */}\n  <input type=\"date\" className=\"form-control-12\" value={dateval} onChange={(e)=>setdateval(e.target.value)} />\n</div>\n\n</form>}\n{month &&    <form>\n  <div className=\" mb-3\"  id='date_block1'>\n        {/* <label className=\"form-label\">Select Month</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-12\"\n          id=\"month\"\n          name=\"month\"\n          value={monthval}\n          onChange={(e) => setmonthval(e.target.value)}>\n          <option required>Select Month</option>\n            <option value=\"01\">\n              January\n            </option>\n            <option value=\"02\">\n             February\n            </option>\n            <option value=\"03\">\n              March\n            </option>\n            <option value=\"04\">\n             April\n            </option>\n            <option value=\"05\">\n             May\n            </option>\n            <option value=\"06\">\n             June\n            </option>\n        </select>\n      </div>\n</form>}\n{subject &&<form>\n  <div className=\"selectsubjectcontainer\">\n        {/* <label className=\"form-label\">Select Subject</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control shadow-none\"\n          id=\"subject\"\n          name=\"subject\"\n          value={subjectval}\n          onChange={(e) => setsubjectval(e.target.value)}>\n       <option>Select Subject</option>\n            <option value=\"Internet of Things Systems, Security and Cloud\">\n              Internet of Things Systems, Security and Cloud\n            </option>\n            <option value=\"Health Informatics\">Health Informatics</option>\n            <option value=\"Software Engineering\">Software Engineering</option>\n            <option value=\"Dissertation Project\">Dissertation Project</option>\n        </select>\n      </div>\n</form> }\n\n\n <div className='text-center'> \n{button &&  <button type=\"submit\" className=\"btn btn-primary\" id='button_block5' onClick={Print}  >Print Attendance</button>}\n</div>\n<div>{string}</div>\n{visible && <>\n <h3 className='overall-1'>{heading}</h3>\n<div className='table-24'>\n        <table className='table table-striped'>\n          <thead className='heading-2'>\n            <tr>\n              <th>Student</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Attendance Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            <List student={student} />\n          </tbody>\n        </table>\n      </div>\n      <div className='text-center'>\n          <button type=\"button\" class=\"btn btn-primary\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttoexcelhandler}>Download in excel</button>\n          <button type=\"button\" class=\"btn btn-primary-1\" id='butn' data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\" onClick={exporttopdfhandler}>Download in pdf</button>\n        </div>\n</>}\n  </>\n)\n}\n\nexport default Sem4Attendance","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Classes_taken.js",["792","793","794","795","796","797","798","799","800","801"],"import React, { useEffect } from 'react'\nimport { useState } from 'react'\nimport List from './/List'\nimport Navbar from './Navbar'\n\nimport \"../Admin/Admin Dashboard/Register/registermultiple.css\"\n\n\nimport \"../Admin/Admin Dashboard/Register/registermultiple.css\";\n\nconst Classes_taken = () => {\n  const[classes,setclasses]=useState([])\n  const[professor,setprofessor]=useState(\"\")\n  let data2;\n  if(professor==\"Manish Shailani\")\n  {\n     data2 = classes.filter((classes)=>classes.name==professor)\n     console.log(data2);\n  }\n  else if(professor==\"Nitisha Aggarwal\")\n  {\n     data2 = classes.filter((classes)=>classes.name==professor)\n     console.log(data2);\n  }\n  else if(professor==\"Sanjeev Singh\")\n  {\n     data2 = classes.filter((classes)=>classes.name==professor)\n     console.log(data2);\n  }\n  else if(professor==\"Sunil Kumar\")\n  {\n     data2 = classes.filter((classes)=>classes.name==professor)\n     console.log(data2);\n  }\n  else if(professor==\"Unmesh Shukla\")\n  {\n     data2 = classes.filter((classes)=>classes.name==professor)\n     console.log(data2);\n  }\n   const fetchdata = async () => {\n    const response = await fetch(\"http://localhost:4000/classestaken\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n               }\n    })\n    const json = await response.json()\n    setclasses(json.data)\n    console.log(json.data);\n}\nuseEffect(()=>{\n   fetchdata()\n},[])\n  return (\n    <>\n     <div className='height100vh'>\n    <Navbar/>\n\n    <div className=\" mb-3\" >\n        {/* <label className=\"form-label\">Select Filter</label> */}\n        <select\n          type=\"text\"\n          className=\"form-control-8\"\n          id=\"filter\"\n          name=\"filter\"\n          value={professor}\n          onChange={(e)=>setprofessor(e.target.value)}\n          >\n         \n          <option>\n            Select Professor\n          </option>\n          <option value=\"Manish Shailani\">\n            Manish Shailani\n          </option>\n          <option value=\"Nitisha Aggarwal\">\n            Nitisha Aggarwal\n          </option>\n          <option value=\"Sanjeev Singh\">\n            Sanjeev Singh\n          </option>\n          <option value=\"Sunil Kumar\">\n            Sunil Kumar \n          </option>\n          <option value=\"Unmesh Shukla\">\n            Unmesh Shukla\n          </option>\n        </select>\n      </div>\n      {data2 && <> <div class=\"row overviewdatacontent\" >\n                                <div class=\"col-lg-7 col-md-6 col-sm-12 datacontent flex\" >\n\n                                    <div class=\"classtkn\">\n                                        <h5>Total classes taken by {professor}</h5>\n                                      \n                                    </div>\n                                    <div class=\"classinfoval\">\n                                        <h5>{data2.length}</h5>\n                                        \n                                    </div>\n                                </div>\n                            </div> <div classname=\"main\">\n        <table className='table table-striped' id='mytable-5'>\n          <thead className='heading_1'>\n            <tr>\n              <th>Professor</th>\n              <th>Subject</th>\n              <th>Date</th>\n              <th>Semester</th>        \n            </tr>\n          </thead>\n          <tbody>\n            <List data2={data2}  />\n          </tbody>\n        </table>\n      </div> </>}\n      </div>\n    </>\n  )\n}\n\nexport default Classes_taken\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/Home.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/login.js",["802"],"import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\"\n\nconst Loginadmin = () => {\n\n  const [ifPasswordAndUserNameNotsame, setIfPasswordAndUserNameNotsame] = useState(false);\n\n  const navigate = useNavigate();\n\n  const [user, setUser] = useState({\n    name: \"\",\n    password: \"\"\n  })\n\n  const [loginstatus, setLoginstatus] = useState(\"\")\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setUser({\n      ...user,\n      [name]: value\n    })\n  }\n\n\n  const login = async (e) => {\n    e.preventDefault();\n    await fetch(\"http://localhost:4000/adminlogin\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    }).then(async (response) => {\n      let data = await response.json();\n      console.log(data);\n      if (data.admin) {\n        localStorage.setItem('token', data.admin)\n        navigate(\"/admindashboard\");\n        setLoginstatus(data.message);\n      } else {\n        setIfPasswordAndUserNameNotsame(true);\n        setLoginstatus(data.message);\n      }\n    });\n\n  }\n\n  return (\n    <>\n      <section className=\"login2body\">\n        {ifPasswordAndUserNameNotsame && < div class=\"alert alert-danger\" role=\"alert\">\n          please check your username and password!\n        </div>}\n        <div className=\"screen\">\n          <div className=\"screen__content\">\n            <form className=\"login\">\n              {/* <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Login for Professors</h3> */}\n\n              <div className=\"login__field\">\n                <input\n                  type=\"text\"\n                  className=\"login__input\"\n                  id=\"floatingInput\"\n                  name=\"name\"\n                  placeholder=\"Username\"\n                  value={user.name}\n                  onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"login__input\"\n                  id=\"floatingPassword\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={user.password}\n                  onChange={handleChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"button login__submit\"\n                onClick={login}\n              >\n                <span className=\"button__text\">Log In Now</span>\n              </button>\n            </form>\n          </div>\n          <div class=\"screen__background\">\n            <span class=\"screen__background__shape screen__background__shape4\"></span>\n            <span class=\"screen__background__shape screen__background__shape3\"></span>\n            <span class=\"screen__background__shape screen__background__shape2\"></span>\n            <span class=\"screen__background__shape screen__background__shape1\"></span>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\n\nexport default Loginadmin;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/registerteacher.js",["803"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from '../../../Admin Dashboard/Navbar'\n\nfunction TeacherRegister() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    Teacher_id: \"\",\n    contactNum: \"\",\n    password: \"\"\n  })\n\n  const [errmsg, setErrmsg] = useState(\"\")\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setUser({\n      ...user,\n      [name]: value\n    })\n  }\n\n  async function Register(e) {\n    e.preventDefault()\n      const response = await fetch(\"http://localhost:4000/registerteacher\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      });\n  \n      const data = await response.json();\n      console.log(data)\n      if (data.status === \"ok\") {\n        setErrmsg(\"\")\n        alert(\"Teacher Added succesfully\")\n        navigate('/admindashboard ')\n        setErrmsg(\"\")\n\n      }\n      else if(data.status === \"notok\"){\n        setErrmsg(data.msg)\n      }\n      else{\n        navigate('/admindashboard')\n      }\n    }\n   \n  return (\n    <>\n    <Navbar />\n     <section>\n        <div className=\"container pt-10\">\n          <div className=\"col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4 text-center\">\n            <form className=\"rounded bg-white shadow p-5\" >\n              <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Register new Teacher</h3>\n\n              <label htmlFor=\"floatingInput\">Name</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  name=\"name\"\n                  placeholder=\"name\"\n                  value={user.name}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingemail\">Email</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingemail\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={user.email}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingid\">Teacher's ID</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingid\"\n                  name=\"Teacher_id\"\n                  placeholder=\"Teacher's ID\"\n                  value={user.Teacher_id}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingcontact\">Contact Number</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingcontact\"\n                  name=\"contactNum\"\n                  placeholder=\"Contact Number\"\n                  value={user.contactNum}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingPassword\">Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingPassword\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={user.password}\n                  onChange={handleChange}\n                />\n              </div>\n\n              {\n                errmsg ? <h3 className='text-danger'>{errmsg}</h3> : \"\"\n              }\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary submi_btn w-100 my-4\"\n                onClick={Register}\n              >\n                Register\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default TeacherRegister;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/registerstudent.js",["804"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from '../../../Admin Dashboard/Navbar'\n\nfunction StudentRegister() {\n  const navigate = useNavigate();\n  const [user, setUser] = useState({\n    name: \"\",\n    semester: \"\",\n    email: \"\",\n    rollNum: \"\",\n    contactNum: \"\",\n    enrollNum: \"\",\n    password: \"\"\n  })\n\n  const [errmsg, setErrmsg] = useState(\"\")\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setUser({\n      ...user,\n      [name]: value\n    })\n  }\n\n  async function Register(e) {\n    e.preventDefault()\n\n      const response = await fetch(\"http://localhost:4000/register\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      });\n  \n      const data = await response.json();\n      console.log(data)\n      if (data.status === \"ok\") {\n        setErrmsg(\"\")\n        alert(\"New Student Added succesfully\")\n        navigate('/admindashboard')\n        setErrmsg(\"\")\n      }\n      else if(data.status === \"notok\"){\n        setErrmsg(data.msg)\n      }\n      else{\n        navigate('/admindashboard')\n      }\n    }  \n\n  return (\n    <>\n    <Navbar />\n     <section>\n        <div className=\"container pt-10\">\n          <div className=\"col-sm-8 offset-sm-2 col-lg-6 offset-lg-3 col-xl-4 offset-xl-4 text-center\">\n            <form className=\"rounded bg-white shadow p-5\" >\n              <h3 className=\"text-dark fw-bolder fs-4 mb-2\">Register new Student</h3>\n\n              <label htmlFor=\"floatingInput\">Name</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  name=\"name\"\n                  placeholder=\"name\"\n                  value={user.name}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingInput\">Semester</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  name=\"semester\"\n                  placeholder=\"Semester\"\n                  value={user.semester}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingemail\">Email</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingemail\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={user.email}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingid\">Roll Number</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingid\"\n                  name=\"rollNum\"\n                  placeholder=\"Roll Number\"\n                  value={user.rollNum}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingcontact\">Contact Number</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingcontact\"\n                  name=\"contactNum\"\n                  placeholder=\"Contact Number\"\n                  value={user.contactNum}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingInput\">Enrollment Number</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"floatingInput\"\n                  name=\"enrollNum\"\n                  placeholder=\"Enrollment Number\"\n                  value={user.enrollNum}\n                  onChange={handleChange}\n                />\n              </div>\n\n              <label htmlFor=\"floatingPassword\">Password</label>\n              <div className=\"form-floating mb-3\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"floatingPassword\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={user.password}\n                  onChange={handleChange}\n                />\n              </div>\n\n              {\n                errmsg ? <h3 className='text-danger'>{errmsg}</h3> : \"\"\n              }\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary submi_btn w-100 my-4\"\n                onClick={Register}\n              >\n                Register\n              </button>\n            </form>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default StudentRegister;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/registermultiplestudents.js",["805"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from '../../../Admin Dashboard/Navbar'\nimport \"./registermultiple.css\"\nimport * as XLSX from 'xlsx'\nimport List from './List'\n\nfunction StudentRegister() {\n  const navigate = useNavigate();\n  const [filename, setFilename] = useState(\"\");\n  const [jsonData, setJsonData] = useState([])\n  const [visible, setVisible] = useState(false)\n  const [errmsg, setErrmsg] = useState(\"\")\n  const [success, setSuccess] = useState(false)\n  const handleFile = async (e) => {\n\n    const file = e.target.files[0];\n    setFilename(file.name)\n    const data = await file.arrayBuffer();\n    const workbook = XLSX.read(data)\n\n    const worksheet = workbook.Sheets[workbook.SheetNames[0]];\n    setJsonData(XLSX.utils.sheet_to_json(worksheet))\n    console.log(jsonData);\n    setVisible(true)\n\n  }\n  console.log(jsonData);\n\n  async function RegisterAll(e) {\n    e.preventDefault()\n\n    const response = await fetch(\"http://localhost:4000/registerall\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(jsonData),\n    });\n\n    const data = await response.json();\n    setSuccess(data.success)\n    setTimeout(() => {\n      setSuccess(false)\n      navigate('/admindashboard')\n    }, 2500)\n    console.log(data)\n    if (data.status === \"ok\") {\n      setErrmsg(\"\")\n\n    }\n    else {\n      setErrmsg(data.msg)\n      navigate('/admindashboard')\n    }\n  }\n\n\n  return (\n    <>\n      <div className=\"height100vh\">\n        <Navbar />\n        <div className=\"text-center\"> <h2 className=\"text-dark fw-bolder fs-2 mb-3\">Register Multipe Students</h2></div>\n        <section className=\"registermultiplebody\">\n          <div className=\"file-card\">\n            <div className=\"file-inputs\">\n              <input\n                type=\"file\"\n                onChange={(e) => handleFile(e)}\n              />\n              <button>Select File</button>\n            </div>\n            {filename && <div className=\"fileuploaddisplay\">{filename}</div>}\n            <div className=\"infocontent\">\n              <p className=\"main\">Supported files</p>\n              <p className=\"info\">xlsx</p>\n            </div>\n            {\n              errmsg ? <h3 className='text-danger'>{errmsg}</h3> : \"\"\n            }\n          </div>\n\n          {visible &&\n            <div className='overflowxauto mt-4'>\n              <table className='table table-striped'>\n                <thead className='heading-2'>\n                  <tr >\n                    <th>Name</th>\n                    <th>Semester</th>\n                    <th>Email</th>\n                    <th>Roll No.</th>\n                    <th>Contact No.</th>\n                    <th>Enrollment No.</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <List jsonData={jsonData} />\n                </tbody>\n              </table>\n\n              <div className='text-center'>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary  my-1\"\n                  onClick={RegisterAll}\n                >\n                  Register All\n                </button>\n              </div>\n\n            </div>}\n        </section>\n\n        {success && <div className=\"container-fluid blacky\">\n          <div className=\"success\">\n            <div classNam=\"wrappertick\"> <svg className=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"> <circle className=\"checkmark__circle\" cx={26} cy={26} r={25} fill=\"none\" /> <path className=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n            </svg>\n            </div>\n            <h4>Students Registered succesfully</h4>\n          </div>\n        </div>}\n      </div>\n    </>\n  );\n}\n\nexport default StudentRegister;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/Navbar.js",[],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance list/List.js",["806","807","808"],"import React, { useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./attendance.css\";\n\nconst List = ({ students, status, setstatus }) => {\n  useEffect(() => {\n    let obj = {};\n    {\n      students.map((student) => {\n        const { name } = student;\n        obj[name] = false;\n      });\n    }\n    setstatus(obj);\n  }, [students]);\n\n  return (\n    <>\n      {students.map((student) => {\n        const { name, rollNum } = student;\n        return (\n          <tr>\n            <td>\n              {name} <br />\n {rollNum}\n            </td>\n            <td>\n              <div className=\"form-check\">\n                <input\n                  className=\"checkbox\"\n                  type=\"checkbox\"\n                  id=\"flexCheckChecked1\"\n                  onChange={(e) =>\n                    setstatus({ ...status, [`${name}`]: e.target.checked })\n                  }\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      })}\n    </>\n  );\n};\n\nexport default List;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin Dashboard/List.js",["809"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {CSVLink} from 'react-csv'\nconst List = ({data2}) => {\n  return (\n   <>\n    {data2.map((data)=>{\n        const {date,name,subject,semester}=data;\n        return(\n            <>\n               <tr>\n            <td>\n              {name}\n            </td>\n            <td>\n              {subject}\n            </td>\n            <td>\n              {date}\n            </td>\n            <td>\n                {semester}\n            </td>\n          </tr>\n            </>\n        )\n     })}\n   </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Filters/List.js",["810"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {CSVLink} from 'react-csv'\nconst List = ({student}) => {\n  return (\n   <>\n    {student.map((stu)=>{\n        const {date,name,attendanceStatus,subject}=stu;\n        return(\n            <>\n               <tr>\n            <td>\n              {name}\n            </td>\n            <td>\n              {subject}\n            </td>\n            <td>\n              {date}\n            </td>\n            <td>\n              {attendanceStatus}\n            </td>\n          </tr>\n            </>\n        )\n     })}\n   </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Student_dashboard/Navbar.js",["811","812","813","814","815","816","817","818","819","820","821"],"import React, { useEffect, useState } from \"react\";\nimport './Navbar.css';\nimport { useNavigate } from \"react-router-dom\"\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\nimport logo from './image.png'\nimport jwt from 'jsonwebtoken'\n\n\n\nfunction Navbar() {\n    const navigate = useNavigate();\n    const [sidebar, setSidebar] = React.useState(false);\n    const [sem, setsem] = React.useState(false);\n    const showsemesterhandler = () => setsem(!sem);\n    const showSidebar = () => setSidebar(!sidebar);\n    const [sem1, setSem1] = useState(false)\n    const [sem2, setSem2] = useState(false)\n    const [sem3, setSem3] = useState(false)\n    const [sem4, setSem4] = useState(false)\n\n    async function populatenavbar() {\n        const req = await fetch('http://localhost:4000/dashboard', {\n            headers: {\n                'x-access-token': localStorage.getItem('token'),\n\n            },\n        })\n\n        const json = await req.json()\n        if (json.status == \"ok\") {\n            if (json.semester == \"Sem-1\") {\n                setSem1(true)\n            }\n\n            else if (json.semester == \"Sem-2\") {\n                setSem2(true)\n            }\n            else if (json.semester == \"Sem-3\") {\n                setSem3(true)\n            }\n\n            else if (json.semester == \"Sem-4\") {\n                setSem4(true)\n            }\n        }\n      \n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const user = jwt.decode(token)\n            if (!user) {\n                localStorage.removeItem('token')\n                navigate(\"/\");\n            } else {\n                populatenavbar()\n            }\n        }\n    }, [])\n\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#fff' }}>\n                <div className='navbar'>\n                    <Link to='#' className='menu-bars'>\n                        <FaIcons.FaBars onClick={showSidebar} />\n                    </Link>\n                    <div className=\"heading\">\n                        <i class=\"fa fa-bell mt-1 fa-2x\"></i>\n                        <Link to=\"/dashboard/profile\"><div className=\"button\"><img src={logo} alt=\"...\" class=\"profilePic\"></img></div></Link>\n\n                    </div>\n                </div>\n                <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n                    <ul className='nav-menu-items' >\n                        <li className='navbar-toggle'>\n                            <FaIcons.FaCaretLeft size={40} onClick={showSidebar} />\n                            <span>Classopedia</span>\n                        </li>\n                        <li className=\"nav-text\">\n                            <AiIcons.AiFillHome color='rgb(0, 104, 74)' />\n                            <Link to=\"/dashboard\"><span>Home</span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaUserCircle color='rgb(0, 104, 74)' />\n                            <Link to=\"/dashboard/profile\"><span>Profile</span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaRegCalendarCheck color='rgb(0, 104, 74)' />\n                            <Link to='/scheduledclass'><span><p>Scheduled Classes</p></span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaBookReader color='rgb(0, 104, 74)' />\n                            <Link to='/scheduledtests'><span><p>Scheduled Tests</p></span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaRegListAlt color='rgb(0, 104, 74)' />\n                            <Link to='/assignments'><span><p>Assignments</p></span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaBook color='rgb(0, 104, 74)' />\n                            <Link to='/studymaterial'><span><p>Study Material</p></span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaUserCheck color='rgb(0, 104, 74)' />\n                            <Link to='/attendancereport'><span><p>Attendance Report</p></span></Link>\n                        </li>\n                        <li className=\"nav-text\">\n                            <FaIcons.FaSignInAlt color='rgb(0, 104, 74)' />\n                            <span onClick={() => {\n                                localStorage.removeItem('token')\n                                navigate(\"/\")\n                            }}>Logout</span>\n                        </li>\n                    </ul>\n                </nav>\n            </IconContext.Provider>\n        </>\n    );\n}\n\nexport default Navbar;","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/semesterwise/list.js",["822"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {CSVLink} from 'react-csv'\nconst List = ({material}) => {\n  return (\n   <>\n    {material.map((teach)=>{\n        const {teacher,subject,date,file}=teach;\n        return(\n            <>\n               <tr>\n            <td>{teacher}\n            </td>\n            <td>\n              {subject}\n            </td>\n            <td>\n              {file}\n            </td>\n            <td>\n              {date}\n            </td>\n          </tr>\n            </>\n        )\n     })}\n   </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Admin/Admin Dashboard/Register/List.js",["823"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {CSVLink} from 'react-csv'\nconst List = ({jsonData}) => {\n  return (\n   <>\n    {jsonData.map((data)=>{\n        const {name,semester, email, rollNum, contactNum, enrollNum,}=data;\n        return(\n            <>\n               <tr>\n            <td>\n              {name}\n            </td>\n            <td>\n                {semester}\n            </td>\n            <td>\n                {email}\n            </td>\n            <td>\n                {rollNum}\n            </td>\n\n            <td>\n                {contactNum}\n            </td>\n            <td>\n                {enrollNum}\n            </td>\n          </tr>\n            </>\n        )\n     })}\n   </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/list.js",["824"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CSVLink } from 'react-csv'\nconst List = ({ assignments,handleclick }) => {\n  return (\n    <>\n      {assignments.map((teach) => {\n        const {date, teacher, subject, deadline, file,_id } = teach;\n        return (\n          <>\n            <tr>\n              <td>\n                {date}\n              </td>\n              <td>{teacher}\n              </td>\n              <td>\n                {subject}\n              </td>\n              <td>\n                {deadline}\n              </td>\n              <td>\n                {file}\n              </td>\n              <td>\n                <button value={_id}  style={{backgroundColor:'#007bff', color:'white',borderRadius:\"10px\",border:\"none\", height:\"30px\", width:\"10rem\",opacity:\"0.8\"}} onClick={handleclick} >View Submissions</button>\n              </td>\n            </tr>\n          </>\n        )\n      })}\n    </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_test_List/list.js",["825"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {CSVLink} from 'react-csv'\nconst List = ({tests}) => {\n  return (\n   <>\n    {tests.map((test)=>{\n        const {name,subject,date,time}=test;\n        return(\n            <>\n               <tr>\n            <td>{name}\n            </td>\n            <td>\n              {subject}\n            </td>\n            <td>\n              {date}\n            </td>\n            <td>\n              {time}\n            </td>\n          </tr>\n            </>\n        )\n     })}\n   </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/semesterwise/list.js",["826","827"],"import React, { useEffect } from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CSVLink } from 'react-csv'\nconst List = ({ assignments, AssignmentSubmit, files, setfile, key, removefileid, setremovefileid, temp, setTemp,setassignment_id }) => {\n  useEffect(() =>{\n    if(files.id !== \"\")\n    {\n      localStorage.setItem(files.id, files.name)\n      setTemp({id: files.id, name: files.name})\n      setremovefileid(\"\")\n    }\n  },[files])\n  return (\n    <>\n      {assignments.map((teach, index) => {\n        const { _id,date, teacher, subject, deadline, file} = teach;\n        // localStorage.setItem(_id,\"\")\n        \n        return (\n          <>\n            <tr >\n              <td>\n                {date}\n              </td>\n              <td>{teacher}\n              </td>\n              <td>\n                {subject}\n              </td>\n              <td>\n                {deadline}\n              </td>\n              <td>\n                {file}    \n              </td>\n             \n              <td id={_id}>\n                {/* <form id=\"uploadandsubmitblock\"> */}\n                <form id=\"uploadandsubmitblock\" color='red'>\n                  <input type=\"file\" id='inputfilechoose' value={\"\"} onChange={(e) => {\n                    setfile({id: _id, name: e.target.value}\n                     \n                      )\n                   setassignment_id(_id)\n                     }} />\n                  <button className='upload_button' style={{backgroundColor:'#007bff', color:'white'}}>Upload</button>\n                     {/* <span>{files}</span> */}\n                  <button className='submit_button' type='submit' onClick={   (e)=>{AssignmentSubmit(e, _id)}}>Submit</button>\n\n                </form>\n                <div style={{color:'blue'}}>{removefileid !== _id && (localStorage.getItem(_id) || (_id===temp.id && temp.name)) }</div>\n\n              </td>\n            </tr>\n          </>\n        )\n      })}\n    </>\n  )\n}\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Study Material/list.js",["828"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { CSVLink } from 'react-csv'\nconst List = ({ material }) => {\n  return (\n    <>\n      {material.map((teach) => {\n        const { teacher, subject, semester, file } = teach;\n        return (\n          <>\n            <tr>\n              <td>{teacher}\n              </td>\n              <td>\n                {subject}\n              </td>\n              <td>\n                {semester}\n              </td>\n              <td>\n                {file}\n              </td>\n            </tr>\n          </>\n        )\n      })}\n    </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Attendance Report/list2.js",["829"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {CSVLink} from 'react-csv'\nconst List = ({attendmaterial}) => {\n  return (\n   <>\n    {attendmaterial.map((stu)=>{\n        const {date,attendanceStatus,subject}=stu;\n        return(\n            <>\n            <tr>\n            <td>\n                {subject}\n            </td>\n            <td>\n              {date}\n            </td>\n            <td>\n                {attendanceStatus}\n            </td>\n          </tr>\n            </>\n        )\n     })}\n   </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Scheduled_Class_List/list.js",["830"],"import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {CSVLink} from 'react-csv'\nconst List = ({classes}) => {\n  return (\n   <>\n    {classes.map((teach)=>{\n        const {name,subject,date,time}=teach;\n        return(\n            <>\n               <tr>\n            <td>{name}\n            </td>\n            <td>\n              {subject}\n            </td>\n            <td>\n              {date}\n            </td>\n            <td>\n              {time}\n            </td>\n          </tr>\n            </>\n        )\n     })}\n   </>\n  )\n}\n\nexport default List","/Users/anassaifi/Desktop/ISD/frontend/src/components/Teacher_dashboard/List.js",["831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855"],"import React from \"react\";\n\nconst List = ({ notification, teacher }) => {\n    console.log(\"notifications : \",notification)\n\n    const notifi=notification.filter((data) => {\n      if(teacher == \"Unmesh Shukla\")\n      {\n        if(data.subject==\"Database Systems\" || data.subject==\"Algorithms and Data Structure\" || data.subject==\"Cloud Computing\" || data.subject==\"Health Informatics\")\n        {\n          return data\n        }\n      }\n      else if(teacher == \"Nitisha Aggarwal\")\n      {\n        if(data.subject==\"Software Design & Programming\" || data.subject==\"Computer Communication and Networks\" || data.subject==\"Operating Systems\" || data.subject==\"Information System Design\" || data.subject==\"Internet of Things Systems, Security and Cloud\")\n        {\n          return data\n        }\n      }\n      else if(teacher == \"M.K Das\")\n      {\n        if(data.subject==\"Mathematical Foundation of Computing\" || data.subject==\"Applied Machine Learning\" || data.subject==\"Software Engineering\" || data.subject==\"Research Methods in Informatics\")\n        {\n          return data\n        }\n      }\n      else if(teacher == \"Sunil Kumar\")\n      {\n        if(data.subject==\"Computer System Architecture\")\n        {\n          return data\n        }\n      }\n      else if(teacher == \"Sanjeev Singh\")\n      {\n        if(data.subject==\"Open Elective-1\")\n        {\n          return data\n        }\n      }\n      else if(teacher == \"Manish\")\n      {\n        if(data.subject==\"IT Planning and Management\" || data.subject==\"Algorithms and Data Structure\" || data.subject==\"Cloud Computing\")\n        {\n          return data\n        }\n      }\n    })\n    console.log(notifi)\n  \n  return (\n    <>\n     {notifi.map((noti)=>{\n        const {name,subject}=noti;\n        return(\n            \n            <>\n            \n            <div className=\"container noti\">\n\n<h5>{name} has Submitted the assignment of {subject}</h5>\n\n            </div>\n            \n            </>\n        )\n     })}\n    </>\n  );\n};\n\nexport default List;\n","/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/SubmittedAssignments.js",["856","857","858"],"/Users/anassaifi/Desktop/ISD/frontend/src/components/Assignment_report/list2.js",[],{"ruleId":"859","replacedBy":"860"},{"ruleId":"861","replacedBy":"862"},{"ruleId":"863","severity":1,"message":"864","line":85,"column":55,"nodeType":"865","messageId":"866","endLine":85,"endColumn":75},{"ruleId":"863","severity":1,"message":"867","line":86,"column":55,"nodeType":"865","messageId":"866","endLine":86,"endColumn":75},{"ruleId":"863","severity":1,"message":"868","line":87,"column":58,"nodeType":"865","messageId":"866","endLine":87,"endColumn":82},{"ruleId":"863","severity":1,"message":"869","line":91,"column":45,"nodeType":"865","messageId":"866","endLine":91,"endColumn":66},{"ruleId":"863","severity":1,"message":"870","line":92,"column":53,"nodeType":"865","messageId":"866","endLine":92,"endColumn":72},{"ruleId":"863","severity":1,"message":"871","line":94,"column":57,"nodeType":"865","messageId":"866","endLine":94,"endColumn":73},{"ruleId":"863","severity":1,"message":"872","line":95,"column":48,"nodeType":"865","messageId":"866","endLine":95,"endColumn":70},{"ruleId":"863","severity":1,"message":"873","line":96,"column":49,"nodeType":"865","messageId":"866","endLine":96,"endColumn":72},{"ruleId":"863","severity":1,"message":"874","line":97,"column":59,"nodeType":"865","messageId":"866","endLine":97,"endColumn":87},{"ruleId":"863","severity":1,"message":"875","line":98,"column":76,"nodeType":"865","messageId":"866","endLine":98,"endColumn":124},{"ruleId":"863","severity":1,"message":"876","line":99,"column":52,"nodeType":"865","messageId":"866","endLine":99,"endColumn":73},{"ruleId":"863","severity":1,"message":"877","line":100,"column":60,"nodeType":"865","messageId":"866","endLine":100,"endColumn":79},{"ruleId":"863","severity":1,"message":"878","line":120,"column":50,"nodeType":"865","messageId":"866","endLine":120,"endColumn":74},{"ruleId":"863","severity":1,"message":"879","line":121,"column":50,"nodeType":"865","messageId":"866","endLine":121,"endColumn":73},{"ruleId":"863","severity":1,"message":"880","line":122,"column":47,"nodeType":"865","messageId":"866","endLine":122,"endColumn":76},{"ruleId":"863","severity":1,"message":"881","line":123,"column":49,"nodeType":"865","messageId":"866","endLine":123,"endColumn":74},{"ruleId":"863","severity":1,"message":"882","line":124,"column":52,"nodeType":"865","messageId":"866","endLine":124,"endColumn":80},{"ruleId":"863","severity":1,"message":"883","line":125,"column":66,"nodeType":"865","messageId":"866","endLine":125,"endColumn":91},{"ruleId":"863","severity":1,"message":"884","line":141,"column":67,"nodeType":"865","messageId":"866","endLine":141,"endColumn":88},{"ruleId":"863","severity":1,"message":"885","line":146,"column":63,"nodeType":"865","messageId":"866","endLine":146,"endColumn":82},{"ruleId":"886","severity":1,"message":"887","line":17,"column":10,"nodeType":"888","messageId":"889","endLine":17,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":33,"column":17,"nodeType":"892","messageId":"893","endLine":33,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":37,"column":17,"nodeType":"892","messageId":"893","endLine":37,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":41,"column":17,"nodeType":"892","messageId":"893","endLine":41,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":45,"column":17,"nodeType":"892","messageId":"893","endLine":45,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":50,"column":58,"nodeType":"892","messageId":"893","endLine":50,"endColumn":60},{"ruleId":"894","severity":1,"message":"895","line":66,"column":6,"nodeType":"896","endLine":66,"endColumn":8,"suggestions":"897"},{"ruleId":"886","severity":1,"message":"898","line":74,"column":13,"nodeType":"888","messageId":"889","endLine":74,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":32,"column":17,"nodeType":"892","messageId":"893","endLine":32,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":36,"column":17,"nodeType":"892","messageId":"893","endLine":36,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":40,"column":17,"nodeType":"892","messageId":"893","endLine":40,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":44,"column":17,"nodeType":"892","messageId":"893","endLine":44,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":49,"column":58,"nodeType":"892","messageId":"893","endLine":49,"endColumn":60},{"ruleId":"894","severity":1,"message":"895","line":65,"column":6,"nodeType":"896","endLine":65,"endColumn":8,"suggestions":"899"},{"ruleId":"886","severity":1,"message":"898","line":73,"column":13,"nodeType":"888","messageId":"889","endLine":73,"endColumn":21},{"ruleId":"886","severity":1,"message":"887","line":17,"column":10,"nodeType":"888","messageId":"889","endLine":17,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":33,"column":18,"nodeType":"892","messageId":"893","endLine":33,"endColumn":20},{"ruleId":"890","severity":1,"message":"891","line":37,"column":17,"nodeType":"892","messageId":"893","endLine":37,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":41,"column":17,"nodeType":"892","messageId":"893","endLine":41,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":45,"column":17,"nodeType":"892","messageId":"893","endLine":45,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":50,"column":58,"nodeType":"892","messageId":"893","endLine":50,"endColumn":60},{"ruleId":"894","severity":1,"message":"895","line":66,"column":6,"nodeType":"896","endLine":66,"endColumn":8,"suggestions":"900"},{"ruleId":"886","severity":1,"message":"898","line":74,"column":13,"nodeType":"888","messageId":"889","endLine":74,"endColumn":21},{"ruleId":"901","severity":1,"message":"902","line":11,"column":17,"nodeType":"865","endLine":11,"endColumn":69},{"ruleId":"901","severity":1,"message":"902","line":14,"column":13,"nodeType":"865","endLine":14,"endColumn":51},{"ruleId":"901","severity":1,"message":"902","line":15,"column":13,"nodeType":"865","endLine":15,"endColumn":51},{"ruleId":"890","severity":1,"message":"891","line":32,"column":19,"nodeType":"892","messageId":"893","endLine":32,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":35,"column":19,"nodeType":"892","messageId":"893","endLine":35,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":38,"column":19,"nodeType":"892","messageId":"893","endLine":38,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":41,"column":19,"nodeType":"892","messageId":"893","endLine":41,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":45,"column":58,"nodeType":"892","messageId":"893","endLine":45,"endColumn":60},{"ruleId":"894","severity":1,"message":"895","line":63,"column":6,"nodeType":"896","endLine":63,"endColumn":8,"suggestions":"903"},{"ruleId":"886","severity":1,"message":"898","line":71,"column":13,"nodeType":"888","messageId":"889","endLine":71,"endColumn":21},{"ruleId":"886","severity":1,"message":"904","line":26,"column":17,"nodeType":"888","messageId":"889","endLine":26,"endColumn":32},{"ruleId":"886","severity":1,"message":"905","line":28,"column":10,"nodeType":"888","messageId":"889","endLine":28,"endColumn":15},{"ruleId":"886","severity":1,"message":"906","line":28,"column":16,"nodeType":"888","messageId":"889","endLine":28,"endColumn":24},{"ruleId":"890","severity":1,"message":"891","line":49,"column":19,"nodeType":"892","messageId":"893","endLine":49,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":52,"column":19,"nodeType":"892","messageId":"893","endLine":52,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":55,"column":19,"nodeType":"892","messageId":"893","endLine":55,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":58,"column":19,"nodeType":"892","messageId":"893","endLine":58,"endColumn":21},{"ruleId":"886","severity":1,"message":"907","line":68,"column":13,"nodeType":"888","messageId":"889","endLine":68,"endColumn":16},{"ruleId":"894","severity":1,"message":"895","line":170,"column":6,"nodeType":"896","endLine":170,"endColumn":8,"suggestions":"908"},{"ruleId":"890","severity":1,"message":"891","line":35,"column":19,"nodeType":"892","messageId":"893","endLine":35,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":38,"column":19,"nodeType":"892","messageId":"893","endLine":38,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":41,"column":19,"nodeType":"892","messageId":"893","endLine":41,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":44,"column":19,"nodeType":"892","messageId":"893","endLine":44,"endColumn":21},{"ruleId":"886","severity":1,"message":"898","line":55,"column":13,"nodeType":"888","messageId":"889","endLine":55,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":156,"column":6,"nodeType":"896","endLine":156,"endColumn":8,"suggestions":"909"},{"ruleId":"890","severity":1,"message":"891","line":36,"column":19,"nodeType":"892","messageId":"893","endLine":36,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":39,"column":19,"nodeType":"892","messageId":"893","endLine":39,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":42,"column":19,"nodeType":"892","messageId":"893","endLine":42,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":45,"column":19,"nodeType":"892","messageId":"893","endLine":45,"endColumn":21},{"ruleId":"886","severity":1,"message":"907","line":55,"column":13,"nodeType":"888","messageId":"889","endLine":55,"endColumn":16},{"ruleId":"894","severity":1,"message":"895","line":154,"column":6,"nodeType":"896","endLine":154,"endColumn":8,"suggestions":"910"},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":40,"column":19,"nodeType":"892","messageId":"893","endLine":40,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":43,"column":19,"nodeType":"892","messageId":"893","endLine":43,"endColumn":21},{"ruleId":"886","severity":1,"message":"898","line":55,"column":13,"nodeType":"888","messageId":"889","endLine":55,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":157,"column":6,"nodeType":"896","endLine":157,"endColumn":8,"suggestions":"911"},{"ruleId":"890","severity":1,"message":"891","line":35,"column":19,"nodeType":"892","messageId":"893","endLine":35,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":38,"column":19,"nodeType":"892","messageId":"893","endLine":38,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":41,"column":19,"nodeType":"892","messageId":"893","endLine":41,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":44,"column":19,"nodeType":"892","messageId":"893","endLine":44,"endColumn":21},{"ruleId":"886","severity":1,"message":"898","line":54,"column":13,"nodeType":"888","messageId":"889","endLine":54,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":162,"column":6,"nodeType":"896","endLine":162,"endColumn":8,"suggestions":"912"},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":40,"column":19,"nodeType":"892","messageId":"893","endLine":40,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":43,"column":19,"nodeType":"892","messageId":"893","endLine":43,"endColumn":21},{"ruleId":"886","severity":1,"message":"907","line":53,"column":13,"nodeType":"888","messageId":"889","endLine":53,"endColumn":16},{"ruleId":"894","severity":1,"message":"895","line":151,"column":6,"nodeType":"896","endLine":151,"endColumn":8,"suggestions":"913"},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":40,"column":19,"nodeType":"892","messageId":"893","endLine":40,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":43,"column":19,"nodeType":"892","messageId":"893","endLine":43,"endColumn":21},{"ruleId":"886","severity":1,"message":"907","line":54,"column":13,"nodeType":"888","messageId":"889","endLine":54,"endColumn":16},{"ruleId":"894","severity":1,"message":"895","line":153,"column":4,"nodeType":"896","endLine":153,"endColumn":6,"suggestions":"914"},{"ruleId":"890","severity":1,"message":"891","line":35,"column":19,"nodeType":"892","messageId":"893","endLine":35,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":38,"column":19,"nodeType":"892","messageId":"893","endLine":38,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":41,"column":19,"nodeType":"892","messageId":"893","endLine":41,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":44,"column":19,"nodeType":"892","messageId":"893","endLine":44,"endColumn":21},{"ruleId":"886","severity":1,"message":"898","line":53,"column":13,"nodeType":"888","messageId":"889","endLine":53,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":155,"column":6,"nodeType":"896","endLine":155,"endColumn":8,"suggestions":"915"},{"ruleId":"886","severity":1,"message":"916","line":12,"column":12,"nodeType":"888","messageId":"889","endLine":12,"endColumn":19},{"ruleId":"894","severity":1,"message":"895","line":51,"column":8,"nodeType":"896","endLine":51,"endColumn":14,"suggestions":"917"},{"ruleId":"886","severity":1,"message":"918","line":8,"column":12,"nodeType":"888","messageId":"889","endLine":8,"endColumn":25},{"ruleId":"886","severity":1,"message":"919","line":8,"column":26,"nodeType":"888","messageId":"889","endLine":8,"endColumn":42},{"ruleId":"886","severity":1,"message":"920","line":6,"column":8,"nodeType":"888","messageId":"889","endLine":6,"endColumn":12},{"ruleId":"894","severity":1,"message":"895","line":58,"column":8,"nodeType":"896","endLine":58,"endColumn":14,"suggestions":"921"},{"ruleId":"886","severity":1,"message":"920","line":7,"column":8,"nodeType":"888","messageId":"889","endLine":7,"endColumn":12},{"ruleId":"894","severity":1,"message":"895","line":50,"column":8,"nodeType":"896","endLine":50,"endColumn":14,"suggestions":"922"},{"ruleId":"886","severity":1,"message":"923","line":4,"column":10,"nodeType":"888","messageId":"889","endLine":4,"endColumn":14},{"ruleId":"886","severity":1,"message":"924","line":6,"column":10,"nodeType":"888","messageId":"889","endLine":6,"endColumn":17},{"ruleId":"894","severity":1,"message":"895","line":79,"column":6,"nodeType":"896","endLine":79,"endColumn":18,"suggestions":"925"},{"ruleId":"894","severity":1,"message":"895","line":43,"column":11,"nodeType":"896","endLine":43,"endColumn":13,"suggestions":"926"},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":24,"column":10,"nodeType":"888","messageId":"889","endLine":24,"endColumn":16},{"ruleId":"890","severity":1,"message":"891","line":44,"column":19,"nodeType":"892","messageId":"893","endLine":44,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":47,"column":19,"nodeType":"892","messageId":"893","endLine":47,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":50,"column":19,"nodeType":"892","messageId":"893","endLine":50,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":53,"column":19,"nodeType":"892","messageId":"893","endLine":53,"endColumn":21},{"ruleId":"890","severity":1,"message":"928","line":58,"column":26,"nodeType":"892","messageId":"893","endLine":58,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":65,"column":68,"nodeType":"892","messageId":"893","endLine":65,"endColumn":70},{"ruleId":"890","severity":1,"message":"891","line":77,"column":56,"nodeType":"892","messageId":"893","endLine":77,"endColumn":58},{"ruleId":"890","severity":1,"message":"891","line":83,"column":59,"nodeType":"892","messageId":"893","endLine":83,"endColumn":61},{"ruleId":"894","severity":1,"message":"929","line":103,"column":5,"nodeType":"896","endLine":103,"endColumn":7,"suggestions":"930"},{"ruleId":"894","severity":1,"message":"931","line":122,"column":3,"nodeType":"896","endLine":122,"endColumn":10,"suggestions":"932"},{"ruleId":"890","severity":1,"message":"891","line":134,"column":13,"nodeType":"892","messageId":"893","endLine":134,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":146,"column":13,"nodeType":"892","messageId":"893","endLine":146,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":155,"column":13,"nodeType":"892","messageId":"893","endLine":155,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":164,"column":13,"nodeType":"892","messageId":"893","endLine":164,"endColumn":15},{"ruleId":"886","severity":1,"message":"924","line":7,"column":13,"nodeType":"888","messageId":"889","endLine":7,"endColumn":20},{"ruleId":"886","severity":1,"message":"933","line":8,"column":13,"nodeType":"888","messageId":"889","endLine":8,"endColumn":20},{"ruleId":"894","severity":1,"message":"895","line":66,"column":8,"nodeType":"896","endLine":66,"endColumn":14,"suggestions":"934"},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":24,"column":10,"nodeType":"888","messageId":"889","endLine":24,"endColumn":16},{"ruleId":"890","severity":1,"message":"891","line":43,"column":19,"nodeType":"892","messageId":"893","endLine":43,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":46,"column":19,"nodeType":"892","messageId":"893","endLine":46,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":49,"column":19,"nodeType":"892","messageId":"893","endLine":49,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":52,"column":19,"nodeType":"892","messageId":"893","endLine":52,"endColumn":21},{"ruleId":"890","severity":1,"message":"928","line":57,"column":26,"nodeType":"892","messageId":"893","endLine":57,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":66,"column":68,"nodeType":"892","messageId":"893","endLine":66,"endColumn":70},{"ruleId":"890","severity":1,"message":"891","line":78,"column":56,"nodeType":"892","messageId":"893","endLine":78,"endColumn":58},{"ruleId":"890","severity":1,"message":"891","line":84,"column":59,"nodeType":"892","messageId":"893","endLine":84,"endColumn":61},{"ruleId":"894","severity":1,"message":"929","line":104,"column":5,"nodeType":"896","endLine":104,"endColumn":7,"suggestions":"935"},{"ruleId":"894","severity":1,"message":"931","line":123,"column":3,"nodeType":"896","endLine":123,"endColumn":10,"suggestions":"936"},{"ruleId":"890","severity":1,"message":"891","line":134,"column":13,"nodeType":"892","messageId":"893","endLine":134,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":146,"column":13,"nodeType":"892","messageId":"893","endLine":146,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":155,"column":13,"nodeType":"892","messageId":"893","endLine":155,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":164,"column":13,"nodeType":"892","messageId":"893","endLine":164,"endColumn":15},{"ruleId":"886","severity":1,"message":"937","line":2,"column":29,"nodeType":"888","messageId":"889","endLine":2,"endColumn":35},{"ruleId":"886","severity":1,"message":"938","line":2,"column":36,"nodeType":"888","messageId":"889","endLine":2,"endColumn":51},{"ruleId":"939","severity":1,"message":"940","line":30,"column":47,"nodeType":"941","messageId":"942","endLine":30,"endColumn":49},{"ruleId":"890","severity":1,"message":"891","line":31,"column":70,"nodeType":"892","messageId":"893","endLine":31,"endColumn":72},{"ruleId":"894","severity":1,"message":"929","line":53,"column":10,"nodeType":"896","endLine":53,"endColumn":12,"suggestions":"943"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":29,"nodeType":"888","messageId":"889","endLine":2,"endColumn":35},{"ruleId":"886","severity":1,"message":"938","line":2,"column":36,"nodeType":"888","messageId":"889","endLine":2,"endColumn":51},{"ruleId":"890","severity":1,"message":"928","line":28,"column":37,"nodeType":"892","messageId":"893","endLine":28,"endColumn":39},{"ruleId":"894","severity":1,"message":"895","line":51,"column":10,"nodeType":"896","endLine":51,"endColumn":12,"suggestions":"944"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":31,"nodeType":"888","messageId":"889","endLine":2,"endColumn":37},{"ruleId":"886","severity":1,"message":"938","line":2,"column":39,"nodeType":"888","messageId":"889","endLine":2,"endColumn":54},{"ruleId":"939","severity":1,"message":"940","line":32,"column":40,"nodeType":"941","messageId":"942","endLine":32,"endColumn":42},{"ruleId":"890","severity":1,"message":"891","line":33,"column":33,"nodeType":"892","messageId":"893","endLine":33,"endColumn":35},{"ruleId":"890","severity":1,"message":"928","line":46,"column":19,"nodeType":"892","messageId":"893","endLine":46,"endColumn":21},{"ruleId":"894","severity":1,"message":"929","line":66,"column":6,"nodeType":"896","endLine":66,"endColumn":8,"suggestions":"945"},{"ruleId":"886","severity":1,"message":"923","line":4,"column":10,"nodeType":"888","messageId":"889","endLine":4,"endColumn":14},{"ruleId":"886","severity":1,"message":"946","line":22,"column":10,"nodeType":"888","messageId":"889","endLine":22,"endColumn":16},{"ruleId":"894","severity":1,"message":"895","line":77,"column":6,"nodeType":"896","endLine":77,"endColumn":17,"suggestions":"947"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":29,"nodeType":"888","messageId":"889","endLine":2,"endColumn":35},{"ruleId":"886","severity":1,"message":"938","line":2,"column":36,"nodeType":"888","messageId":"889","endLine":2,"endColumn":51},{"ruleId":"939","severity":1,"message":"940","line":49,"column":45,"nodeType":"941","messageId":"942","endLine":49,"endColumn":47},{"ruleId":"890","severity":1,"message":"891","line":50,"column":34,"nodeType":"892","messageId":"893","endLine":50,"endColumn":36},{"ruleId":"939","severity":1,"message":"940","line":59,"column":40,"nodeType":"941","messageId":"942","endLine":59,"endColumn":42},{"ruleId":"890","severity":1,"message":"891","line":60,"column":27,"nodeType":"892","messageId":"893","endLine":60,"endColumn":29},{"ruleId":"890","severity":1,"message":"928","line":66,"column":24,"nodeType":"892","messageId":"893","endLine":66,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":79,"column":23,"nodeType":"892","messageId":"893","endLine":79,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":86,"column":32,"nodeType":"892","messageId":"893","endLine":86,"endColumn":34},{"ruleId":"890","severity":1,"message":"891","line":91,"column":32,"nodeType":"892","messageId":"893","endLine":91,"endColumn":34},{"ruleId":"890","severity":1,"message":"891","line":97,"column":32,"nodeType":"892","messageId":"893","endLine":97,"endColumn":34},{"ruleId":"894","severity":1,"message":"948","line":103,"column":9,"nodeType":"896","endLine":103,"endColumn":17,"suggestions":"949"},{"ruleId":"894","severity":1,"message":"895","line":118,"column":10,"nodeType":"896","endLine":118,"endColumn":12,"suggestions":"950"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":29,"nodeType":"888","messageId":"889","endLine":2,"endColumn":35},{"ruleId":"886","severity":1,"message":"938","line":2,"column":36,"nodeType":"888","messageId":"889","endLine":2,"endColumn":51},{"ruleId":"939","severity":1,"message":"940","line":45,"column":45,"nodeType":"941","messageId":"942","endLine":45,"endColumn":47},{"ruleId":"890","severity":1,"message":"891","line":46,"column":34,"nodeType":"892","messageId":"893","endLine":46,"endColumn":36},{"ruleId":"939","severity":1,"message":"940","line":55,"column":40,"nodeType":"941","messageId":"942","endLine":55,"endColumn":42},{"ruleId":"890","severity":1,"message":"891","line":56,"column":27,"nodeType":"892","messageId":"893","endLine":56,"endColumn":29},{"ruleId":"890","severity":1,"message":"928","line":64,"column":29,"nodeType":"892","messageId":"893","endLine":64,"endColumn":31},{"ruleId":"890","severity":1,"message":"891","line":76,"column":23,"nodeType":"892","messageId":"893","endLine":76,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":83,"column":32,"nodeType":"892","messageId":"893","endLine":83,"endColumn":34},{"ruleId":"890","severity":1,"message":"891","line":88,"column":32,"nodeType":"892","messageId":"893","endLine":88,"endColumn":34},{"ruleId":"890","severity":1,"message":"891","line":94,"column":32,"nodeType":"892","messageId":"893","endLine":94,"endColumn":34},{"ruleId":"894","severity":1,"message":"948","line":100,"column":9,"nodeType":"896","endLine":100,"endColumn":17,"suggestions":"951"},{"ruleId":"894","severity":1,"message":"895","line":115,"column":10,"nodeType":"896","endLine":115,"endColumn":12,"suggestions":"952"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":31,"nodeType":"888","messageId":"889","endLine":2,"endColumn":37},{"ruleId":"886","severity":1,"message":"938","line":2,"column":39,"nodeType":"888","messageId":"889","endLine":2,"endColumn":54},{"ruleId":"890","severity":1,"message":"928","line":46,"column":16,"nodeType":"892","messageId":"893","endLine":46,"endColumn":18},{"ruleId":"939","severity":1,"message":"940","line":49,"column":38,"nodeType":"941","messageId":"942","endLine":49,"endColumn":40},{"ruleId":"890","severity":1,"message":"891","line":50,"column":23,"nodeType":"892","messageId":"893","endLine":50,"endColumn":25},{"ruleId":"890","severity":1,"message":"928","line":58,"column":19,"nodeType":"892","messageId":"893","endLine":58,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":64,"column":16,"nodeType":"892","messageId":"893","endLine":64,"endColumn":18},{"ruleId":"890","severity":1,"message":"891","line":73,"column":17,"nodeType":"892","messageId":"893","endLine":73,"endColumn":19},{"ruleId":"890","severity":1,"message":"891","line":80,"column":26,"nodeType":"892","messageId":"893","endLine":80,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":85,"column":26,"nodeType":"892","messageId":"893","endLine":85,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":91,"column":26,"nodeType":"892","messageId":"893","endLine":91,"endColumn":28},{"ruleId":"894","severity":1,"message":"953","line":97,"column":5,"nodeType":"896","endLine":97,"endColumn":14,"suggestions":"954"},{"ruleId":"894","severity":1,"message":"895","line":112,"column":6,"nodeType":"896","endLine":112,"endColumn":8,"suggestions":"955"},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":26,"column":10,"nodeType":"888","messageId":"889","endLine":26,"endColumn":16},{"ruleId":"890","severity":1,"message":"891","line":47,"column":19,"nodeType":"892","messageId":"893","endLine":47,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":50,"column":19,"nodeType":"892","messageId":"893","endLine":50,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":53,"column":19,"nodeType":"892","messageId":"893","endLine":53,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":56,"column":19,"nodeType":"892","messageId":"893","endLine":56,"endColumn":21},{"ruleId":"890","severity":1,"message":"928","line":61,"column":26,"nodeType":"892","messageId":"893","endLine":61,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":69,"column":68,"nodeType":"892","messageId":"893","endLine":69,"endColumn":70},{"ruleId":"890","severity":1,"message":"891","line":81,"column":56,"nodeType":"892","messageId":"893","endLine":81,"endColumn":58},{"ruleId":"890","severity":1,"message":"891","line":87,"column":59,"nodeType":"892","messageId":"893","endLine":87,"endColumn":61},{"ruleId":"890","severity":1,"message":"891","line":101,"column":13,"nodeType":"892","messageId":"893","endLine":101,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":113,"column":13,"nodeType":"892","messageId":"893","endLine":113,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":123,"column":13,"nodeType":"892","messageId":"893","endLine":123,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":133,"column":13,"nodeType":"892","messageId":"893","endLine":133,"endColumn":15},{"ruleId":"894","severity":1,"message":"929","line":156,"column":5,"nodeType":"896","endLine":156,"endColumn":7,"suggestions":"956"},{"ruleId":"894","severity":1,"message":"931","line":175,"column":3,"nodeType":"896","endLine":175,"endColumn":10,"suggestions":"957"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":31,"nodeType":"888","messageId":"889","endLine":2,"endColumn":37},{"ruleId":"886","severity":1,"message":"938","line":2,"column":39,"nodeType":"888","messageId":"889","endLine":2,"endColumn":54},{"ruleId":"890","severity":1,"message":"928","line":31,"column":26,"nodeType":"892","messageId":"893","endLine":31,"endColumn":28},{"ruleId":"894","severity":1,"message":"895","line":52,"column":6,"nodeType":"896","endLine":52,"endColumn":8,"suggestions":"958"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":31,"nodeType":"888","messageId":"889","endLine":2,"endColumn":37},{"ruleId":"886","severity":1,"message":"938","line":2,"column":39,"nodeType":"888","messageId":"889","endLine":2,"endColumn":54},{"ruleId":"894","severity":1,"message":"895","line":45,"column":6,"nodeType":"896","endLine":45,"endColumn":8,"suggestions":"959"},{"ruleId":"890","severity":1,"message":"928","line":31,"column":26,"nodeType":"892","messageId":"893","endLine":31,"endColumn":28},{"ruleId":"894","severity":1,"message":"895","line":52,"column":6,"nodeType":"896","endLine":52,"endColumn":8,"suggestions":"960"},{"ruleId":"886","severity":1,"message":"961","line":54,"column":9,"nodeType":"888","messageId":"889","endLine":54,"endColumn":29},{"ruleId":"886","severity":1,"message":"962","line":61,"column":9,"nodeType":"888","messageId":"889","endLine":61,"endColumn":27},{"ruleId":"886","severity":1,"message":"937","line":2,"column":31,"nodeType":"888","messageId":"889","endLine":2,"endColumn":37},{"ruleId":"886","severity":1,"message":"938","line":2,"column":39,"nodeType":"888","messageId":"889","endLine":2,"endColumn":54},{"ruleId":"886","severity":1,"message":"963","line":10,"column":5,"nodeType":"888","messageId":"889","endLine":10,"endColumn":9},{"ruleId":"939","severity":1,"message":"964","line":69,"column":21,"nodeType":"941","messageId":"965","endLine":69,"endColumn":23},{"ruleId":"939","severity":1,"message":"940","line":88,"column":42,"nodeType":"941","messageId":"942","endLine":88,"endColumn":44},{"ruleId":"890","severity":1,"message":"891","line":89,"column":76,"nodeType":"892","messageId":"893","endLine":89,"endColumn":78},{"ruleId":"890","severity":1,"message":"891","line":89,"column":183,"nodeType":"892","messageId":"893","endLine":89,"endColumn":185},{"ruleId":"890","severity":1,"message":"928","line":96,"column":21,"nodeType":"892","messageId":"893","endLine":96,"endColumn":23},{"ruleId":"890","severity":1,"message":"891","line":107,"column":20,"nodeType":"892","messageId":"893","endLine":107,"endColumn":22},{"ruleId":"890","severity":1,"message":"891","line":112,"column":25,"nodeType":"892","messageId":"893","endLine":112,"endColumn":27},{"ruleId":"890","severity":1,"message":"891","line":115,"column":25,"nodeType":"892","messageId":"893","endLine":115,"endColumn":27},{"ruleId":"890","severity":1,"message":"891","line":119,"column":25,"nodeType":"892","messageId":"893","endLine":119,"endColumn":27},{"ruleId":"894","severity":1,"message":"929","line":136,"column":6,"nodeType":"896","endLine":136,"endColumn":8,"suggestions":"966"},{"ruleId":"886","severity":1,"message":"967","line":13,"column":10,"nodeType":"888","messageId":"889","endLine":13,"endColumn":18},{"ruleId":"886","severity":1,"message":"968","line":13,"column":20,"nodeType":"888","messageId":"889","endLine":13,"endColumn":31},{"ruleId":"890","severity":1,"message":"891","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":31,"column":19,"nodeType":"892","messageId":"893","endLine":31,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":93,"column":6,"nodeType":"896","endLine":93,"endColumn":8,"suggestions":"969"},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":25,"column":10,"nodeType":"888","messageId":"889","endLine":25,"endColumn":16},{"ruleId":"890","severity":1,"message":"891","line":44,"column":19,"nodeType":"892","messageId":"893","endLine":44,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":47,"column":19,"nodeType":"892","messageId":"893","endLine":47,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":50,"column":19,"nodeType":"892","messageId":"893","endLine":50,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":53,"column":19,"nodeType":"892","messageId":"893","endLine":53,"endColumn":21},{"ruleId":"890","severity":1,"message":"928","line":57,"column":26,"nodeType":"892","messageId":"893","endLine":57,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":65,"column":68,"nodeType":"892","messageId":"893","endLine":65,"endColumn":70},{"ruleId":"890","severity":1,"message":"891","line":77,"column":56,"nodeType":"892","messageId":"893","endLine":77,"endColumn":58},{"ruleId":"890","severity":1,"message":"891","line":83,"column":59,"nodeType":"892","messageId":"893","endLine":83,"endColumn":61},{"ruleId":"894","severity":1,"message":"929","line":103,"column":5,"nodeType":"896","endLine":103,"endColumn":7,"suggestions":"970"},{"ruleId":"894","severity":1,"message":"931","line":122,"column":3,"nodeType":"896","endLine":122,"endColumn":10,"suggestions":"971"},{"ruleId":"890","severity":1,"message":"891","line":133,"column":13,"nodeType":"892","messageId":"893","endLine":133,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":145,"column":13,"nodeType":"892","messageId":"893","endLine":145,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":154,"column":13,"nodeType":"892","messageId":"893","endLine":154,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":163,"column":13,"nodeType":"892","messageId":"893","endLine":163,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":27,"column":19,"nodeType":"892","messageId":"893","endLine":27,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":30,"column":19,"nodeType":"892","messageId":"893","endLine":30,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":33,"column":19,"nodeType":"892","messageId":"893","endLine":33,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":36,"column":19,"nodeType":"892","messageId":"893","endLine":36,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":92,"column":6,"nodeType":"896","endLine":92,"endColumn":8,"suggestions":"972"},{"ruleId":"890","severity":1,"message":"891","line":27,"column":19,"nodeType":"892","messageId":"893","endLine":27,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":30,"column":19,"nodeType":"892","messageId":"893","endLine":30,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":33,"column":19,"nodeType":"892","messageId":"893","endLine":33,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":36,"column":19,"nodeType":"892","messageId":"893","endLine":36,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":92,"column":6,"nodeType":"896","endLine":92,"endColumn":8,"suggestions":"973"},{"ruleId":"890","severity":1,"message":"891","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":31,"column":19,"nodeType":"892","messageId":"893","endLine":31,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":92,"column":6,"nodeType":"896","endLine":92,"endColumn":8,"suggestions":"974"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":31,"nodeType":"888","messageId":"889","endLine":2,"endColumn":37},{"ruleId":"886","severity":1,"message":"938","line":2,"column":39,"nodeType":"888","messageId":"889","endLine":2,"endColumn":54},{"ruleId":"886","severity":1,"message":"975","line":4,"column":8,"nodeType":"888","messageId":"889","endLine":4,"endColumn":13},{"ruleId":"886","severity":1,"message":"976","line":6,"column":8,"nodeType":"888","messageId":"889","endLine":6,"endColumn":17},{"ruleId":"886","severity":1,"message":"977","line":8,"column":10,"nodeType":"888","messageId":"889","endLine":8,"endColumn":18},{"ruleId":"886","severity":1,"message":"923","line":11,"column":10,"nodeType":"888","messageId":"889","endLine":11,"endColumn":14},{"ruleId":"886","severity":1,"message":"963","line":12,"column":5,"nodeType":"888","messageId":"889","endLine":12,"endColumn":9},{"ruleId":"890","severity":1,"message":"928","line":30,"column":26,"nodeType":"892","messageId":"893","endLine":30,"endColumn":28},{"ruleId":"894","severity":1,"message":"895","line":49,"column":6,"nodeType":"896","endLine":49,"endColumn":8,"suggestions":"978"},{"ruleId":"890","severity":1,"message":"891","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":31,"column":19,"nodeType":"892","messageId":"893","endLine":31,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":89,"column":6,"nodeType":"896","endLine":89,"endColumn":8,"suggestions":"979"},{"ruleId":"890","severity":1,"message":"891","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":31,"column":19,"nodeType":"892","messageId":"893","endLine":31,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":90,"column":6,"nodeType":"896","endLine":90,"endColumn":8,"suggestions":"980"},{"ruleId":"886","severity":1,"message":"937","line":2,"column":31,"nodeType":"888","messageId":"889","endLine":2,"endColumn":37},{"ruleId":"886","severity":1,"message":"938","line":2,"column":39,"nodeType":"888","messageId":"889","endLine":2,"endColumn":54},{"ruleId":"939","severity":1,"message":"940","line":46,"column":41,"nodeType":"941","messageId":"942","endLine":46,"endColumn":43},{"ruleId":"890","severity":1,"message":"891","line":47,"column":24,"nodeType":"892","messageId":"893","endLine":47,"endColumn":26},{"ruleId":"890","severity":1,"message":"928","line":55,"column":21,"nodeType":"892","messageId":"893","endLine":55,"endColumn":23},{"ruleId":"890","severity":1,"message":"891","line":66,"column":19,"nodeType":"892","messageId":"893","endLine":66,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":72,"column":24,"nodeType":"892","messageId":"893","endLine":72,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":76,"column":24,"nodeType":"892","messageId":"893","endLine":76,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":81,"column":24,"nodeType":"892","messageId":"893","endLine":81,"endColumn":26},{"ruleId":"894","severity":1,"message":"948","line":86,"column":6,"nodeType":"896","endLine":86,"endColumn":13,"suggestions":"981"},{"ruleId":"894","severity":1,"message":"895","line":104,"column":6,"nodeType":"896","endLine":104,"endColumn":8,"suggestions":"982"},{"ruleId":"886","severity":1,"message":"961","line":106,"column":9,"nodeType":"888","messageId":"889","endLine":106,"endColumn":29},{"ruleId":"886","severity":1,"message":"962","line":113,"column":9,"nodeType":"888","messageId":"889","endLine":113,"endColumn":27},{"ruleId":"890","severity":1,"message":"891","line":27,"column":19,"nodeType":"892","messageId":"893","endLine":27,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":30,"column":19,"nodeType":"892","messageId":"893","endLine":30,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":33,"column":19,"nodeType":"892","messageId":"893","endLine":33,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":36,"column":19,"nodeType":"892","messageId":"893","endLine":36,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":92,"column":6,"nodeType":"896","endLine":92,"endColumn":8,"suggestions":"983"},{"ruleId":"890","severity":1,"message":"891","line":28,"column":19,"nodeType":"892","messageId":"893","endLine":28,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":31,"column":19,"nodeType":"892","messageId":"893","endLine":31,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":34,"column":19,"nodeType":"892","messageId":"893","endLine":34,"endColumn":21},{"ruleId":"890","severity":1,"message":"891","line":37,"column":19,"nodeType":"892","messageId":"893","endLine":37,"endColumn":21},{"ruleId":"894","severity":1,"message":"895","line":90,"column":6,"nodeType":"896","endLine":90,"endColumn":8,"suggestions":"984"},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":26,"column":9,"nodeType":"888","messageId":"889","endLine":26,"endColumn":15},{"ruleId":"890","severity":1,"message":"928","line":42,"column":26,"nodeType":"892","messageId":"893","endLine":42,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":51,"column":69,"nodeType":"892","messageId":"893","endLine":51,"endColumn":71},{"ruleId":"890","severity":1,"message":"891","line":63,"column":57,"nodeType":"892","messageId":"893","endLine":63,"endColumn":59},{"ruleId":"890","severity":1,"message":"891","line":70,"column":60,"nodeType":"892","messageId":"893","endLine":70,"endColumn":62},{"ruleId":"890","severity":1,"message":"891","line":85,"column":13,"nodeType":"892","messageId":"893","endLine":85,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":98,"column":13,"nodeType":"892","messageId":"893","endLine":98,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":109,"column":13,"nodeType":"892","messageId":"893","endLine":109,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":120,"column":13,"nodeType":"892","messageId":"893","endLine":120,"endColumn":15},{"ruleId":"894","severity":1,"message":"929","line":143,"column":5,"nodeType":"896","endLine":143,"endColumn":7,"suggestions":"985"},{"ruleId":"894","severity":1,"message":"931","line":162,"column":3,"nodeType":"896","endLine":162,"endColumn":10,"suggestions":"986"},{"ruleId":"886","severity":1,"message":"987","line":15,"column":11,"nodeType":"888","messageId":"889","endLine":15,"endColumn":30},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":24,"column":9,"nodeType":"888","messageId":"889","endLine":24,"endColumn":15},{"ruleId":"890","severity":1,"message":"928","line":41,"column":26,"nodeType":"892","messageId":"893","endLine":41,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":51,"column":69,"nodeType":"892","messageId":"893","endLine":51,"endColumn":71},{"ruleId":"890","severity":1,"message":"891","line":63,"column":57,"nodeType":"892","messageId":"893","endLine":63,"endColumn":59},{"ruleId":"890","severity":1,"message":"891","line":69,"column":60,"nodeType":"892","messageId":"893","endLine":69,"endColumn":62},{"ruleId":"894","severity":1,"message":"929","line":89,"column":5,"nodeType":"896","endLine":89,"endColumn":7,"suggestions":"988"},{"ruleId":"894","severity":1,"message":"931","line":108,"column":3,"nodeType":"896","endLine":108,"endColumn":10,"suggestions":"989"},{"ruleId":"890","severity":1,"message":"891","line":119,"column":13,"nodeType":"892","messageId":"893","endLine":119,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":132,"column":13,"nodeType":"892","messageId":"893","endLine":132,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":142,"column":13,"nodeType":"892","messageId":"893","endLine":142,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":152,"column":13,"nodeType":"892","messageId":"893","endLine":152,"endColumn":15},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":24,"column":9,"nodeType":"888","messageId":"889","endLine":24,"endColumn":15},{"ruleId":"890","severity":1,"message":"928","line":41,"column":26,"nodeType":"892","messageId":"893","endLine":41,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":49,"column":69,"nodeType":"892","messageId":"893","endLine":49,"endColumn":71},{"ruleId":"890","severity":1,"message":"891","line":61,"column":57,"nodeType":"892","messageId":"893","endLine":61,"endColumn":59},{"ruleId":"890","severity":1,"message":"891","line":67,"column":60,"nodeType":"892","messageId":"893","endLine":67,"endColumn":62},{"ruleId":"890","severity":1,"message":"891","line":81,"column":13,"nodeType":"892","messageId":"893","endLine":81,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":94,"column":13,"nodeType":"892","messageId":"893","endLine":94,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":104,"column":13,"nodeType":"892","messageId":"893","endLine":104,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":114,"column":13,"nodeType":"892","messageId":"893","endLine":114,"endColumn":15},{"ruleId":"894","severity":1,"message":"929","line":137,"column":5,"nodeType":"896","endLine":137,"endColumn":7,"suggestions":"990"},{"ruleId":"894","severity":1,"message":"931","line":156,"column":3,"nodeType":"896","endLine":156,"endColumn":10,"suggestions":"991"},{"ruleId":"886","severity":1,"message":"923","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":14},{"ruleId":"886","severity":1,"message":"927","line":23,"column":9,"nodeType":"888","messageId":"889","endLine":23,"endColumn":15},{"ruleId":"890","severity":1,"message":"928","line":41,"column":26,"nodeType":"892","messageId":"893","endLine":41,"endColumn":28},{"ruleId":"890","severity":1,"message":"891","line":50,"column":69,"nodeType":"892","messageId":"893","endLine":50,"endColumn":71},{"ruleId":"890","severity":1,"message":"891","line":62,"column":57,"nodeType":"892","messageId":"893","endLine":62,"endColumn":59},{"ruleId":"890","severity":1,"message":"891","line":68,"column":60,"nodeType":"892","messageId":"893","endLine":68,"endColumn":62},{"ruleId":"894","severity":1,"message":"929","line":88,"column":5,"nodeType":"896","endLine":88,"endColumn":7,"suggestions":"992"},{"ruleId":"894","severity":1,"message":"931","line":107,"column":3,"nodeType":"896","endLine":107,"endColumn":10,"suggestions":"993"},{"ruleId":"890","severity":1,"message":"891","line":118,"column":13,"nodeType":"892","messageId":"893","endLine":118,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":131,"column":13,"nodeType":"892","messageId":"893","endLine":131,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":141,"column":13,"nodeType":"892","messageId":"893","endLine":141,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":151,"column":13,"nodeType":"892","messageId":"893","endLine":151,"endColumn":15},{"ruleId":"890","severity":1,"message":"891","line":15,"column":15,"nodeType":"892","messageId":"893","endLine":15,"endColumn":17},{"ruleId":"890","severity":1,"message":"891","line":17,"column":52,"nodeType":"892","messageId":"893","endLine":17,"endColumn":54},{"ruleId":"890","severity":1,"message":"891","line":20,"column":20,"nodeType":"892","messageId":"893","endLine":20,"endColumn":22},{"ruleId":"890","severity":1,"message":"891","line":22,"column":52,"nodeType":"892","messageId":"893","endLine":22,"endColumn":54},{"ruleId":"890","severity":1,"message":"891","line":25,"column":20,"nodeType":"892","messageId":"893","endLine":25,"endColumn":22},{"ruleId":"890","severity":1,"message":"891","line":27,"column":52,"nodeType":"892","messageId":"893","endLine":27,"endColumn":54},{"ruleId":"890","severity":1,"message":"891","line":30,"column":20,"nodeType":"892","messageId":"893","endLine":30,"endColumn":22},{"ruleId":"890","severity":1,"message":"891","line":32,"column":52,"nodeType":"892","messageId":"893","endLine":32,"endColumn":54},{"ruleId":"890","severity":1,"message":"891","line":35,"column":20,"nodeType":"892","messageId":"893","endLine":35,"endColumn":22},{"ruleId":"890","severity":1,"message":"891","line":37,"column":52,"nodeType":"892","messageId":"893","endLine":37,"endColumn":54},{"ruleId":"886","severity":1,"message":"887","line":16,"column":10,"nodeType":"888","messageId":"889","endLine":16,"endColumn":21},{"ruleId":"886","severity":1,"message":"994","line":2,"column":20,"nodeType":"888","messageId":"889","endLine":2,"endColumn":29},{"ruleId":"886","severity":1,"message":"994","line":2,"column":20,"nodeType":"888","messageId":"889","endLine":2,"endColumn":29},{"ruleId":"886","severity":1,"message":"994","line":2,"column":20,"nodeType":"888","messageId":"889","endLine":2,"endColumn":29},{"ruleId":"995","severity":1,"message":"996","line":8,"column":5,"nodeType":"997","messageId":"998","endLine":13,"endColumn":6},{"ruleId":"939","severity":1,"message":"964","line":9,"column":30,"nodeType":"941","messageId":"965","endLine":9,"endColumn":32},{"ruleId":"894","severity":1,"message":"999","line":15,"column":6,"nodeType":"896","endLine":15,"endColumn":16,"suggestions":"1000"},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":9,"nodeType":"888","messageId":"889","endLine":3,"endColumn":16},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":9,"nodeType":"888","messageId":"889","endLine":3,"endColumn":16},{"ruleId":"886","severity":1,"message":"987","line":17,"column":11,"nodeType":"888","messageId":"889","endLine":17,"endColumn":30},{"ruleId":"886","severity":1,"message":"1002","line":19,"column":12,"nodeType":"888","messageId":"889","endLine":19,"endColumn":16},{"ruleId":"886","severity":1,"message":"1003","line":20,"column":12,"nodeType":"888","messageId":"889","endLine":20,"endColumn":16},{"ruleId":"886","severity":1,"message":"1004","line":21,"column":12,"nodeType":"888","messageId":"889","endLine":21,"endColumn":16},{"ruleId":"886","severity":1,"message":"1005","line":22,"column":12,"nodeType":"888","messageId":"889","endLine":22,"endColumn":16},{"ruleId":"890","severity":1,"message":"891","line":33,"column":25,"nodeType":"892","messageId":"893","endLine":33,"endColumn":27},{"ruleId":"890","severity":1,"message":"891","line":34,"column":31,"nodeType":"892","messageId":"893","endLine":34,"endColumn":33},{"ruleId":"890","severity":1,"message":"891","line":38,"column":36,"nodeType":"892","messageId":"893","endLine":38,"endColumn":38},{"ruleId":"890","severity":1,"message":"891","line":41,"column":36,"nodeType":"892","messageId":"893","endLine":41,"endColumn":38},{"ruleId":"890","severity":1,"message":"891","line":45,"column":36,"nodeType":"892","messageId":"893","endLine":45,"endColumn":38},{"ruleId":"894","severity":1,"message":"895","line":63,"column":8,"nodeType":"896","endLine":63,"endColumn":10,"suggestions":"1006"},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":9,"nodeType":"888","messageId":"889","endLine":3,"endColumn":16},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":9,"nodeType":"888","messageId":"889","endLine":3,"endColumn":16},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":17},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":9,"nodeType":"888","messageId":"889","endLine":3,"endColumn":16},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":17},{"ruleId":"894","severity":1,"message":"1007","line":12,"column":5,"nodeType":"896","endLine":12,"endColumn":12,"suggestions":"1008"},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":10,"nodeType":"888","messageId":"889","endLine":3,"endColumn":17},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":9,"nodeType":"888","messageId":"889","endLine":3,"endColumn":16},{"ruleId":"886","severity":1,"message":"1001","line":3,"column":9,"nodeType":"888","messageId":"889","endLine":3,"endColumn":16},{"ruleId":"939","severity":1,"message":"940","line":6,"column":45,"nodeType":"941","messageId":"942","endLine":6,"endColumn":47},{"ruleId":"890","severity":1,"message":"891","line":7,"column":18,"nodeType":"892","messageId":"893","endLine":7,"endColumn":20},{"ruleId":"890","severity":1,"message":"891","line":9,"column":24,"nodeType":"892","messageId":"893","endLine":9,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":9,"column":60,"nodeType":"892","messageId":"893","endLine":9,"endColumn":62},{"ruleId":"890","severity":1,"message":"891","line":9,"column":109,"nodeType":"892","messageId":"893","endLine":9,"endColumn":111},{"ruleId":"890","severity":1,"message":"891","line":9,"column":144,"nodeType":"892","messageId":"893","endLine":9,"endColumn":146},{"ruleId":"890","severity":1,"message":"891","line":14,"column":23,"nodeType":"892","messageId":"893","endLine":14,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":16,"column":24,"nodeType":"892","messageId":"893","endLine":16,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":16,"column":73,"nodeType":"892","messageId":"893","endLine":16,"endColumn":75},{"ruleId":"890","severity":1,"message":"891","line":16,"column":128,"nodeType":"892","messageId":"893","endLine":16,"endColumn":130},{"ruleId":"890","severity":1,"message":"891","line":16,"column":165,"nodeType":"892","messageId":"893","endLine":16,"endColumn":167},{"ruleId":"890","severity":1,"message":"891","line":16,"column":210,"nodeType":"892","messageId":"893","endLine":16,"endColumn":212},{"ruleId":"890","severity":1,"message":"891","line":21,"column":23,"nodeType":"892","messageId":"893","endLine":21,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":23,"column":24,"nodeType":"892","messageId":"893","endLine":23,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":23,"column":80,"nodeType":"892","messageId":"893","endLine":23,"endColumn":82},{"ruleId":"890","severity":1,"message":"891","line":23,"column":124,"nodeType":"892","messageId":"893","endLine":23,"endColumn":126},{"ruleId":"890","severity":1,"message":"891","line":23,"column":164,"nodeType":"892","messageId":"893","endLine":23,"endColumn":166},{"ruleId":"890","severity":1,"message":"891","line":28,"column":23,"nodeType":"892","messageId":"893","endLine":28,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":30,"column":24,"nodeType":"892","messageId":"893","endLine":30,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":35,"column":23,"nodeType":"892","messageId":"893","endLine":35,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":37,"column":24,"nodeType":"892","messageId":"893","endLine":37,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":42,"column":23,"nodeType":"892","messageId":"893","endLine":42,"endColumn":25},{"ruleId":"890","severity":1,"message":"891","line":44,"column":24,"nodeType":"892","messageId":"893","endLine":44,"endColumn":26},{"ruleId":"890","severity":1,"message":"891","line":44,"column":70,"nodeType":"892","messageId":"893","endLine":44,"endColumn":72},{"ruleId":"890","severity":1,"message":"891","line":44,"column":119,"nodeType":"892","messageId":"893","endLine":44,"endColumn":121},{"ruleId":"886","severity":1,"message":"1009","line":4,"column":10,"nodeType":"888","messageId":"889","endLine":4,"endColumn":18},{"ruleId":"890","severity":1,"message":"928","line":25,"column":26,"nodeType":"892","messageId":"893","endLine":25,"endColumn":28},{"ruleId":"894","severity":1,"message":"929","line":44,"column":6,"nodeType":"896","endLine":44,"endColumn":8,"suggestions":"1010"},"no-native-reassign",["1011"],"no-negated-in-lhs",["1012"],"react/jsx-pascal-case","Imported JSX component Register_teacher must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Register_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Register_Mul_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Student_Dashboard must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Student_Profile must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sem1_Student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Testreport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Classreport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Assignmentreport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Assignmentreport_teacher must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Teacher_Dashboard must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Teacher_Profile must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Classreport_semester must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Testreport_semester must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Assignmentreport_semester must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Studymaterial_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Attendancereport_student must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Studymaterial_teacher must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Attendance_report must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component AdClasses_taken must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'loginstatus' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["1013"],"'response' is assigned a value but never used.",["1014"],["1015"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["1016"],"'setIsdotVisible' is assigned a value but never used.","'empty' is assigned a value but never used.","'setempty' is assigned a value but never used.","'req' is assigned a value but never used.",["1017"],["1018"],["1019"],["1020"],["1021"],["1022"],["1023"],["1024"],"'rollNum' is assigned a value but never used.",["1025"],"'studymaterial' is assigned a value but never used.","'setstudymaterial' is assigned a value but never used.","'logo' is defined but never used.",["1026"],["1027"],"'Link' is defined but never used.","'FaIcons' is defined but never used.",["1028"],["1029"],"'report' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'fetchdata' and 'navigate'. Either include them or remove the dependency array.",["1030"],"React Hook useEffect has missing dependencies: 'dateval', 'monthval', 'overall', 'subjectval', and 'val'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHeading' needs the current value of 'val'.",["1031"],"'AiIcons' is defined but never used.",["1032"],["1033"],["1034"],"'useRef' is defined but never used.","'useReactToPrint' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["1035"],["1036"],["1037"],"'errmsg' is assigned a value but never used.",["1038"],"React Hook useEffect has missing dependencies: 'sem1', 'sem2', 'sem3', and 'sem4'. Either include them or remove the dependency array.",["1039"],["1040"],["1041"],["1042"],"React Hook useEffect has missing dependencies: 'sem1', 'sem2', 'sem3', 'sem4', and 'semester'. Either include them or remove the dependency array.",["1043"],["1044"],["1045"],["1046"],["1047"],["1048"],["1049"],"'exporttoexcelhandler' is assigned a value but never used.","'exporttopdfhandler' is assigned a value but never used.","'XLSX' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside",["1050"],"'deadline' is assigned a value but never used.","'setdeadline' is assigned a value but never used.",["1051"],["1052"],["1053"],["1054"],["1055"],["1056"],"'jsPDF' is defined but never used.","'autoTable' is defined but never used.","'Navigate' is defined but never used.",["1057"],["1058"],["1059"],["1060"],["1061"],["1062"],["1063"],["1064"],["1065"],"'showsemesterhandler' is assigned a value but never used.",["1066"],["1067"],["1068"],["1069"],["1070"],["1071"],"'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'setstatus'. Either include it or remove the dependency array. If 'setstatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1072"],"'CSVLink' is defined but never used.","'sem1' is assigned a value but never used.","'sem2' is assigned a value but never used.","'sem3' is assigned a value but never used.","'sem4' is assigned a value but never used.",["1073"],"React Hook useEffect has missing dependencies: 'setTemp' and 'setremovefileid'. Either include them or remove the dependency array. If 'setTemp' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1074"],"'navigate' is defined but never used.",["1075"],"no-global-assign","no-unsafe-negation",{"desc":"1076","fix":"1077"},{"desc":"1076","fix":"1078"},{"desc":"1076","fix":"1079"},{"desc":"1076","fix":"1080"},{"desc":"1076","fix":"1081"},{"desc":"1076","fix":"1082"},{"desc":"1076","fix":"1083"},{"desc":"1076","fix":"1084"},{"desc":"1076","fix":"1085"},{"desc":"1076","fix":"1086"},{"desc":"1076","fix":"1087"},{"desc":"1076","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1089","fix":"1091"},{"desc":"1089","fix":"1092"},{"desc":"1093","fix":"1094"},{"desc":"1076","fix":"1095"},{"desc":"1096","fix":"1097"},{"desc":"1098","fix":"1099"},{"desc":"1089","fix":"1100"},{"desc":"1096","fix":"1101"},{"desc":"1098","fix":"1102"},{"desc":"1096","fix":"1103"},{"desc":"1076","fix":"1104"},{"desc":"1096","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},{"desc":"1076","fix":"1110"},{"desc":"1108","fix":"1111"},{"desc":"1076","fix":"1112"},{"desc":"1113","fix":"1114"},{"desc":"1076","fix":"1115"},{"desc":"1096","fix":"1116"},{"desc":"1098","fix":"1117"},{"desc":"1076","fix":"1118"},{"desc":"1076","fix":"1119"},{"desc":"1076","fix":"1120"},{"desc":"1096","fix":"1121"},{"desc":"1076","fix":"1122"},{"desc":"1096","fix":"1123"},{"desc":"1098","fix":"1124"},{"desc":"1076","fix":"1125"},{"desc":"1076","fix":"1126"},{"desc":"1076","fix":"1127"},{"desc":"1076","fix":"1128"},{"desc":"1076","fix":"1129"},{"desc":"1076","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1076","fix":"1133"},{"desc":"1076","fix":"1134"},{"desc":"1076","fix":"1135"},{"desc":"1096","fix":"1136"},{"desc":"1098","fix":"1137"},{"desc":"1096","fix":"1138"},{"desc":"1098","fix":"1139"},{"desc":"1096","fix":"1140"},{"desc":"1098","fix":"1141"},{"desc":"1096","fix":"1142"},{"desc":"1098","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1076","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1096","fix":"1149"},"Update the dependencies array to be: [navigate]",{"range":"1150","text":"1151"},{"range":"1152","text":"1151"},{"range":"1153","text":"1151"},{"range":"1154","text":"1151"},{"range":"1155","text":"1151"},{"range":"1156","text":"1151"},{"range":"1157","text":"1151"},{"range":"1158","text":"1151"},{"range":"1159","text":"1151"},{"range":"1160","text":"1151"},{"range":"1161","text":"1151"},{"range":"1162","text":"1151"},"Update the dependencies array to be: [name, navigate]",{"range":"1163","text":"1164"},{"range":"1165","text":"1164"},{"range":"1166","text":"1164"},"Update the dependencies array to be: [navigate, teacher_id]",{"range":"1167","text":"1168"},{"range":"1169","text":"1151"},"Update the dependencies array to be: [fetchdata, navigate]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [Print, dateval, monthval, overall, subjectval, val]",{"range":"1172","text":"1173"},{"range":"1174","text":"1164"},{"range":"1175","text":"1171"},{"range":"1176","text":"1173"},{"range":"1177","text":"1171"},{"range":"1178","text":"1151"},{"range":"1179","text":"1171"},"Update the dependencies array to be: [enrollNum, navigate]",{"range":"1180","text":"1181"},"Update the dependencies array to be: [report, sem1, sem2, sem3, sem4]",{"range":"1182","text":"1183"},{"range":"1184","text":"1151"},{"range":"1185","text":"1183"},{"range":"1186","text":"1151"},"Update the dependencies array to be: [sem1, sem2, sem3, sem4, semester, student]",{"range":"1187","text":"1188"},{"range":"1189","text":"1151"},{"range":"1190","text":"1171"},{"range":"1191","text":"1173"},{"range":"1192","text":"1151"},{"range":"1193","text":"1151"},{"range":"1194","text":"1151"},{"range":"1195","text":"1171"},{"range":"1196","text":"1151"},{"range":"1197","text":"1171"},{"range":"1198","text":"1173"},{"range":"1199","text":"1151"},{"range":"1200","text":"1151"},{"range":"1201","text":"1151"},{"range":"1202","text":"1151"},{"range":"1203","text":"1151"},{"range":"1204","text":"1151"},"Update the dependencies array to be: [sem1, sem2, sem3, sem4, study]",{"range":"1205","text":"1206"},{"range":"1207","text":"1151"},{"range":"1208","text":"1151"},{"range":"1209","text":"1151"},{"range":"1210","text":"1171"},{"range":"1211","text":"1173"},{"range":"1212","text":"1171"},{"range":"1213","text":"1173"},{"range":"1214","text":"1171"},{"range":"1215","text":"1173"},{"range":"1216","text":"1171"},{"range":"1217","text":"1173"},"Update the dependencies array to be: [setstatus, students]",{"range":"1218","text":"1219"},{"range":"1220","text":"1151"},"Update the dependencies array to be: [files, setTemp, setremovefileid]",{"range":"1221","text":"1222"},{"range":"1223","text":"1171"},[1793,1795],"[navigate]",[1787,1789],[1791,1793],[1769,1771],[5136,5138],[4839,4841],[4768,4770],[4824,4826],[4868,4870],[4756,4758],[4755,4757],[4821,4823],[1455,1461],"[name, navigate]",[1864,1870],[1421,1427],[2246,2258],"[navigate, teacher_id]",[1278,1280],[3068,3070],"[fetchdata, navigate]",[3404,3411],"[Print, dateval, monthval, overall, subjectval, val]",[2272,2278],[3023,3025],[3359,3366],[1796,1798],[1681,1683],[1841,1843],[2168,2179],"[enrollNum, navigate]",[2883,2891],"[report, sem1, sem2, sem3, sem4]",[3250,3252],[2892,2900],[3252,3254],[2577,2586],"[sem1, sem2, sem3, sem4, semester, student]",[2882,2884],[4084,4086],[4420,4427],[1474,1476],[1297,1299],[1522,1524],[3638,3640],[2483,2485],[3026,3028],[3362,3369],[2418,2420],[2422,2424],[2523,2525],[1569,1571],[2483,2485],[2483,2485],[2102,2109],"[sem1, sem2, sem3, sem4, study]",[2488,2490],[2423,2425],[2479,2481],[3730,3732],[4066,4073],[2572,2574],[2908,2915],[3583,3585],[3919,3926],[2525,2527],[2861,2868],[349,359],"[setstatus, students]",[1817,1819],[444,451],"[files, setTemp, setremovefileid]",[1292,1294]]